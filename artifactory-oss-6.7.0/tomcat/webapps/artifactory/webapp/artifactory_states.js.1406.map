{"version":3,"sources":["webpack:///./states/artifactory.states.module.js","webpack:///./constants/artifacts_events.constants.js?35a2*","webpack:///./constants/api.constants.js?b99e*","webpack:///./constants/artifact_tooltip.constant.js?cbf3*","webpack:///./constants/field_options.constats.js?9ddb*","webpack:///./constants/artifacts_actions.constants.js?f96a","webpack:///./constants/artifacts_messages.constants.js?ab14","webpack:///./states/admin/admin.module.js","webpack:///./states/admin/configuration/configuration.module.js","webpack:///./states/admin/configuration/licenses/licenses.module.js","webpack:///./states/admin/configuration/licenses/licenses.controller.js","webpack:///./states/admin/configuration/licenses/license_form.controller.js","webpack:///./states/admin/configuration/mail/mail.module.js","webpack:///./states/admin/configuration/mail/mail.controller.js","webpack:///./states/admin/configuration/xray/xray.module.js","webpack:///./states/admin/configuration/xray/xray.controller.js","webpack:///./constants/configuration_messages.constants.js","webpack:///./states/admin/configuration/proxies/proxies.module.js","webpack:///./states/admin/configuration/proxies/proxies.controller.js","webpack:///./states/admin/configuration/proxies/proxy_form.controller.js","webpack:///./states/admin/configuration/reverse_proxies/reverse_proxies.module.js","webpack:///./states/admin/configuration/reverse_proxies/reverse_proxies.controller.js","webpack:///./states/admin/configuration/reverse_proxies/reverse_proxy_form.controller.js","webpack:///./states/admin/configuration/register_pro/register_pro.module.js","webpack:///./states/admin/configuration/register_pro/register_pro.controller.js","webpack:///./states/admin/configuration/bintray/bintray.module.js","webpack:///./states/admin/configuration/bintray/bintray.controller.js","webpack:///./states/admin/configuration/general/general.module.js","webpack:///./states/admin/configuration/general/general.controller.js","webpack:///./states/admin/configuration/property_sets/property_sets.module.js","webpack:///./states/admin/configuration/property_sets/property_sets.controller.js","webpack:///./states/admin/configuration/property_sets/property_set_form.controller.js","webpack:///./states/admin/configuration/property_sets/property_form_modal.js","webpack:///./states/admin/configuration/ha/ha.module.js","webpack:///./states/admin/configuration/ha/ha.controller.js","webpack:///./states/admin/configuration/configuration.controller.js","webpack:///./states/admin/repositories/repositories.module.js","webpack:///./states/admin/repositories/repositories.controller.js","webpack:///./states/admin/repositories/repository_form.constants.js","webpack:///./states/admin/repositories/repository_form.controller.js","webpack:///./states/admin/repositories/virtual_repository_form.controller.js","webpack:///./states/admin/repositories/repositories_layouts.controller.js","webpack:///./states/admin/repositories/repository_layout_form.controller.js","webpack:///./states/admin/advanced/advanced.module.js","webpack:///./states/admin/advanced/config_descriptor/config_descriptor.module.js","webpack:///./states/admin/advanced/config_descriptor/config_descriptor.controller.js","webpack:///./states/admin/advanced/maintenance/maintenance.module.js","webpack:///./states/admin/advanced/maintenance/maintenance.controller.js","webpack:///./states/admin/advanced/security_descriptor/security_descriptor.module.js","webpack:///./states/admin/advanced/security_descriptor/security_descriptor.controller.js","webpack:///./states/admin/advanced/storage_summary/storage_summary.module.js","webpack:///./states/admin/advanced/storage_summary/storage_summary.controller.js","webpack:///./states/admin/advanced/system_info/system_info.module.js","webpack:///./states/admin/advanced/system_info/system_info.controller.js","webpack:///./states/admin/advanced/system_logs/system_logs.module.js","webpack:///./states/admin/advanced/system_logs/system_logs.controller.js","webpack:///./states/admin/advanced/support_page/support_page.module.js","webpack:///./states/admin/advanced/support_page/support_page.controller.js","webpack:///./states/admin/advanced/log_analytics/log_analytics.module.js","webpack:///./states/admin/advanced/log_analytics/log_analytics.controller.js","webpack:///./states/admin/advanced/advanced.controller.js","webpack:///./states/admin/dashboard/dashboard.module.js","webpack:///./states/admin/import_export/import_export.module.js","webpack:///./states/admin/import_export/repositories/repositories.module.js","webpack:///./states/admin/import_export/repositories/repositories.controller.js","webpack:///./states/admin/import_export/system/system.module.js","webpack:///./states/admin/import_export/system/system.controller.js","webpack:///./states/admin/import_export/import_export.controller.js","webpack:///./states/admin/security/security.module.js","webpack:///./states/admin/security/general/general.module.js","webpack:///./states/admin/security/general/general.controller.js","webpack:///./states/admin/security/groups/groups.module.js","webpack:///./states/admin/security/groups/group.controller.js","webpack:///./states/admin/security/groups/group_form.controller.js","webpack:///./states/admin/security/http_sso/http_sso.module.js","webpack:///./states/admin/security/http_sso/http_sso.controller.js","webpack:///./states/admin/security/ssh_server/ssh_server.module.js","webpack:///./states/admin/security/ssh_server/ssh_server.controller.js","webpack:///./states/admin/security/permissions/permissions.module.js","webpack:///./states/admin/security/permissions/permissions.controller.js","webpack:///./states/admin/security/permissions/permissons_form.controller.js","webpack:///./states/admin/security/users/users.module.js","webpack:///./states/admin/security/users/users.controller.js","webpack:///./states/admin/security/users/user_form.controller.js","webpack:///./constants/user_actions.constants.js","webpack:///./states/admin/security/saml_integration/saml_integration.module.js","webpack:///./states/admin/security/saml_integration/saml_integration.controller.js","webpack:///./states/admin/security/crowd_integration/crowd_integration.module.js","webpack:///./states/admin/security/crowd_integration/crowd_integration.controller.js","webpack:///./states/admin/security/oauth/oauth.module.js","webpack:///./states/admin/security/oauth/oauth.controller.js","webpack:///./states/admin/security/oauth/oauth_provider_form.controller.js","webpack:///./states/admin/security/ldap_settings/ldap_settings.module.js","webpack:///./states/admin/security/ldap_settings/ldap_settings.controller.js","webpack:///./states/admin/security/ldap_settings/ldap_setting_form.controller.js","webpack:///./states/admin/security/ldap_settings/ldap_group_form.controller.js","webpack:///./states/admin/security/signing_keys/signing_keys.module.js","webpack:///./states/admin/security/signing_keys/signing_keys.controller.js","webpack:///./states/admin/security/trusted_keys/trusted_keys.module.js","webpack:///./states/admin/security/trusted_keys/trusted_keys.controller.js","webpack:///./states/admin/security/access_tokens/access_tokens.module.js","webpack:///./states/admin/security/access_tokens/access_tokens.controller.js","webpack:///./states/admin/security/ssl_certificates/ssl_certificates.module.js","webpack:///./states/admin/security/ssl_certificates/ssl_certificates.controller.js","webpack:///./states/admin/security/security.controller.js","webpack:///./states/admin/services/admin.services.module.js","webpack:///./states/admin/services/backups/backups.module.js","webpack:///./states/admin/services/backups/backups.controller.js","webpack:///./states/admin/services/backups/backup_form.controller.js","webpack:///./states/admin/services/indexer/indexer.module.js","webpack:///./states/admin/services/indexer/indexer.controller.js","webpack:///./states/admin/services/services.controller.js","webpack:///./states/admin/admin.controller.js","webpack:///./states/artifacts/artifacts.module.js","webpack:///./states/artifacts/artifacts/artifacts.controller.js","webpack:///./states/artifacts/constants/artifact_browser_icons.constant.js","webpack:///./states/artifacts/browsers/browsers.controller.js","webpack:///./states/artifacts/jf_tree_search/jf_tree_search.js","webpack:///./constants/keys.constants.js","webpack:///./states/artifacts/jf_tree_browser/jf_tree_browser.js","webpack:///./states/artifacts/jf_common_browser/jf_common_browser.js","webpack:///./states/artifacts/jf_tree_browser/jf_trash_pin.js","webpack:///./states/artifacts/jf_stash_browser/jf_stash_browser.js","webpack:///./states/artifacts/services/select_target_path.js","webpack:///./states/artifacts/services/common_grid_columns.js","webpack:///./states/artifacts/services/select_delete_versions.js","webpack:///./states/artifacts/jf_artifact_info/jf_artifact_info.js","webpack:///./states/artifacts/constants/artifact_general.constant.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/info_tabs.module.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_builds.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_xray.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_effective_permissions.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_watchers.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_general.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_properties.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_view_source.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_pom_view.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_xml_view.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_ivy_view.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_nuget.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_composer.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_pypi.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_helm.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_go.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_cran.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_conda.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_puppet.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_bower.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_docker.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_docker_ancestry.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_docker_v2.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_ruby_gems.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_npm_info.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_rpm_info.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_cocoapods.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_conan.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_conan_package.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_stash_info.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_debian_info.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_opkg_info.js","webpack:///./states/artifacts/jf_artifact_info/info_tabs/jf_chef_info.js","webpack:///./states/builds/builds.module.js","webpack:///./states/builds/all_builds.controller.js","webpack:///./states/builds/builds_page/builds_page.controller.js","webpack:///./states/builds/constants/builds.constants.js","webpack:///./states/builds/build_tabs/build_tabs.module.js","webpack:///./states/builds/build_tabs/jf_published_modules.js","webpack:///./states/builds/build_tabs/jf_build_info_json.js","webpack:///./states/builds/build_tabs/jf_environment.js","webpack:///./states/builds/build_tabs/jf_issues.js","webpack:///./states/builds/build_tabs/jf_diff.js","webpack:///./states/builds/build_tabs/jf_release_history.js","webpack:///./states/builds/build_tabs/jf_licenses.js","webpack:///./states/builds/build_tabs/jf_effective_permission.js","webpack:///./states/bundles/bundles.module.js","webpack:///./states/bundles/bundles_list.controller.js","webpack:///./states/bundles/bundle_page.controller.js","webpack:///./states/home/home.module.js","webpack:///./states/home/home.controller.js","webpack:///./home_widgets/artifacts_count_widget/artifacts_count.controller.js","webpack:///./home_widgets/version_widget/version.controller.js","webpack:///./home_widgets/updates_widget/updates.controller.js","webpack:///./home_widgets/quick_search/quick_search.controller.js","webpack:///./home_widgets/addons_widget/addons.controller.js","webpack:///./home_widgets/links_widget/links.controller.js","webpack:///./home_widgets/most_downloaded_widget/most_downloaded.js","webpack:///./home_widgets/last_deployed_widget/last_deployed.js","webpack:///./home_widgets/set_me_up_widget/set-me-up.controller.js","webpack:///./states/oauth_error/oauth_error.module.js","webpack:///./states/not_found_404/not_found_404.module.js","webpack:///./states/forbidden_403/forbidden_403.module.js","webpack:///./states/login/login.module.js","webpack:///./states/login/login.controller.js","webpack:///./states/change_password/change_password.module.js","webpack:///./states/change_password/change_password.controller.js","webpack:///./states/forgot_password/forgot_password.module.js","webpack:///./states/forgot_password/forgot_password.controller.js","webpack:///./states/forgot_password/reset_password.controller.js","webpack:///./states/user_profile/user_profile.module.js","webpack:///./states/user_profile/user_profile.controller.js","webpack:///./states/server_error_5XX/server_error_5XX.module.js","webpack:///./states/server_down/server_down.module.js","webpack:///./states/base/base.module.js","webpack:///./states/base/base.controller.js","webpack:///./states/search/search.module.js","webpack:///./states/search/search.controller.js","webpack:///./states/search/search_query_maker.js","webpack:///./states/search/search_descriptor.js","webpack:///./states/search/package_search.js","webpack:///./states/package_native/native.module.js","webpack:///./states/package_native/native.controller.js","webpack:///./states/package_native/native.view.html"],"names":[],"mappings":"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","file":"artifactory_states.1406.js","sourcesContent":["/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport AdminState from './admin/admin.module';\nimport ArtifactState from './artifacts/artifacts.module';\nimport BuildsState from './builds/builds.module';\nimport BundlesState from './bundles/bundles.module';\nimport HomeModule from './home/home.module';\nimport OAuthErrorModule from './oauth_error/oauth_error.module';\nimport notFound404 from './not_found_404/not_found_404.module';\nimport Forbidden403 from './forbidden_403/forbidden_403.module';\nimport Login from './login/login.module';\nimport ChangePassword from './change_password/change_password.module';\nimport ForgotPassword from './forgot_password/forgot_password.module';\nimport UserProfile from './user_profile/user_profile.module';\nimport ServerError5XX from './server_error_5XX/server_error_5XX.module';\nimport ServerDown from './server_down/server_down.module';\nimport BaseState from './base/base.module';\nimport Search from './search/search.module';\nimport {MODULE_PACKAGE_NATIVE} from \"./package_native/native.module\";\n\nangular.module('artifactory.states', [\n    AdminState.name,\n    ArtifactState.name,\n    BuildsState.name,\n    BundlesState.name,\n    HomeModule.name,\n    OAuthErrorModule.name,\n    notFound404.name,\n    Forbidden403.name,\n    Login.name,\n    ChangePassword.name,\n    ForgotPassword.name,\n    UserProfile.name,\n    ServerDown.name,\n    ServerError5XX.name,\n    BaseState.name,\n    Search.name,\n    MODULE_PACKAGE_NATIVE,\n    'artifactory.services',\n    'artifactory.dao',\n    'cfp.hotkeys',\n    'ui.router'\n    ])\n    .run(changeStateHook);\n\nfunction changeStateHook(User, $rootScope, $q, JFrogNotifications, $location, $timeout, $state, TreeBrowserDao,\n                         ArtifactoryFeatures, FooterDao, ArtifactoryState, JFrogEventBus, OnBoardingWizard) {\n\n    let EVENTS = JFrogEventBus.getEventsDefinition();\n\n    JFrogEventBus.register(EVENTS.USER_LOGOUT, (confirmDiscard) => {\n        if (confirmDiscard === true) {\n            checkDiscardConfirmation($q).then(()=>{\n                JFrogEventBus.dispatch(EVENTS.USER_LOGOUT);\n            })\n        }\n    });\n\n    $rootScope.$on('$locationChangeStart', (e,newUrl)=>{\n        if (ArtifactoryState.getState('confirmDiscardModalOpen')) {\n            e.preventDefault();\n        }\n    });\n\n    $rootScope.$on('$locationChangeSuccess', () => {\n        if (window.ga) {\n            let gaTrackPage = ArtifactoryState.getState('gaTrackPage');\n            if (gaTrackPage && typeof gaTrackPage === 'function') gaTrackPage();\n        }\n    })\n\n    let pendingOnboarding = false;\n    let firstStateChange = true;\n    $rootScope.$on('$stateChangeStart', (e, toState, toParams, fromState, fromParams) => {\n        if (firstStateChange) {\n            firstStateChange = false;\n            pendingOnboarding = true;\n            let pending = {toState, toParams, search: $location.search()};\n            OnBoardingWizard.isSystemOnboarding().then((onBoarding) => {\n                pendingOnboarding = false;\n                let redirectFromBintray = !!(pending.search.client_id && pending.search.code && pending.search.scope);\n                let ssoRedirect = !!pending.search.redirectTo && pending.toState.name === 'login';\n                let resetPassword = !!(pending.toState.name === 'reset-password' && pending.search.key);\n                if (onBoarding && !redirectFromBintray && !resetPassword && !ssoRedirect) {\n                    $state.go('home').then(()=>{\n                        OnBoardingWizard.show();\n                    })\n                }\n                else {\n                    $state.go(pending.toState.name,pending.toParams).then(()=>{\n                        $location.search(pending.search);\n                    })\n                }\n            })\n            e.preventDefault();\n            return;\n        }\n        let onboardingWizardOpen = ArtifactoryState.getState('onboardingWizardOpen')\n        if (toState.name !== 'home' && (pendingOnboarding || onboardingWizardOpen === true)) {\n            e.preventDefault();\n            return;\n        }\n\n\n        if (fromState.name.startsWith('admin.') || fromState.name === 'user_profile') {\n            if (!ArtifactoryState.getState('confirmDiscardModalOpen')) {\n                checkDiscardConfirmation($q, e).then(()=> {\n                    $state.go(toState.name, toParams);\n                });\n            }\n            else {\n                e.preventDefault();\n                return;\n            }\n        }\n        let saveAdminState = ArtifactoryState.getState('saveAdminState');\n\n        if (toState.name.startsWith('admin.') && !toState.name.match(/(?:.new|.edit)\\b/) && saveAdminState && !e.defaultPrevented) {\n            ArtifactoryState.setState('lastAdminState', toState);\n            ArtifactoryState.setState('lastAdminStateParams', toParams);\n            ArtifactoryState.removeState('saveAdminState');\n        }\n        else if (saveAdminState && !e.defaultPrevented) {\n            ArtifactoryState.removeState('saveAdminState');\n        }\n\n\n        if (fromState.name && toState.name && fromState.name != toState.name) {\n            JFrogEventBus.dispatch(EVENTS.CANCEL_SPINNER);\n        }\n\n        if (toState.name === 'artifacts.browsers.search') {\n            //MOVED FROM artifacts.module.js to prevent error message (ui-router bug workaround)\n            JFrogEventBus.dispatch(EVENTS.SEARCH_URL_CHANGED, toParams);\n        }\n        else if (fromState.name === 'artifacts.browsers.search') {\n            JFrogEventBus.dispatch(EVENTS.CLEAR_SEARCH);\n        }\n\n        if (fromState.name.startsWith('artifacts.browsers.')) {\n            TreeBrowserDao.invalidateRoots();\n        }\n\n        if (toState.name === 'change-password' && !toParams.username) {\n            e.preventDefault();\n            $state.go('login');\n        }\n\n        if (toState.name === 'oauth_error') {\n            e.preventDefault();\n\n            let message = $location.search().message;\n            let gotoState = localStorage.stateBeforeOAuth;\n\n            if (gotoState === 'login') {\n                $state.go(gotoState,{oauthError: message, location: \"replace\"});\n            }\n            else if (gotoState === 'user_profile') {\n                JFrogNotifications.create({error: message});\n                $state.go(gotoState,{location: \"replace\"});\n            }\n            else {\n                JFrogNotifications.create({error: message});\n                $state.go('home',{location: \"replace\"});\n            }\n        }\n\n        if (toState.name.match(/^builds/) && !User.getCurrent().getCanDeploy()) {\n            toParams.tab = 'published';\n        }\n\n        if (toState.name === 'login' && $location.path() !== '/login' && $location.path() !== '/forgot-password' && $location.path() !== '/change-password' && $location.path() !== '/oauth_error' && !$location.path().startsWith('/resetpassword') && !$location.path().startsWith('/404') && !$location.path().startsWith('/403')) {\n            let afterLogin = ArtifactoryState.getState('urlAfterLogin');\n            if (!afterLogin) ArtifactoryState.setState('urlAfterLogin', $location.path());\n        }\n\n\n        // Permissions:\n\n        if (!User.getCurrent().canView(toState.name, toParams)) {\n            if (User.getCurrent().isProWithoutLicense()) {\n                $timeout(() => $location.path('admin/configuration/register_pro'));\n            }else {\n                if ($location.path() !== '/login') ArtifactoryState.setState('urlAfterLogin', $location.path());\n                e.preventDefault();\n                if (User.getCurrent().name === 'anonymous') {\n                    JFrogNotifications.create({error: 'You are not authorized to view this page'});\n                    $timeout(() => $location.path('/login'));\n                }\n                else {\n                    $timeout(() => $location.path('/403'));\n                }\n            }\n        }\n        // Features per license:\n        else {\n            let feature = toParams.feature;\n            // Must verify footer data is available before checking (for initial page load)\n            FooterDao.get().then(() => {\n                if (ArtifactoryFeatures.isDisabled(feature) || ArtifactoryFeatures.isHidden(feature)) {\n                JFrogNotifications.create({error: 'Page unavailable'});\n                    e.preventDefault();\n                    $timeout(() => $location.path('/home'));\n                }\n            });\n        }\n\n        if (!e.defaultPrevented) {\n            JFrogEventBus.dispatch(EVENTS.CLOSE_MODAL);\n            if (ArtifactoryState.getState('clearErrorsOnStateChange')) {\n                ArtifactoryState.removeState('clearErrorsOnStateChange');\n                JFrogEventBus.dispatch(EVENTS.CLOSE_NOTIFICATIONS);\n            }\n        }\n    })\n}\n\n\nfunction checkDiscardConfirmation($q, e) {\n\n    let defer = $q.defer();\n    let forms = $('form');\n    let changeDiscovered = false;\n    for (let i = 0; i< forms.length; i++) {\n        let form = forms[i];\n        let controller = angular.element(form).controller();\n        if (controller && controller._$modelSaver$_ && controller._$modelSaver$_.confirmOnLeave && !controller._$modelSaver$_.isModelSaved()) {\n            changeDiscovered = true;\n\n            controller._$modelSaver$_.ask().then(()=>{\n                controller._$modelSaver$_.confirmOnLeave =   false;\n                defer.resolve();\n            });\n\n            break;\n        }\n    }\n\n    if (!changeDiscovered && !e) {\n        defer.resolve();\n    }\n    else if (changeDiscovered && e) {\n        e.preventDefault();\n    }\n\n    return defer.promise;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifactory.states.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nlet events = {\n    ACTIVATE_TREE_SEARCH:   'tree:search:activate',\n    TREE_SEARCH_CHANGE:     'tree:search:change',\n    TREE_NODE_SELECT:       'tree:node:select',\n    TREE_NODE_OPEN:         'tree:node:open',\n    TREE_SEARCH_KEYDOWN:    'tree:search:keydown',\n    TREE_SEARCH_CANCEL:     'tree:search:cancel',\n    TREE_SEARCH_EDIT:       'tree:search:edit',\n    TREE_SEARCH_RUNNING:    'tree:search:running',\n    TREE_COMPACT:           'tree:compact',\n    TREE_REFRESH:           'tree:refresh',\n    TREE_REFRESH_SORTING:   'tree:refresh:sorting',\n    TREE_REFRESH_FILTER:   'tree:refresh:filter',\n    TREE_REFRESH_FAVORITES:   'tree:refresh:favorites',\n    TREE_NODE_CM_REFRESH:   'tree:node:cm:refresh',\n    TREE_COLLAPSE_ALL:      'tree:collapse:all',\n    TREE_DATA_IS_SET:       'tree:hasdata',\n    SEARCH_COLLAPSE:        'search:collapse',\n    SEARCH:                 'search',\n    CLEAR_SEARCH:           'search:clear',\n\n    ACTION_WATCH:           'action:watch',    // node\n    ACTION_UNWATCH:         'action:unwatch',  // node\n    ACTION_COPY:            'action:copy',     // node, target\n    ACTION_MOVE:            'action:move',     // node, target\n    ACTION_COPY_STASH:            'action:copystash',     // repoKey\n    ACTION_MOVE_STASH:            'action:movestash',     // repoKey\n    ACTION_DISCARD_STASH:         'action:discardstash',     //\n    ACTION_DISCARD_FROM_STASH:         'action:discardfromstash',     //node\n    ACTION_REFRESH_STASH:         'action:refreshstash',     //\n    ACTION_EXIT_STASH:         'action:exitstash',     //\n    ACTION_DELETE:          'action:delete',   // node\n    ACTION_DELETE_CONTENT:          'action:delete:content',   // node\n    ACTION_REFRESH:         'action:refresh',   // node\n    ACTION_DEPLOY:         'action:deploy',   // repoKey\n    ACTION_FAVORITES:    'action:markfavorites',\n    DO_FAVORITES:    'action:dofavorites',\n\n    BUILDS_TAB_REFRESH:     'builds:tab:refresh',\n\n    FOOTER_DATA_UPDATED: 'footer:data:updated',\n\n    SHOW_SPINNER: 'spinner:show',\n    HIDE_SPINNER: 'spinner:hide',\n    CANCEL_SPINNER: 'spinner:cancel',\n\n    USER_CHANGED:           'user:changed',\n    USER_LOGOUT:            'user:logout', //confirmDiscard (true/false)\n\n    TAB_NODE_CHANGED:       'tabs:node:changed',\n\n    SEARCH_URL_CHANGED:     'search:url:changed',\n\n    FOOTER_REFRESH:         'footer:refresh',\n\n    REFRESH_SETMEUP_WIZARD:  'refresh:setmeup:wizard',\n\n    REFRESH_PAGE_CONTENT:  'refresh:page:content',\n};\n\nexport default events;\n\n\n\n// WEBPACK FOOTER //\n// ./constants/artifacts_events.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    \"API_URL\": \"../ui\",\n    \"AUTH_LOGIN\": \"/auth/login?_spring_security_remember_me=\",\n    \"AUTH_CURRENT\": \"/auth/current\",\n    \"AUTH_LOGOUT\": \"/auth/logout\",\n    \"AUTH_IS_SAML\": \"/auth/issaml\",\n    \"AUTH_REDIRECT\": \"/auth/redirect?redirectTo=\",\n    \"AUTH_FORGOT_PASSWORD\": \"/auth/forgotpassword\",\n    \"AUTH_VALIDATE_KEY\": '/auth/validatetoken?key=',\n    \"AUTH_RESET_PASSWORD\": \"/auth/resetpassword?key=\",\n    \"AUTH_LOGIN_DATA\": '/auth/loginRelatedData',\n    \"AUTH_CAN_ANNOTATE\": '/auth/canAnnotate?repoKey=',\n    \"CRYPTO\": \"/crypto\",\n    \"SECURITY_CONFIG\": \"/securityconfig\",\n    \"USERS\": \"/users\",\n    \"GROUPS\": \"/groups\",\n    \"GROUP_PERMISSION\": \"/groupPermission\",\n    \"MAIL\": \"/mail\",\n    \"REGISTER_PRO\": \"/registerlicense\",\n    \"MANAGE_HA_LICENSES\": \"/manageLicenses\",\n    \"PROXIES\": \"/proxies\",\n    \"REVERSE_PROXIES\": \"/reverseProxies\",\n    \"HTTPSSO\": \"/httpsso\",\n    \"SSHSERVER\": \"/sshserver\",\n    \"LICENSES\": \"/licenses\",\n    \"HIGH_AVAILABILITY\": \"/highAvailability\",\n    \"XRAY\": \"/xrayRepo\",\n    \"XRAY_CONFIG\": \"/xrayConfig\",\n    \"SAML_CONFIG\": \"/saml/config\",\n    \"SAML_LOGOUT\": \"/saml/logoutRequest\",\n    \"OAUTH_LOGIN\": \"/oauth2/loginRequest\",\n    \"BINTRAY_SETTING\": \"/bintraysetting\",\n    \"PROPERTY_SETS\": \"/propertysets\",\n    \"BROWSE_FILESYSTEM\": \"/browsefilesystem\",\n    \"BACKUP\": \"/backup\",\n    \"SYSTEM_INFO\": \"/systeminfo\",\n    \"CONFIG_DESCRIPTOR\": \"/configdescriptor\",\n    \"SECURITY_DESCRIPTOR\": \"/securitydescriptor\",\n    \"INDEXER\": \"/indexer\",\n    \"STORAGE_SUMMARY\": \"/storagesummary\",\n    \"TREE_BROWSER\": \"/treebrowser\",\n    \"REPO_DATA\": \"/repodata\",\n    \"CRON_TIME\": \"/crontime\",\n    \"DATE_FORMAT\": \"/validations/dateformat\",\n    \"NAME_VALIDATOR\": \"/validations/name\",\n    \"UNIQUE_ID_VALIDATOR\": \"/validations/uniqueid\",\n    \"XML_NAME_VALIDATOR\": \"/validations/xmlname\",\n    \"ARTIFACT_PERMISSIONS\": \"/artifactpermissions\",\n    \"ARTIFACT_GENERAL\": \"/artifactgeneral\",\n    \"ARTIFACT_GENERAL_BINTRAY\": \"/artifactgeneral/bintray\",\n    \"ARTIFACT_GENERAL_BINTRAY_DIST\": \"/artifactgeneral/bintray/dist\",\n    \"ARTIFACT_VIEW_SOURCE\": \"/archiveViewSource\",\n    \"ARTIFACT_BUILDS\": \"/artifactbuilds\",\n    \"ARTIFACT_XRAY\": \"/artifactxray\",\n    \"ARTIFACT_ACTIONS\": \"/artifactactions\",\n    \"ARTIFACT_PROPERTIES\": \"/artifactproperties\",\n    \"PREDEFINE_VALUES\": \"/predefinevalues\",\n    \"REPO_PROPERTY_SET\": \"/repopropertyset\",\n    \"ARTIFACT_WATCHES\": \"/artifactwatches\",\n    \"ARTIFACT_SEARCH\": \"/artifactsearch\",\n    \"DEPENDENCY_DECLARATION\": \"/dependencydeclaration\",\n    \"ARTIFACT\": \"/artifact\",\n    \"FOOTER\":\"/auth/screen/footer\",\n    \"VIEWS\":\"/views\",\n    \"CROWD\":\"/crowd\",\n    \"EXPORT\": \"/artifactexport\",\n    \"IMPORT\": \"/artifactimport\",\n    \"MAINTENANCE\": \"/maintenance\",\n    \"LDAP\": \"/ldap\",\n    \"OAUTH\": \"/oauth\",\n    \"CHECKSUMS\": \"/checksums\",\n    \"FILTERED_RESOURCE\": \"/filteredResource\",\n    \"LDAP_GROUPS\": \"/ldapgroups\",\n    \"PUSH_TO_BINTRAY\": \"/pushToBintray\",\n    \"BINTRAY_DISTRIBUTION\": \"/distribution\",\n    \"GENERAL_CONFIG\": \"/generalConfig\",\n    \"ONBOARDING\": \"/onboarding\",\n    \"SIGNINGKEYS\": \"/signingkeys\",\n    \"TRUSTEDKEYS\": \"/security/trustedKeys\",\n    \"SSLCERTIFICATES\":\"/admin/security/certificates\",\n    \"ACCESSTOKENS\": \"/admin/security/accesstokens\",\n    \"KEYSTORE\":\"/keystore\",\n    \"USER_PROFILE\": \"/userProfile\",\n    \"SSH_CLIENT\": \"/sshClient\",\n    \"USER_API_KEY\": \"/userApiKey\",\n    \"BUILDS\": \"/builds\",\n    \"BUNDLES\": \"/bundles\",\n    \"BUILDS_INFO\": \"/buildsinfo\",  /// JUST FOR MOCK, WILL BE REMOVED\n    \"PERMISSION_TARGETS\": \"/permissiontargets\",\n    \"GENERAL_TAB_LICENSES\":\"/generalTabLicenses\",\n    \"HOME_PAGE\": \"/home\",\n    \"SYSTEM_LOGS\": \"/systemlogs\",\n    \"SET_ME_UP\": \"/setMeUp\",\n    \"SET_ME_UP_MAVEN\": \"/setMeUp/mavenSettings\",\n    \"SET_ME_UP_GRADLE\": \"/setMeUp/gradleSettings\",\n    \"SET_ME_UP_IVY\": \"/setMeUp/ivySettings\",\n    \"SET_ME_UP_MAVEN_DISTRIBUTION\": \"/setMeUp/mavenDistributionManagement\",\n    \"SET_ME_UP_MAVEN_SNIPPET\": \"/setMeUp/mavenSnippet\",\n    \"SET_ME_UP_GRADLE_SNIPPET\": \"/setMeUp/gradleSnippet\",\n    \"SET_ME_UP_IVY_SNIPPET\": \"/setMeUp/ivySnippet\",\n    \"SET_ME_UP_REVERSE_PROXY_DATA\": \"/setMeUp/reverseProxyData\",\n    \"REPOSITORIES\":\"/admin/repositories\",\n    \"REPOSITORIES_LAYOUTS\":\"/admin/repolayouts\",\n    \"STASH_RESULTS\":\"/stashResults\",\n    \"SUPPORT_PAGE\":\"/userSupport\",\n    \"SERVER_TIME\":\"/system/serverTime\",\n    \"LICENSE_DETAILS\":\"/system/license\",\n    \"BINARY_PROVIDERS_INFO\":\"/binary/providers/info\",\n    \"DOCKER_STATUS\":\"/admin/repositories/getdockerstatus\",\n    \"GLOBAL_REPLICATIONS_BLOCK\":\"/global/replications/config\",\n    \"SUMOLOGIC\": \"/sumologic\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./constants/api.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    admin: {\n        advanced: {\n            maintenance: {\n                garbageCronExpression: `The Cron expression that determines the frequency of garbage collection.\nFor detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>.`,\n                cleanupCronExpression: `The Cron expression that determines the frequency of artifacts cleanup.\nFor detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>.`,\n                runNow: `Remove unreferenced binaries from the underlying datastore.\nArtifactory periodically runs garbage collection to remove unused (deleted) binaries from the datastore.\nYou may also run datastore cleanup manually using this button.`,\n                enableQuotaControl: `Enable control over the amount of storage space used for binaries to avoid running out of disk space.`,\n                storageSpaceLimit: `The maximum percentage of disk capacity that the partition containing the binaries folder is allowed to use.\nOnce this limit has been reached, deployment is rejected with a 413 error (request entity\ntoo large) and an error message is displayed in the UI (visible to admin users only).\nWhen using filesystem storage, the partition checked is the one containing the\n'$ARTIFACTORY_HOME/data/filestore' directory.\nWhen using database BLOB storage, the partition checked is the one containing the\n'$ARTIFACTORY_HOME/data/cache' directory.`,\n                storageSpaceWarning: `The percentage of disk space usage, by the partition containing the binaries folder, that will trigger a warning.\nOnce this limit is reached a warning is logged and a warning message is displayed in the UI\n(visible to admin users only).`,\n                cronExpressionCleanup: `The Cron expression that determines the frequency at which unused artifacts are cleaned up. For detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>.`,\n                runUnusedCachedArtifactsCleanup: `Remove unused artifacts from all remote repository caches\naccording to the 'Keep Unused Artifacts(Hours)' setting for each remote repository.\nArtifactory periodically cleans up unused artifacts from all remote repository caches.\nYou can also run the cleanup manually using this button.`,\n                cleanVirtualRepositoriesNow: `Clean up internal data used by virtual repositories.\nCached POM files older than the number of hours defined in the 'virtualCacheCleanup.maxAgeHours' system property will be deleted.\nThe default is 168 hours (one week). Artifacts accessed through virtual repositories will not be affected by this.`,\n                compressTheInternetDatabase: `When using the internal Derby database, use this to clean up fragmented space that may remain\nafter delete operations.\nNOTE! It is recommended to run this when Artifactory activity is low because compression may not run its full course when\nstorage is busy (although this has no detrimental effect on the storage).`,\n                pruneUnreferencedData: `Running Artifactory with the wrong file system permissions on storage folders, or running out of storage space,\ncan result in unreferenced binary files and empty folders present in the filestore or cache folders. This action\nremoves unreferenced files and empty folders.`\n\n            },\n            storageSummary: {\n                itemsCount: `The total number of items (both files and folders) in your system.`,\n                optimization: `The ratio of Binaries Size to Artifacts Size.\nThis reflects how much the usage of storage in your system has been reduced by Artifactory using checksum storage.`,\n                artifactsCount: `The total number of artifacts pointing to the physical binaries stored on your system.`,\n                storageDirectory: `If Storage Type is \"filesystem\" then this is the path to the physical file store.\nIf Storage Type is \"fullDb\" then this is the path to the directory that caches binaries when they are extracted from the database.\nIf Storage Type is \"S3\" then this is the path to the directory that caches binaries from S3.\n\nIf Storage Type is \"Advanced Configuration\" then these are the paths of the corresponding binary providers, supplied by the advanced configuration.`,\n                centralConfigurationDescriptor: ``,\n                securityConfigurationDescriptor: ``,\n                fileSystemStorage: `The storage percentage represents the used/available space on the mount point where the <a href=\"https://www.jfrog.com/confluence/display/RTF/Monitoring+Storage#MonitoringStorage-FileStore\" target=\"_blank\">Artifactory filestore data</a> is stored.`\n            },\n            supportPage: {\n                hideUserDetails: `This option will remove passwords and user related information from configuration files before generating the support info package.`\n            }\n        },\n        configuration: {\n            general: {\n                serverName: `A name that uniquely identifies this artifactory server instance across the network.`,\n                customURLBase: `A hard-coded URL prefix used to calculate relative URLs.`,\n                fileUploadMaxSize: `The maximum size (in MB) allowed for artifacts uploaded through the web UI.\nSet to '0' for unlimited size.`,\n                bintrayMaxFilesUpload: `The maximum number of files that can be uploaded to Bintray in a single operation.`,\n                dateFormat: `The format used to display dates.\nFor a detailed explanation see: <a href=\"http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html\" target=\"_blank\">Joda DateTimeFormat</a>`,\n                globalOfflineMode: `If set, Artifactory does not try to access remote resources to fetch artifacts.\nOnly cached and local artifacts are served`,\n                showAvailableAddonsInfo: `When set, Artifactory displays information about available Add-ons. This overrides any user-specific setting to hide information.`,\n                folderDownloadMaxFiles: `The maximum amount of artifacts that can be downloaded under one folder.`,\n                folderDownloadMaxSize: `The maximum size (in MB) of a folder that is allowed to be downloaded.`,\n                folderDownloadMaxParallel: `The maximum amount of folder download requests Artifactory will allow to run together.`,\n                retentionPeriodDays: `The maximum number of days to keep artifacts in the trashcan.`,\n                allowPermDeletes: `When deleting, users will be given an option to bypass the trash can and delete artifacts permanently.`,\n                blockReplications: `When set, replication will not be triggered regardless of configuration.`,\n                blockPushReplications: ` When set, push replication will not be triggered regardless of configuration.`,\n                blockPullReplications: `When set, pull replication will not be triggered regardless of configuration.`,\n\t            releaseBundlesCleanup: `The number of hours to wait before a release bundle is deemed “incomplete” and eligible for cleanup from the temporary folder. A value of 0 means automatic cleanup is disabled. \nNote that only release bundles that were partially distributed are eligible for cleanup.`,\n                signedUrlMaxValidForSecs: `The maximum number of seconds a signed URL can be valid.`,\n                downloadRedirectFileMinimumSize: `The minimal size of an artifact for which direct download from the cloud is enabled.\nRequests for artifacts smaller than this size are served through Artifactory as usual.`\n            },\n            licenseForm: {\n                licenseKey: `A unique short name identifying the license.`,\n                longName: `A descriptive name for the license.`,\n                URLs: `A URL (or URLs separated by semicolon) pointing to the license's homepage.`,\n                regExp: `A regular expression used to match licenses of this type against license details in artifact module information.\nFor regular expression syntax reference please refer to the Pattern javadoc.`\n\n            },\n            propertySetsForm: {},\n            proxyForm: {\n                systemDefault: `Make this proxy the default for new remote repositories and for internal HTTP requests.`,\n                redirectingProxyTargetHosts: `An optional list of host names to which the proxy may redirect requests.\nThe credentials of the proxy are reused by requests redirected to any of these hosts.`\n\n            },\n            reverseProxy: {\n                serverName: `The server name that will be used to access Artifactory.\nShould be correlated with the base URL value.`,\n                publicAppContext: `The path which will be publicly used to access Artifactory. If Artifactory is accessible on the root of the server leave empty.`,\n                artifactoryServerName: `The internal server name for Artifactory which will be used by the web server to access the Artifactory machine.\nIf the web server is installed on the same machine as Artifactory you can use localhost, otherwise use the IP or hostname.`,\n                artifactoryAppContext: `The path which will be used to access the Artifactory application. If Artifactory is accessible on the root of the server leave empty.`,\n                sslCertificate: `The full path of the certificate file on the web server.`,\n                sslKey: `The full path of the key file on the web server.`\n            },\n            mail: {\n                enable: `The activity state of the configuration.`,\n                from: `The \"from\" address header to use in all outgoing messages (optional). `,\n                subjectPrefix: `A prefix to use for the subject of all outgoing messages.`,\n                artifactoryURL: `The Artifactory URL to to link to in all outgoing messages (optional).`\n            },\n            bintray: {\n                bintrayUsername: `The default Bintray user name that will be used by Artifactory in cases where an Artifactory\nuser doesn't have Bintray credentials defined.`,\n                bintrayAPIKey: `The default Bintray API Key that will be used by Artifactory in cases where an Artifactory\nuser doesn't have Bintray credentials defined.`\n            },\n            registerPro: {\n                licenseKey: `The license key is required for using Artifactory Add-ons.`\n            },\n            xray: {\n                allowDownloadsBlocked: `Allows download of all artifacts, even those that<br>have been blocked for download by Xray.`,\n                allowWhenXrayUnavilable: `Overrides Artifactory’s default behavior of blocking artifact<br>download when Xray becomes unavailable.`,\n                bypassDefaultProxy: `Bypass the default system proxy configuration.`,\n                overrideDefaultProxy: `Choose a Proxy configuration to override the default system proxy.`\n            }\n        },\n        import_export: {\n            repositories: {\n                createM2CompatibleExport: `Include Maven 2 repository metadata and checksum files as part of the export`,\n                outputVerboseLog: `Lowers the log level to debug and redirects the output from the standard log to the import-export log.\nYou can monitor the log in the <a href=\"./#/admin/advanced/system_logs\">'System Logs'</a> page.`,\n                targetLocalRepository: `Specifies the repository in which to place imported content.\nWhen importing to a single repository, the file structure within the folder you import from should be similar to:\nSELECTED_DIR\n|\n|--LIB_DIR_1\nBut when importing to all repositories, the file structure within the folder you import from should be similar to:\nSELECTED_DIR\n|\n|--REPOSITORY_NAME_DIR_1\n| |\n| |--LIB_DIR_1\n\nWhen importing to all repositories, make sure the names of the directories representing\nthe repositories in the archive, match the names of the target repositories in Artifactory.`,\n                repositoryZipFile: `The archive file from which to import content.\nWhen importing to a single repository, the file structure within the archive should be similar to:\nARCHIVE.ZIP\n|\n|--LIB_DIR_1\nWhen importing to all repositories, the file structure within the archive you import from should be similar to:\nARCHIVE.ZIP\n|\n|--REPOSITORY_NAME_DIR_1\n| |\n| |--LIB_DIR_1\nWhen importing to all repositories, make sure the names of the directories representing\nthe repositories in the archive, match the names of the target repositories in Artifactory.\nNOTE! Uploading the archive, does not import its content.\nTo import, select the Target Local Repository, upload the archive and click Import.`\n            },\n            system: {\n                excludeBuilds: `Exclude all builds from the export.`,\n                createM2CompatibleExport: `Include Maven 2 repository metadata and checksum files as part of the export.`,\n                outputVerboseLog: `Lowers the log level to debug and redirects the output from the standard log to the import-export log.\nYou can monitor the log in the <a href=\"./#/admin/advanced/system_logs\">'System Logs'</a> page.`\n\n            },\n            stash: {\n                createM2CompatibleExport: `Include Maven 2 repository metadata and checksum files as part of the export.`,\n                outputVerboseLog: `Lowers the log level to debug and redirects the output from the standard log to the import-export log.\nYou can monitor the log in the <a href=\"./#/admin/advanced/system_logs\">'System Logs'</a> page.`,\n                createArchive: `Export the results as a zip archive.`\n            }\n        },\n        repositories: {\n            customURLBase: `A hard-coded URL prefix used to calculate relative URLs.`,\n            localForm: {\n                publicDescription: `Textual description of the repository. This description is displayed when the repository is selected in the Tree Browser.`,\n                internalDescription: `Additional notes that are only displayed in this form.`,\n                includesPattern: `List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).`,\n                excludedPattern: `List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.`,\n                repositoryLayout: `The layout that the repository should use to store and identify modules.`,\n                checksumPolicy: `Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or conflicts with the locally calculated checksum (bad checksum).\nFor more details, please refer to <a href=\"https://www.jfrog.com/confluence/display/RTF/Local+Repositories#LocalRepositories-ChecksumPolicy\">Checksum Policy</a>.`,\n                mavenSnapshotVersionBehavior: `Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.`,\n                maxUniqueSnapshots: `The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.`,\n                maxUniqueTags: `The maximum number of unique tags of a single Docker image to store in this repository.\nOnce the number tags for an image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit.`,\n                blackedOut: `When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.`,\n                yumMetadataFolderDepth: `The depth, relative to the repository's root folder, where RPM metadata is created.\nThis is useful when your repository contains multiple RPM repositories under parallel hierarchies.\nFor example, if your RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4.`,\n                yumGroupFileNames: `A list of XML file names containing RPM group component definitions.\nArtifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group files, if required.`,\n                allowContentBrowsing: `When set, you may view content such as HTML or Javadoc files directly from Artifactory.\nThis may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).`,\n                selectPropertySets: `Specifies the Property Sets to be used to construct the list of properties displayed when assigning properties to artifacts in this repository.\nThis is a convenience; not a restrictive measure. You can still assign any property to artifacts from the Properties tab.`,\n                cronExpressionReplication: `The Cron expression that determines when the next replication will be triggered. For detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>.`,\n                nextReplicationTime: `The next replication time based on the Cron expression.`,\n                enableEventReplication: `When set, each event will trigger replication of the artifacts changed in the event (e.g. add, delete, change property).`,\n                trivialLayout: `When set, the repository will use the deprecated trivial layout.`,\n                forceNugetAuth:'Force basic authentication credentials in order to use this repository.',\n                pathPrefix: `Limit replication to artifacts matching this sub-path under the source repository.`,\n                syncDeletedArtifacts: `When set, items that were deleted locally should also be deleted remotely (also applies to properties metadata).`,\n                syncArtifactProperties: `When set, properties of replicated artifacts and folders will also be replicated.`,\n                syncArtifactStatistics: `When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.`\n            },\n            remoteForm: {\n                publicDescription: `Textual description of the repository.\nThis description is displayed when the repository is selected in the Tree Browser.`,\n                internalDescription: `Additional notes that are only displayed in this form. `,\n                includesPattern: `List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served.\nBy default, all artifacts are included (**/*).`,\n                nuGetDownloadContextPath: `The context path prefix through which NuGet downloads are served.\nFor example, the NuGet Gallery download URL is 'https://nuget.org/api/v2/package', so the repository\nURL should be configured as 'https://nuget.org' and the download context path should be configured as 'api/v2/package'.`,\n                v3FeedUrl: `The URL to the NuGet v3 feed.\nFor example the feed URL for the official nuget.org repository is (also the default value): \n\"https://api.nuget.org/v3/index.json\"`,\n                eagerlyFetchJars: `When marked, the repository attempts to eagerly fetch the jar in the background each time a POM is requested.`,\n                eagerlyFetchSources: `When marked, the repository attempts to eagerly fetch the source jar in the background each time a jar is requested.`,\n                excludedPattern: `List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.\nBy default no artifacts are excluded.`,\n                dockerEnableTokenAuthentication: `Enable token (Bearer) based authentication.`,\n                checksumPolicy: `Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or conflicts with the locally calculated checksum (bad checksum).\nFor more details, please refer to <a href=\"https://www.jfrog.com/confluence/display/RTF/Remote+Repositories#RemoteRepositories-ChecksumPolicy\">Checksum Policy</a>.`,\n                maxUniqueSnapshots: `The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.`,\n                listRemoteFolderItems: `Lists the items of remote folders in simple and list browsing. Required for dynamic resolution that depends on remote folder content information, such as remote Ivy version lookups. The remote content is cached according to the value of the\n'Retrieval Cache Period'.`,\n                blackedOut: `When set, the repository or its local cache do not participate in artifact resolution.`,\n                globalOfflineMode: `If set, Artifactory does not try to access remote resources to fetch artifacts. Only cached and local artifacts are served.`,\n                offline: `If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.`,\n                shareConfiguration: `If set, the configuration details of this remote repository can be publicly shared with remote clients such as other Artifactory servers.`,\n                repositoryLayout: `The layout that the repository should use to store and identify modules.`,\n                remoteLayoutMapping: `The layout that best matches that of the remote repository.\nPath-mapping takes place if the remote layout is different from the local layout.\nIn this case, remote module artifacts and descriptors are stored according to the local repository layout (e.g., Maven 1->Maven 2, or Maven 2->Ivy).`,\n                localAddress: `The local address to be used when creating connections.\nUseful for specifying the interface to use on systems with multiple network interfaces.`,\n                username: `Username for HTTP authentication.`,\n                password: `Password for HTTP authentication.`,\n                socketTimeout: `Network timeout (in ms) to use when establishing a connection and for unanswered requests.\nTiming out on a network operation is considered a retrieval failure.`,\n                lenientHostAuthentication: `Allow credentials of this repository to be used on requests redirected to any other host.`,\n                enableCookieManagement: `Enables cookie management if the remote repository uses cookies to manage client state.`,\n                keepUnusedArtifacts: `The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository.\nA value of 0 means automatic cleanup of cached artifacts is disabled.`,\n                assumedOfflineLimit: `The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status.\nA value of 0 means the repository is never assumed offline.`,\n                retrievalCachePeriod: `This value refers to the number of seconds to cache metadata files before checking for newer versions on remote server. A value of 0 indicates no caching.`,\n                missedRetrievalCachePeriod: `The number of seconds to cache artifact retrieval misses (artifact not found).     A value of 0 indicates no caching.`,\n                queryParams: `Custom HTTP query parameters that will be automatically included in all remote resource requests.\nFor example: param1=val1&ampparam2=val2&ampparam3=val3`,\n                allowContentBrowsing: `When set, you may view content such as HTML or Javadoc files directly from Artifactory.\nThis may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).`,\n                storeArtifactsLocally: `When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.`,\n                synchronizeArtifactoryProperties: `When set, remote artifacts are fetched along with their properties.`,\n                selectPropertySets: `Specifies the Property Sets to be used to construct the list of properties displayed when assigning properties to artifacts in this repository.\nThis is a convenience; not a restrictive measure. You can still assign any property to artifacts from the Properties tab.`,\n                cronExpression: `The Cron expression that determines artifact cleanup frequency. For detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>.`,\n                cronExpressionReplication: `The Cron expression that determines when the next replication will be triggered. For detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>.`,\n                syncDeletes: `Delete artifacts and folders that no longer exist in the source repository.`,\n                syncProperties: `When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.`,\n                pathPrefix: `Limit replication to artifacts matching this sub-path under the source repository.`,\n                bowerRegistryURL: `The remote Bower registry URL to communicate with.\nUsually the default value (https://bower.herokuapp.com) will be correct unless the remote resource is an Artifactory instance. In this case the value should match the remote repository URL.`,\n                nugetFeedContextPath: `The context path prefix through which the NuGet feeds are served.\nFor example, the NuGet Gallery feed URL is 'https://nuget.org/api/v2', so the repository URL should be configured as 'https://nuget.org' and the feed context path should be configured as 'api/v2'.`,\n                nugetDownloadContextPath: `The context path prefix through which NuGet downloads are served.\nFor example, the NuGet Gallery download URL is 'https://nuget.org/api/v2/package', so the repository\nURL should be configured as 'https://nuget.org' and the download context path should be configured as 'api/v2/package'.`,\n                smartSyncStatistics: `If set, download statistics for the artifact at the remote Artifactory instance will be updated each time a cached item is downloaded from your repository.`,\n                smartSyncProperties: `If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance.`,\n                smartListRemoteFolderItems: `If set, Artifactory lets you navigate the contents of the repository at the remote Artifactory instance, for all package types, even if the artifacts have not been cached in this repository.`,\n                originAbsenceDetection: `If set, Artifactory will check that cached artifacts' sources are available in the origin repository.`,\n                propagateQueryParams: `If set, the query params passed with the request to Artifactory, will be passed on to the remote repo.`,\n                rejectInvalidJars: `Reject the caching of jar files that are found to be invalid.\nFor example, pseudo jars retrieved behind a \"captive portal\".`,\n                enableEventReplication: `When set, in addition to running replication based on its Cron expression, each event on the remote repository will trigger replication of the artifacts changed in the event (e.g. add, delete, change property).\nTo set event replication, the remote replication source must be an Artifactory repository. The Artifactory version must be 5.5 or above.`,\n                enableEventReplicationDisabledNoEnterprise: `When set, in addition to running replication based on its Cron expression, each event on the remote repository will trigger replication of the artifacts changed in the event (e.g. add, delete, change property).\nTo set event replication, you need an Enterprise license.`,\n                blockMismatchingMimeTypes: `If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes to the override list below.`,\n                bypassHeadRequests: `Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.`,\n                foreignLayersCachingPatterns: `Optional include patterns to match external URLs. Ant-style path expressions are supported (*, **, ?).\nFor example, specifying **/github.com/** will only allow downloading foreign layers from github.com host.`\n            },\n            virtualForm: {\n                publicDescription: `Textual description of the repository.\nThis description is displayed when the repository is selected in the Tree Browser.`,\n                internalDescription: `Additional notes that are only displayed in this form. `,\n                cleanupRepositoryReferencesinPOM: `(1) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n(2) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n(3) Nothing - Does not remove any repository elements declared in the POM.`,\n                 pathSuffix: `An optional sub-path inside the local repository where P2 metadata files reside.\nWhen left empty, P2 metadata files (content, artifacts, compositeContent, etc.) are assumed to reside directly under the repository's root.\nIf you have a Tycho repository deployed as a single archive, specify the archive's root path. For example: 'eclipse-repository.zip!'. `,\n                includesPattern: `List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served.\nBy default, all artifacts are included (**/*).`,\n                excludedPattern: `List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.\nBy default no artifacts are excluded.`,\n                resolvedRepositories: `The resolved list of repositories.\nRepositories starting with an exclamation mark ('!') indicate that not all tokens can be mapped between the layout of this virtual repository and the marked repository.\nPath translations may not work as expected.`,\n                artifactoryRequestCanRetrieveRemoteArtifacts: `Determines whether artifact requests coming from other instance of Artifactory can be fulfilled by accessing this virtual repository's remote repositories, or by only accessing its caches (default).`,\n                externalDependenciesPatterns: `Optional include patterns to match external dependencies. Ant-style path expressions are supported (*, **, ?).\nFor example, specifying **/github.com/** will only allow external dependencies from github.com host.`,\n                externalDependenciesPatternsGo: `A whitelist of Ant-style path patterns that determine which remote VCS roots Artifactory will follow to download remote modules from, when presented with 'go-import' meta tags in the remote repository response. By default, this is set to '**', which means that remote modules may be downloaded from any external VCS source.`,\n                enableGoImportMetaTag: `When checked (default), Artifactory will automatically follow remote VCS roots in 'go-import' meta tags to download remote modules.`,\n                cleanupRepositoryReferencesInPOMs: `(1) Discard Active References - Removes repository elements that are declared directly under a project or a profile in the same POM that is activeByDefault.\n(2) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n(3) Nothing - Does not remove any repository elements declared in the POM.`,\n                virtualRetrievalCachePeriod: `This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching.`,\n                virtualDebianDefaultArchitectures: `Specifies the architectures which will be indexed for the included remote repositories, For example: i386, arm64.`,\n                keyPair: `A named key-pair that is used to sign artifacts automatically.`,\n                forceMavenAuth:'User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This is also enforced when aggregated repositories support anonymous requests.'\n\n            },\n            distributionForm: {\n                includesPattern: 'Properties on distributed artifacts with key that matches the list below will be added as a version attributes in Bintray.',\n                repositoryVisibility: 'Creating private Bintray repositories is available for <a href=\"https://www.jfrog.com/bintray/bintray-private-repo/\" target=\"_blank\">premium Bintray</a> accounts.',\n                distributeProduct: 'When set, the ${productName} token will be replaced in the distribution rules with the product name configured below. Also, Artifactory will create a <a href=\"https://bintray.com/docs/usermanual/uploads/uploads_products.html\" target=\"_blank\">Bintray product</a> and link the deployed packages to the product.'\n            },\n            layoutsForm: {\n                artifactPathPattern: `Please refer to: <a href=\"http://www.jfrog.com/confluence/display/RTF/Repository+Layouts#RepositoryLayouts-ModulesandPathPatternsusedbyRepositoryLayouts\" target=\"_blank\">Path Patterns</a> in the Artifactory Wiki documentation.`,\n                distinctiveDescriptorPathPattern: `Please refer to: <a href=\"http://www.jfrog.com/confluence/display/RTF/Repository+Layouts#RepositoryLayouts-DescriptorPathPatterns\" target=\"_blank\">Descriptor Path Patterns</a> in the Artifactory Wiki documentation.`,\n                folderIntegrationRevisionRegExp: `A regular expression matching the integration revision string appearing in a folder name\nas part of the artifact's path. For example, 'SNAPSHOT', in Maven.\nNote! Take care not to introduce any regexp capturing groups within this expression.\nIf not applicable use '.*'.`,\n                fileIntegrationRevisionRegExp: `A regular expression matching the integration revision string appearing in a file name\nas part of the artifact's path. For example, 'SNAPSHOT|(?:(?:[0-9]{8}.[0-9]{6})-(?:[0-9]+))',\nin Maven.\nNote! Take care not to introduce any regexp capturing groups within this expression.\nIf not applicable use '.*'.`\n            },\n            reverseProxy: {\n                registryPort: `This port will be binded to the Docker registry.`\n            },\n            rulesPopup:{\n                repositoryFilterTooltip:'<b>Repository Filter</b> -(Optional) Rule will only apply to repositories matching the regular expression.' +\n                                        'You can reuse the capture values in anyone of the Bintray output fields. <a href=\"https://www.jfrog.com/confluence/display/RTF/Distribution+Repository#DistributionRepository-RepositoryandPathFilterParameters\" target=\"_blank\"> Click here </a> to read more about this field.',\n                pathFilterToolip: '<b>Path Filter</b> - (Optional) Rule will only apply to artifacts with path matching the regular expression' +\n                                  'You can reuse the capture values in anyone of the Bintray output fields. <a href=\"https://www.jfrog.com/confluence/display/RTF/Distribution+Repository#DistributionRepository-RepositoryandPathFilterParameters\" target=\"_blank\"> Click here </a> to read more about this field.',\n            },\n            downloadRedirectConfig: `When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider.`\n        },\n        security: {\n            general: {\n                hideExistenceOfUnauthorizedResources: `When set, Artifactory hides the existence of unauthorized resources by sending a 404\nresponse (not found) to requests for resources that are not accessible by the user. Otherwise,\nthe response implies that the resource exists, but is protected,  by requesting authentication\nfor anonymous requests (401), or by denying an authenticated request for unauthorized users.`,\n                passwordEncryptionPolicy: `Determines the password requirements from users identified to Artifactory from a remote client such as Maven.\nThe options are:\n(1) Supported (default): Users can authenticate using secure encrypted passwords or clear-text passwords.\n(2) Required: Users must authenticate using secure encrypted passwords. Clear-text authentication fails.\n(3) Unsupported: Only clear-text passwords can be used for authentication.`,\n                buildGlobalBasicReadAllowed: `When checked, all users can view the published modules for all builds in the system regardless of any specific permissions applied to a particular build.`,\n                encrypt: `Artifactory will generate a Master Encryption Key and encrypt all passwords in your configuration.`,\n                decrypt: `Artifactory will decrypt all passwords in your configuration.`,\n                passwordMaxAge: `The time interval in which users will be obligated to change their password`,\n                notifyByMail: `Users will receive an email notification X days before password will expire.\nMail server must be enabled and configured correctly.`\n            },\n            usersForm: {\n                disableInternalPassword: `When set, user's password is cleared which means that only external authentication is allowed (for example via an LDAP server).`\n            },\n            permissionsForm: {\n                repoPatterns: `Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\nAnt-style path expressions are supported (*, **, ?).\nFor example: \"org/apache/**\"`,\n                buildPatterns: {\n                    includePatterns: `Use Ant-style wildcard patterns to specify build names (i.e. artifact paths) in the build info repository (without a leading slash) that will be included in this permission target.\nAnt-style path expressions are supported (*, **, ?).\nFor example, an \"apache/**\" pattern will include the \"apache\" build info in the permission.`,\n                    excludePatterns: `Use Ant-style wildcard patterns to specify build names (i.e. artifact paths) in the build info repository (without a leading slash) that will be excluded from this permission target.\nAnt-style path expressions are supported (*, **, ?).\nFor example, an \"apache/**\" pattern will exclude the \"apache\" build info from the permission.`\n                },\n                adminIcon: {\n                    user: `Users with admin privileges cannot be added to a Permission Target`,\n                    group: `Groups with admin privileges cannot be added to a Permission Target`,\n                },\n\n                repositoriesPermissions: `<b>Read</b> - Allows reading and downloading of artifacts\n<b>Annotate</b> - Allows annotating artifacts and folders with metadata and properties\n<b>Upload / Cache</b> - Allows uploading artifacts to local repositories and caching artifacts from remote repositories\n<b>Delete / Overwrite</b> - Allows deletion or overwriting of artifacts\n<b>Manage</b> - Allows changing repository permission settings for other users on this permission target`,\n                buildsPermissions: `<b>Read</b> - Allows reading and downloading of build info artifacts and viewing the corresponding build in the Builds page\n<b>Annotate</b> - Allows annotating build info artifacts and folders with metadata and properties\n<b>Upload</b> - Allows uploading and promoting build info artifacts\n<b>Delete</b> - Allows deletion of build info artifacts\n<b>Manage</b> -  Allows changing build info permission settings for other users on this permission target\n`,\n            },\n            LDAPSettingsForm: {\n                LDAPURL: `Location of the LDAP server in the following format:\nldap://myserver:myport/dc=sampledomain,dc=com`,\n                allowUserToAccessProfile: `Auto created users will have access to their profile page and will be able to perform actions such as generating an API key.`,\n                userDNPattern: `A DN pattern that can be used to log users directly in to LDAP.\nThis pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL.\nThe pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can\nbe used, which is not the default case for Active Directory (use User DN search filter instead).\nExample: uid={0},ou=People`,\n                autoCreateArtifactoryUsers: `When set, users are automatically created when using LDAP. Otherwise, users are transient\nand associated with auto-join groups defined in Artifactory.`,\n                emailAttribute: `An attribute that can be used to map a user's email address to a user created\nautomatically in Artifactory.`,\n                searchFilter: `A filter expression used to search for the user DN used in LDAP authentication.\nThis is an LDAP search filter (as defined in 'RFC 2254') with optional arguments.\nIn this case, the username is the only argument, and is denoted by '{0}'.\nPossible examples are:\n(uid={0}) - This searches for a username match on the attribute.\nAuthentication to LDAP is performed from the DN found if successful.`,\n                searchBase: `(Optional) A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users'\nWith the LDAP Group Add-on enabled, it is possible to enter multiple search base entries\nseparated by a pipe ('|') character.`,\n                manageDN: `The full DN of the user that binds to the LDAP server to perform user searches.\nOnly used with \"search\" authentication.\n`,\n                managerPassword: `The password of the user that binds to the LDAP server to perform the search.\nOnly used with \"search\" authentication.`,\n                subTreeSearch: `When set, enables deep search through the sub tree of the LDAP URL + search base.`\n            },\n            LDAPGroupsForm: {\n                settingsName: `LDAP group key.`,\n                LDAPSetting: `Select the LDAP setting you want to use for group retrieval`,\n                static: `Groups have a multi-value member attribute containing user DNs or User IDs.`,\n                dynamic: `Users have a mutli-value member attribute containing DNs or names of imported groups.\nDefault group association strategy for Active Directory.`,\n                hierarchy: `User DN contains one or more hierarchical name attributes of imported groups.\nFor example: cn=joe,ou=sales,ou=europe,dc=acme,dc=com implies Joe's membership in the 'sales' and 'europe' groups.`,\n                groupMemberAttribute: `A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).`,\n                groupNameAttribute: `Attribute on the group entry denoting the group name. Used when importing groups.`,\n                descriptionAttribute: `An attribute on the group entry which denoting the group description. Used when importing groups.`,\n                filter: `The LDAP filter used to search for group entries. Used when importing groups.`,\n                searchBase: `A search base for group entry DNs, relative to the DN on the LDAP server's URL (and not relative to the LDAP Setting's \"Search Base\"). Used when importing groups.`\n            },\n            crowd_integration: {\n                sessionValidationInterval: `The time window (min) during which the session does not need to be validated.`,\n                useJIRAUserServer: `Authenticate using credentials instead of the default session, token-based authentication.\nThis is required when using the JIRA User Server.`,\n                autoCreateArtifactoryUsers: `When set, authenticated users are automatically created in Artifactory.\nWhen not set, for every request from a Crowd user, the user is temporarily associated with default groups (if such groups are defined),\nand the permissions for these groups apply. Without automatic user creation, you must manually create the user in Artifactory to manage\nuser permissions not attached to their default groups.`,\n                allowUserToAccessProfile: `Auto created users will have access to their profile page and will be able to perform actions such as generating an API key.`,\n                useDefaultProxyConfiguration: `If a default proxy definition exists, it is used to pass through to the Crowd Server.`\n\n            },\n            SAMLSSOSettings: {\n                SAMLLoginURL: `The identity provider login URL (when you try to login, the service provider redirects to this URL).`,\n                SAMLLogoutURL: `The identity provider logout URL (when you try to logout, the service provider redirects to this URL).`,\n                SAMLServiceProviderName: `The Artifactory name in the SAML federation.`,\n                SAMLCertificate: `The certificate for SAML Authentication.\nNOTE! The certificate must contain the public key to allow Artifactory to verify sign-in requests.`,\n                autoCreateArtifactoryUsers: `When set, authenticated users are automatically created in Artifactory.\nWhen not set, for every request from a SAML user, the user is temporarily associated with default groups (if such groups are defined),\nand the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage\nuser permissions not attached to their default groups.`,\n                allowUserToAccessProfile: `Auto created users will have access to their profile page and will be able to perform actions such as generating an API key.`,\n                autoRedirect: `When set, clicking on the login link will direct users to the configured SAML login URL.`,\n                syncGroups: \"When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login \" +\n                \"response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session.\",\n                groupAttribute: `The group attribute in the SAML login XML response.`,\n                emailAttribute: `If Auto Create Artifactory Users is enabled or an internal user exists, Artifactory will set the user's email to the value in this attribute that is returned by the SAML login XML response.`\n            },\n            OAuthSSO: {\n                id: `Your OAuth2 id, given by the provider.`,\n                secret: `Your OAuth2 shared secret, given by the provider.`,\n                domain: `Google App domain accepted for authentication.`,\n                basicUrl: `The url used to acquire a token via basic auth.`,\n                authUrl: `The url used for the initial authentication step.`,\n                apiUrl: `The url used for api access, if needed to get user data.`,\n                tokenUrl: `The url used to acquire a token from the provider.`,\n                allowUserToAccessProfile: `Auto created users will have access to their profile page and will be able to perform actions such as generating an API key.`\n            },\n            HTTPSSO: {\n                artifactoryIsProxiedByASecureHTTPServer: `When set, Artifactory trusts incoming requests and reuses the remote user originally set on the request by the SSO of the HTTP server.\nThis is useful if you want to use existing enterprise SSO integrations, such as the powerful authentication schemes provided by Apache (mod_auth_ldap, mod_auth_ntlm, mod_auth_kerb, etc.).\nWhen Artifactory is deployed as a webapp on Tomcat behind Apache:\nIf using mod_proxy_ajp, be sure to set tomcatAuthentication=\"false\" on the AJP connector.\nIf using mod_jk, be sure to use the \"JkEnvVar REMOTE_USER\" directive in Apache's configuration.`,\n                remoteUserRequestVariable: `The name of the HTTP request variable to use for extracting the user identity.\nDefault is: REMOTE_USER.`,\n                autoCreateArtifactoryUsers: `When set, authenticated users are automatically created in Artifactory.\nWhen not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined),\nand the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage\nuser permissions not attached to their default groups.`,\n                allowUserToAccessProfile: `Auto created users will have access to their profile page and will be able to perform actions such as generating an API key.`,\n                autoAssociateLDAPGroups: `When set, the user will be associated with the groups returned in the LDAP login response. Note that the user's association with the returned groups is persistent if the 'Auto Create Artifactory Users' is set.`\n            },\n            SSHSERVER: {\n                enableSshServer: `Enable SSH authentication.`,\n                serverPublicKey: `SSH Public Key to identify your server.`,\n                serverPrivateKey: `SSH Private Key to identify your server.`,\n                sshServerPort: `The port to use for SSH authentication. Default: 1337`,\n                customURLBase: `A hard-coded URL prefix used to calculate relative URLs.`\n            },\n            signingKeys: {\n                passPhrase: `Pass phrase required to use the installed keys. It can be saved or supplied with the REST API calls.\nThe \"Verify\" button checks that the keys and pass phrase match, and can be used to verify the pass phrase without saving it.\nIf keys are saved, we highly recommend using the Master Encryption Key feature.`\n            }\n\n        },\n        services: {\n            backupsForm: {\n                cronExpression: `The Cron expression that determines backup frequency. For detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>`,\n                serverPathForBackup: `The directory to which local repository data is backed up as files.\nThe default is $ARTIFACTORY_HOME/backup/[backup_key]`,\n                sendMailToAdminsIfThereAreBackupErrors: `Requires properly configured email settings and valid email addresses for admin users.`,\n                precalculateSpaceBeforeBackup: `If set, Artifactory will verify that the backup target location has enough disk space available to hold the backed up data. If there is not enough space available, Artifactory will abort the backup and write a message in the log file. Applicable only to non-incremental backups.`,\n                excludeBuilds: `Exclude all builds from the backup.`,\n                excludeNewRepositories: `Automatically exclude new repositories from the backup.`,\n                retentionPeriod: `The maximum number of hours to keep old backups in the destination directory.\nSetting the \"Incremental\" checkbox, indicates that backups are incrementally written\n(delta only) to the same directory: \\${backupDir}/current. This \"in place\" backup is suitable\nfor file-system based backup support. In this mode, cleanup of old backups is inactive.\nThe default is 168 hours (7 days).`,\n                backUpToAZipArchive: `When set, the backup output should be a zip archive.\nOtherwise the output is to a directory (default).`\n\n            },\n            mavenIndexer: {\n                 cronExpression: `The Cron expression that determines indexer frequency. For detailed information, see <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\">The CronTrigger Tutorial</a>`\n                 }\n        },\n        logAnalytics: {\n            newConnection: \"Use this option if you don't have a Client ID and Secret for Artifactory.\"\n        }\n    },\n    artifacts: {\n        deploy: {\n            targetRepo: `The target repository to which the artifact should be deployed.`,\n            targetPath: `The relative path in the target repository. You can add key-value matrix parameters to deploy the artifacts with properties.\nFor more details, please refer to <a href=\"http://www.jfrog.com/confluence/display/RTF/Using+Properties+in+Deployment+and+Resolution#UsingPropertiesinDeploymentandResolution-IntroducingMatrixParameters\" target=\"_blank\"> Introducing Matrix Parameters</a>.`,\n            deployAsMaven: `Deploy a Maven artifact where the target deployment path is based on Maven attributes.\nIf you want to specify the target deployment path manually, unset this option.`,\n            deployAsDebian: `Deploying a Debian file to a Debian repository requires coordinates. Setting this flag lets you configure the Debian file coordinates`,\n            noDeployPermission: `You do not have deploy permission`,\n        },\n        pushToBintray: {\n            bintrayPackageName: `A target package name under the repository. You must create the package in Bintray first if it does not exist.`,\n            bintrayPackageVersion: `A target version under the package.If the version does not yet exist in Bintray, it is automatically created.`\n        },\n        browse: {\n            created: `The time this artifact was deployed to or cached in Artifactory.`,\n            lastModified: `The time this artifact was modified. If this value is not available, the artifact's 'Created' value is used.\nThis can occur if the artifact is deployed without the 'X-Artifactory-Last-Modified' request header.`,\n            licenses: `Scans the archive for a textual license file. The following file names are searched for:\nlicense,LICENSE,license.txt,LICENSE.txt,LICENSE.TXT\n(You can override this list by using the 'artifactory.archive.licenseFile.names' property).`,\n            filtered: `Set this to have Artifactory serve the file as a filtered resource.\nA filtered textual resource is processed by the <a href=\"http://freemarker.org/\" target=\"_blank\">FreeMarker</a> engine before being returned to clients.\nThe context accessible to the template includes:\nProperties ,Security and Request. Javadocs can be found in the <a href=\"http://repo.jfrog.org/artifactory/libs-releases-local/org/artifactory/artifactory-papi/%5BRELEASE%5D/artifactory-papi-%5BRELEASE%5D-javadoc.jar!/index.html\" target=\"_blank\">Artifactory Public API</a>.`,\n            lastReplicationStatus: `Displays the result of the latest run of this repository's scheduled replication.\nCan be one of the following:\nNever ran: Replication has not yet run.\nIncomplete: Replication has not yet completed or was interrupted.\nCompleted with errors: Replication errors were logged.\nCompleted with warnings: Replication warnings were logged.\nCompleted successfully: No errors or warnings logged.\nInconsistent: Replication status cannot be interpreted.`,\n            recursive: `Add the property to all children of the current node.`\n        },\n        search: {\n            stash: `The Stash lets you store search results for later use.\nOnce it is populated, you can add, subtract or intersect new search results to assemble just the right set of artifacts you need.\nThe Stash Browser displays all the artifacts in your stash and provides a convenient way to perform bulk operations.\nYou can copy or move the entire Stash to a repository, or perform actions on individual items.`\n        },\n\n        general: {\n            /*name: 'Copy this link to navigate directly to this item in the tree browser.',*/\n            created: `The time this artifact was deployed to or cached in Artifactory`,\n            filtered: `Set this to have Artifactory serve the file as a filtered resource.\nA filtered textual resource is processed by the <a href=\"http://freemarker.org/\" target=\"_blank\">FreeMarker</a> engine before being returned to clients.\nThe context accessible to the template includes:\nProperties ,Security and Request. Javadocs can be found in the <a href=\"http://repo.jfrog.org/artifactory/libs-releases-local/org/artifactory/artifactory-papi/%5BRELEASE%5D/artifactory-papi-%5BRELEASE%5D-javadoc.jar!/index.html\" target=\"_blank\">Artifactory Public API</a>.`\n        },\n        selectTargetPathModal: {\n            targetRepoInput: [`Selects the target repository for the transferred items.`,\n`Repositories starting with an exclamation mark (\\'!\\') indicate that not all tokens`,\n`can be mapped between the layouts of the source repository and the marked repository.`,\n`Path translations may not work as expected.`].join(' '),\n            copyToCustomCheckbox: {\n                copy: [`Enable copying and renaming to a custom target path. WARNING: This will cause`,\n`the operation to suppress cross-layout translation when copying to different layouts.`,\n`This means that your client may not be able to resolve the artifacts even in cases of a same-layout move.`].join(' '),\n                move: [`Enable moving and renaming to a custom target path. WARNING: This will cause`,\n`the operation to suppress cross-layout translation when moving to different layouts.`,\n`This means that your client may not be able to resolve the artifacts even in cases of a same-layout move.`].join(' ')\n            },\n            customPathInput: {\n                copy: [`Type the path in the target repository where the selected source should be copied to.`,\n`NOTE: Copy operations are executed using Unix conventions (e.g.copying org/jfrog/example from`,\n`a source repository to org/jfrog/example in a target repository will result in the contents of the source`,\n`being copied to org/jfrog/example/example). To achieve the same path in the target repository, copy`,\n`the source into one folder up in the hierarchy (i.e. copy source org/jfrog/example into target org/jfrog).`,\n`If you leave the Target Path empty, the source will be moved into the target repository\\'s root folder.`].join(' '),\n                move: [`Type the path in the target repository where the selected source should be moved to.`,\n`NOTE: Move operations are executed using Unix conventions (e.g. moving org/jfrog/example from`,\n`a source repository to org/jfrog/example in a target repository will result in the contents of the source`,\n`being moved to org/jfrog/example/example). To achieve the same path in the target repository, move`,\n`the source into one folder up in the hierarchy (i.e. move source org/jfrog/example into target org/jfrog).`,\n`If you leave the Target Path empty, the source will be moved into the target repository\\'s root folder.`].join(' ')\n            }\n\n        }\n    },\n    builds: {\n        summary: `An artifact license can have one of the following statuses:\nUnapproved: The license found is not approved.\nUnknown: License information was found but cannot be related to any license managed in Artifactory.\nNot Found: No license information could be found for the artifact.\nNeutral: The license found is not approved, however another approved license was found for the artifact.\nApproved: The license found is approved.`,\n        includePublishedArtifacts: `Include the build's published module artifacts in the license report if they are also used as dependencies for other modules in this build.`,\n        IncludeDependenciesOfTheFollowingScopes: `Include the build's published module dependencies in the license report.\nYou can optionally select the dependency scopes to include.`,\n        autoFindLicenses: `Automatically extract license data from artifacts' module information.\nWhen an artifact has conflicting licenses already attached, you can select whether\nto override these licenses with the ones found.`,\n        name: `The Code Center application name. Click on the link to navigate to this application in Code Center.`\n    },\n    userProfile: {\n        apiKey: `Your API key can be used to authenticate you when using the REST API.\nTo use the API key, add the following header to all REST API calls: 'X-JFrog-Art-Api: &ltYOUR_API_KEY&gt'`\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./constants/artifact_tooltip.constant.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    localChecksumPolicy:{\n        CLIENT:'Verify against client checksums',\n        SERVER:'Trust server generated checksums'\n    },\n    remoteChecksumPolicy:{\n        GEN_IF_ABSENT:'Generate if absent',\n        FAIL:'Fail',\n        IGNORE_AND_GEN:'Ignore and generate',\n        PASS_THRU:'Ignore and pass-through'\n    },\n    snapshotRepositoryBehavior:{\n        UNIQUE:'Unique',\n        NONUNIQUE:'Non-unique',\n        DEPLOYER:'Deployer'\n    },\n    pomCleanupPolicy:{\n        discard_active_reference:'Discard active references',\n        discard_any_reference:'Discard any reference',\n        nothing:'Nothing'\n    },\n    dockerApiVersion:{\n        V1:'V1',\n        V2:'V2'\n    },\n    vcsGitProvider:{\n        GITHUB:'GitHub',\n        BITBUCKET:'BitBucket',\n        STASH:'Stash / Private BitBucket',\n        OLDSTASH:'Stash / Private BitBucket (prior to 5.1.0)',\n        ARTIFACTORY:'Artifactory',\n        CUSTOM:'Custom'\n    },\n    defaultLayouts:{\n        maven:'maven-2-default',\n        ivy:'ivy-default',\n        gradle:'gradle-default',\n        nuget:'nuget-default',\n        npm:'npm-default',\n        bower:'bower-default',\n        composer:'composer-default',\n        conan:'conan-default',\n        puppet: 'puppet-default',\n        vcs:'vcs-default',\n        sbt:'sbt-default'\n    },\n    REPO_TYPE:{\n        LOCAL:'local',\n        REMOTE:'remote',\n        VIRTUAL: 'virtual',\n        DISTRIBUTION: 'distribution'\n    },\n    repoPackageTypes:[\n        {\n            \"serverEnumName\": \"Bower\",\n            \"value\": \"bower\",\n            \"text\": \"Bower\",\n            \"icon\": 'bower',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Bower package manager is optimized for front-end development. A Bower repository will allow you to easily manage your Bower packages and proxy remote Bower repositories.'\n        },\n        {\n            \"serverEnumName\": \"Chef\",\n            \"value\": \"chef\",\n            \"text\": \"Chef\",\n            \"icon\": 'chef',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Chef Description' // TODO\n        },\n        {\n            \"serverEnumName\": \"CocoaPods\",\n            \"value\": \"cocoapods\",\n            \"text\": \"CocoaPods\",\n            \"icon\": 'cocoapods',\n            \"repoType\": ['local', 'remote'],\n            \"description\": 'CocoaPods is an application level dependency manager for the Objective-C programming language and any other languages that run on the Objective-C runtime, that provides a standard format for managing external libraries.'\n        },\n        {\n            \"serverEnumName\": \"Conan\",\n            \"value\": \"conan\",\n            \"text\": \"Conan\",\n            \"icon\": 'conan',\n            \"repoType\": ['local'],\n            \"description\": 'Conan is a portable package manager, intended for C and C++ developers, but it is able to manage builds from source, dependencies, and precompiled binaries for any language.'\n        },\n        {\n            \"serverEnumName\": \"Conda\",\n            \"value\": \"conda\",\n            \"text\": \"Conda\",\n            \"icon\": 'conda',\n            \"repoType\": ['local', 'remote', 'virtual']\n        },\n        {\n            \"serverEnumName\": \"CRAN\",\n            \"value\": \"cran\",\n            \"text\": \"CRAN\",\n            \"icon\": 'cran',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": ''\n        },\n        {\n            \"serverEnumName\": \"Debian\",\n            \"value\": \"debian\",\n            \"text\": \"Debian\",\n            \"icon\": 'debian',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'A Debian repository will allow you to host, cache and distribute your packages for Debian based operating systems such as Ubuntu.'\n        },\n        {\n            \"serverEnumName\": \"Docker\",\n            \"value\": \"docker\",\n            \"text\": \"Docker\",\n            \"icon\": 'docker',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Docker allows you to package an application with all of its dependencies into a standardized unit for software development. A Docker repository will allow you to easily and securely manage your Docker images.'\n        },\n        {\n            \"serverEnumName\": \"Gems\",\n            \"value\": \"gems\",\n            \"text\": \"Gems\",\n            \"icon\": 'gems',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'A RubyGems repository allows you to easily download, install, and use ruby software packages in your system. Gems can be used to extend or modify functionality in Ruby applications.'\n        },\n        {\n            \"serverEnumName\": \"GitLfs\",\n            \"value\": \"gitlfs\",\n            \"text\": \"Git LFS\",\n            \"icon\": 'git-lfs',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Git LFS replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents in an Artifactory repository. This allows you to work with the same Git workflow, but with better access control, faster download and more repository space.'\n        },\n        {\n            \"serverEnumName\": \"Go\",\n            \"value\": \"go\",\n            \"text\": \"Go\",\n            \"icon\": 'golang',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": ''\n        },\n        {\n            \"serverEnumName\": \"Gradle\",\n            \"value\": \"gradle\",\n            \"text\": \"Gradle\",\n            \"icon\": 'gradle',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Gradle is a build automation tool which lets model your problem domain declaratively using a powerful and expressive domain-specific language (DSL) implemented in Groovy.'\n        },\n        {\n            \"serverEnumName\": \"Helm\",\n            \"value\": \"helm\",\n            \"text\": \"Helm\",\n            \"icon\": 'helm',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": ''\n        },\n        {\n            \"serverEnumName\": \"Ivy\",\n            \"value\": \"ivy\",\n            \"text\": \"Ivy\",\n            \"icon\": 'ivy',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Apache Ivy is a popular dependency manager focusing on flexibility and simplicity. Ivy offers full integration with ant, and a strong transitive dependency management engine.'\n        },\n        {\n            \"serverEnumName\": \"Maven\",\n            \"value\": \"maven\",\n            \"text\": \"Maven\",\n            \"icon\": 'maven',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Apache Maven is a build automation tool which provides useful project information from your project’s sources.'\n        },\n        {\n            \"serverEnumName\": \"Npm\",\n            \"value\": \"npm\",\n            \"text\": \"npm\",\n            \"icon\": 'npm',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'npm package manager makes it easy for JavaScript developers to share, reuse code, and update code. Host your own node.js packages in Artifactory and proxy remote npm repositories. Use npm against a single in-house repository under your control for your all npm needs.'\n        },\n        {\n            \"serverEnumName\": \"NuGet\",\n            \"value\": \"nuget\",\n            \"text\": \"NuGet\",\n            \"icon\": 'nuget',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'NuGet is the package manager for Microsoft development platforms including .NET. Host and proxy NuGet packages in Artifactory, and pull libraries from Artifactory into your various Visual Studio .NET applications.'\n        },\n        {\n            \"serverEnumName\": \"Opkg\",\n            \"value\": \"opkg\",\n            \"text\": \"Opkg\",\n            \"icon\": 'opkg',\n            \"repoType\": ['local', 'remote'],\n            \"description\": 'Opkg is a lightweight package management system based upon ipkg. It is intended for use on embedded Linux devices, and is commonly used for IoT.'\n        },\n        {\n            \"serverEnumName\": \"Composer\",\n            \"value\": \"composer\",\n            \"text\": \"PHP Composer\",\n            \"icon\": 'composer',\n            \"repoType\": ['local', 'remote'],\n            \"description\": 'Composer is a dependency manager for PHP.'\n        },\n        {\n            \"serverEnumName\": \"P2\",\n            \"value\": \"p2\",\n            \"text\": \"P2\",\n            \"icon\": 'p2',\n            \"repoType\": ['remote', 'virtual'],\n            \"description\": 'P2 provides a provisioning platform for Eclipse and Equinox-based applications.'\n        },\n        {\n            \"serverEnumName\": \"Pypi\",\n            \"value\": \"pypi\",\n            \"text\": \"PyPI\",\n            \"icon\": 'pypi',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'The Python Package Index for the Python programming language. Transparently resolve PyPI distribution locations, whether local or remote. Exercise fine-grained access control to all PyPI resources with comprehensive security measures and full support for pip.'\n        },\n        {\n            \"serverEnumName\": \"Puppet\",\n            \"value\": \"puppet\",\n            \"text\": \"Puppet\",\n            \"icon\": 'puppet',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'A repository of puppet modules.'\n        },\n        {\n            \"serverEnumName\": \"SBT\",\n            \"value\": \"sbt\",\n            \"text\": \"SBT\",\n            \"icon\": 'sbt',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'Sbt is a build tool for the Scala community and Java projects. Sbt uses advanced concepts to provide flexible and powerful build definitions.'\n        },\n        {\n            \"serverEnumName\": \"Vagrant\",\n            \"value\": \"vagrant\",\n            \"text\": \"Vagrant\",\n            \"icon\": 'vagrant',\n            \"repoType\": ['local'],\n            \"description\": 'Vagrant provides easy-to-configure, reproducible, and portable work environments built on top of industry-standard technology and controlled by a single consistent workflow.'\n        },\n        {\n            \"serverEnumName\": \"VCS\",\n            \"value\": \"vcs\",\n            \"text\": \"VCS\",\n            \"icon\": 'vcs',\n            \"repoType\": ['remote'],\n            \"description\": 'A VCS remote repository gives you stable and reliable access to your source code with security and access control, along with smart search capabilities for any of the supported version control systems.'\n        },\n        {\n            \"serverEnumName\": \"YUM\",\n            \"value\": \"yum\",\n            \"text\": \"RPM\",\n            \"icon\": 'rpm',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'An RPM repository will allow you to host, cache and distribute your RPM packages.'\n        },\n        {\n            \"serverEnumName\": \"Generic\",\n            \"value\": \"generic\",\n            \"text\": \"Generic\",\n            \"icon\": 'generic',\n            \"repoType\": ['local', 'remote', 'virtual'],\n            \"description\": 'A generic repository can be used to host and proxy any type of file.'\n        },\n        {\n            \"serverEnumName\": \"BuildInfo\",\n            \"value\": \"buildinfo\",\n            \"text\": \"Build Info\",\n            \"icon\": 'builds-new',\n            \"repoType\": []\n        }\n    ],\n    sslCertificate:{\n        subject:'Subject',\n        issuer:'Issuer',\n        certificate: 'Certificate',\n        common_name: 'Common Name',\n        organization: 'Organization',\n        unit: 'Unit',\n        issued_on: 'Issued On',\n        valid_until: 'Valid Until',\n        fingerprint: 'Fingerprint',\n        dateFields:['issued_on','valid_until'],\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./constants/field_options.constats.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    'Watch': {title: 'Watch', icon: 'icon-watch'},\n    'Unwatch': {title: 'Unwatch', icon: 'icon-unwatch'},\n    'Download': {title: 'Download', icon: 'icon-download'},\n    'DownloadFolder': {title: 'Download', icon: 'icon-download'},\n    'View': {title: 'View', icon: 'icon-view'},\n    'Delete': {title: 'Delete', icon: 'icon-clear'},\n    'DeletePermanently': {title: 'Delete Permanently', icon: 'icon-clear'},\n    'Copy': {title: 'Copy', icon: 'icon-copy'},\n    'Move': {title: 'Move', icon: 'icon-move'},\n    'CopyStash': {title: 'Copy Stash to Repository', icon: 'icon-copy'},\n    'MoveStash': {title: 'Move Stash to Repository', icon: 'icon-move'},\n    'ShowInTree': {title: 'Show In Tree', icon: 'icon-show-in-tree'},\n    'DiscardFromStash': {title: 'Discard from Stash', icon: 'icon-delete-content'},\n    'DiscardStash': {title: 'Discard Search Results', icon: 'icon-delete-content'},\n    'DeleteContent': {title: 'Delete Content', icon: 'icon-clear'},\n    'CopyContent': {title: 'Copy Content', icon: 'icon-copy'},\n    'MoveContent': {title: 'Move Content', icon: 'icon-move'},\n    'DeleteVersions': {title: 'Delete Versions', icon: 'icon-delete-versions'},\n    'Refresh': {title: 'Refresh', icon: 'icon-refresh'},\n    'UploadToBintray': {title: 'Push to Bintray', icon: 'icon-bintray'},\n    'Distribute': {title: 'Distribute to Bintray', icon: 'icon-distribution-repo'},\n    'Redistribute': {title: 'Redistribute', icon: 'icon-distribution-repo'},\n    'Zap': {title: 'Zap Cache', icon: 'icon-zap'},\n    'ZapCaches': {title: 'Zap Caches', icon: 'icon-zap'},\n    'RecalculateIndex': {title: 'Recalculate Index', icon: 'icon-re-index'},\n    'CalculateDebianCoordinates': {title: 'Calculate Coordinates', icon: 'icon-re-index'},\n    'NativeBrowser': {title: 'Native Browser', icon: 'icon-simple-browser'},\n    'EmptyTrash': {title: 'Empty Trash Can', icon: 'icon-trash'},\n    'SearchTrash': {title: 'Search Trash Can', icon: 'icon-search'},\n    'Restore': {title: 'Restore', icon: 'icon-trashcan-restore'},\n    'IgnoreAlert': {title: 'Ignore Alert', icon: 'icon-xray-ignore-alert'},\n    'UnignoreAlert': {title: 'Un-Ignore Alert', icon: 'icon-xray-alert'},\n    'Favorites': {title: 'Add to Favorites', icon: 'icon-star'}\n};\n\n\n// WEBPACK FOOTER //\n// ./constants/artifacts_actions.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by tomere on 2/22/2017.\n */\nexport default{\n    actions:{\n        distribute:{\n            noRepos:{\n                admin: {\n                    message: `No distribution repositories are configured. To distribute artifacts and builds, <a class=\"jf-link\" href=\"#/admin/repositories/distribution\">create a Distribution repository</a>.\n                              To learn about distribution repositories, refer to the Artifactory <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Distribution+Repository\">User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                    messageType: 'alert-info'\n                },\n                nonAdmin: {\n                    message: `No distribution repositories are configured.\n                              To learn about distribution repositories, refer to the Artifactory <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Distribution+Repository\">User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                    messageType: 'alert-info'\n                }\n            },\n            inOfflineMode: {\n                message: `Global offline mode is enabled. To allow distribution, disable the global offline mode through the General Configuration page.`,\n                messageType: 'alert-danger'\n            },\n            noPermissions: {\n                message: `You do not have distribute and deploy permissions.`,\n                messageType: 'alert-danger'\n            }\n        },\n        deploy:{\n            deployToDistRepoErrorMessage:{\n                message:`File(s) cannot be directly deployed to a distribution repository. Instead, use the \"Distribute\" action on the relevant repository or select an alternative target repository.`,\n                messageType:`alert-danger`\n            },\n            deployPermissionsErrorMessage:{\n                message:`You do not have deploy permission`,\n                messageType:`alert-danger`\n            },\n            hasNoDefaultDeployRepo:{\n                message:`This virtual repository is not configured with a default deployment repository. To learn about configuring virtual repositories, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Deploying+Artifacts#DeployingArtifacts-DeployingtoaVirtualRepository\" target=\"_blank\">Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                messageType:`alert-warning`\n            },\n            cannotDeployToRemote:{\n                message:`Cannot deploy to a remote repository. To learn about remote repositories, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Remote+Repositories\" target=\"_blank\">Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                messageType:`alert-danger`\n            },\n            cannotDeployToTrashCan:{\n                message:`Cannot deploy to Trash Can. To learn about the Trash Can, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Browsing+Artifactory#BrowsingArtifactory-TrashCan\" target=\"_blank\">Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                messageType:`alert-danger`\n            },\n        }\n    },\n    set_me_up:{\n        puppet:{\n            puppetClientVersion:`If you are using Puppet version 4.9.1 and below, you need to modify your reverse proxy configuration. For details, refer to <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Puppet+Repositories#PuppetRepositories-UsingPuppet4.9.1andBelow\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`\n        },\n        hasNoDeployPermissions:{\n            message:`You do not have deploy permissions to this repository`\n        },\n        hasNoRepositoriesOfType:{\n            message:`No repositories match the selected tool`\n        }\n    },\n    xray_tab: {\n        blocked_artifact: \"Xray has a policy blocking this artifact for download.\",\n        blocked_artifact_ignored: \"Artifactory’s Xray configuration has overridden Xray’s policy blocking the download of this artifact.\"\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./constants/artifacts_messages.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Configuration from './configuration/configuration.module';\nimport Repositories from './repositories/repositories.module';\nimport Advanced from './advanced/advanced.module';\nimport Dashboard from './dashboard/dashboard.module';\nimport ImportExport from './import_export/import_export.module';\nimport Security from './security/security.module';\nimport Services from './services/admin.services.module';\n\nimport {AdminController} from './admin.controller';\n\nfunction adminConfig($stateProvider) {\n    $stateProvider\n            .state('admin', {\n                url: '/admin',\n                parent: 'app-layout',\n                templateUrl: \"states/admin/admin.html\",\n                controller: 'AdminController as Admin'\n            })\n}\n\nexport default angular.module('admin.module', [\n    Configuration.name,\n    Repositories.name,\n    Advanced.name,\n    Dashboard.name,\n    ImportExport.name,\n    Security.name,\n    Services.name\n])\n        .config(adminConfig)\n        .controller('AdminController', AdminController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/admin.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Licenses from \"./licenses/licenses.module\";\nimport Mail from \"./mail/mail.module\";\nimport Xray from \"./xray/xray.module\";\nimport Proxies from \"./proxies/proxies.module\";\nimport ReverseProxies from \"./reverse_proxies/reverse_proxies.module\";\nimport RegisterPro from \"./register_pro/register_pro.module\";\nimport Bintray from \"./bintray/bintray.module\";\nimport General from \"./general/general.module\";\nimport PropertySets from \"./property_sets/property_sets.module\";\nimport HighAvailability from \"./ha/ha.module\";\nimport {AdminConfigurationController} from \"./configuration.controller\";\n\n/**\n * configuration and state definition\n * @param $stateProvider\n */\nfunction configurationConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.configuration', {\n                url: '/configuration',\n                template: '<ui-view></ui-view>',\n                controller: 'AdminConfigurationController as AdminConfiguration'\n            })\n}\n\n/**\n * Module definition\n */\nexport default angular.module('admin.configuration', [\n    Licenses.name,\n    Mail.name,\n    Xray.name,\n    Proxies.name,\n    ReverseProxies.name,\n    RegisterPro.name,\n    Bintray.name,\n    General.name,\n    PropertySets.name,\n    HighAvailability.name\n\n])\n        .config(configurationConfig)\n        .controller('AdminConfigurationController', AdminConfigurationController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/configuration.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationLicensesController} from './licenses.controller';\nimport {AdminConfigurationLicenseFormController} from './license_form.controller'\n\nfunction licensesConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.licenses', {\n                url: '/licenses',\n                params: {feature: 'licenses'},\n                templateUrl: 'states/admin/configuration/licenses/licenses.html',\n                controller: 'AdminConfigurationLicensesController as AdminConfigurationLicenses'\n            })\n            .state('admin.configuration.licenses.edit', {\n                parent: 'admin.configuration',\n                url: '/licenses/{licenseName}/edit',\n                params: {feature: 'licenses'},\n                templateUrl: 'states/admin/configuration/licenses/license_form.html',\n                controller: 'AdminConfigurationLicenseFormController as AdminLicenseForm'\n            })\n            .state('admin.configuration.licenses.new', {\n                parent: 'admin.configuration',\n                url: '/licenses/new',\n                params: {feature: 'licenses'},\n                templateUrl: 'states/admin/configuration/licenses/license_form.html',\n                controller: 'AdminConfigurationLicenseFormController as AdminLicenseForm'\n            })\n}\n\n\nexport default angular.module('configuration.licenses', ['ui.router'])\n        .config(licensesConfig)\n        .controller('AdminConfigurationLicensesController', AdminConfigurationLicensesController)\n        .controller('AdminConfigurationLicenseFormController', AdminConfigurationLicenseFormController);        \n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/licenses/licenses.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport API from '../../../../constants/api.constants';\n\nexport class AdminConfigurationLicensesController {\n\n    constructor($scope, $window, JFrogModal, LicensesDao, JFrogGridFactory, ArtifactoryState, uiGridConstants) {\n        this.$window = $window;\n        this.gridOption = {};\n        this.uiGridConstants = uiGridConstants;\n        this.licensesDao = LicensesDao;\n        this.$scope=$scope;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n\n        this._createGrid();\n        this._initLicenses();\n\n\n        //clear 'prevState' in ArtifactoryState, used to return from license form to another state (Builds->Licenses)\n        ArtifactoryState.setState('prevState', undefined);\n    }\n\n    _initLicenses() {\n        this.licensesDao.getLicense().$promise.then((licenses)=> {\n            this.licenses = licenses;\n            this.gridOption.setGridData(this.licenses.data)\n        });\n    }\n\n    _createGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getCloumns())\n                .setRowTemplate('default')\n                .setMultiSelect()\n                .setButtons(this._getActions())\n                .setBatchActions(this._getBatchActions());\n    }\n\n    deleteLicense(license) {\n        let json = {licenseskeys: [license.name]}\n        this.modal.confirm(`Are you sure you want to delete ${license.name}?`)\n                .then(()=> {\n                    this.licensesDao.delete(json).$promise.then(()=>this.updateListTable());\n                });\n    }\n\n    deleteSelectedLicenses() {\n        //Get All selected licenses\n        let selectedRows = this.gridOption.api.selection.getSelectedGridRows();\n        //Create an array of the selected licenses keys\n        let names = _.map(selectedRows, (row) => {return row.entity.name});\n        //Create Json for the bulk request\n        let json = {licenseskeys: names};\n        //console.log('Bulk delete....');\n        //Ask for confirmation before delete and if confirmed then delete bulk of licenses\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} licenses?`)\n                .then(()=> {\n                    this.licensesDao.delete(json).$promise.then(() => this.updateListTable());\n                });\n    }\n\n    updateListTable() {\n        this.licensesDao.getLicense().$promise.then((licenses)=> {\n            this.licenses = licenses;\n            this.gridOption.setGridData(this.licenses.data)\n            if (this.modalInstance) {\n                this.closeModal();\n            }\n        });\n    }\n\n    setStatus(row) {\n        if (row.approved) {\n            row.approved = false;\n            row.status = \"Unapproved\";\n        }\n        else {\n            row.approved = true;\n            row.status = \"Approved\";\n        }\n        this.licensesDao.update(row).$promise.then(()=>this.updateListTable());\n    }\n\n    exportLicenses() {\n        this.$window.open(`${API.API_URL}/licenseexport`, '_self', '');\n    }\n\n    getCloumns() {\n        return [\n            {\n                name: \"License Key\",\n                displayName: \"License Key\",\n                field: \"name\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ui-sref=\"^.licenses.edit({licenseName: row.entity.name})\" id=\"license-key\" class=\"jf-link text-center ui-grid-cell-contents\">{{row.entity.name}}</a></div>',\n                width: '15%'\n            },\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: \"longName\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"license-name\"><span>{{row.entity.longName}}</span></div>',\n                width: '40%'\n\n            },\n            {\n                name: \"URL\",\n                displayName: \"URL\",\n                field: \"url\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" ><a class=\"jf-link\" href=\"{{row.entity.url}}\" target=\"_blank\" id=\"license-url\">{{row.entity.url}}</a></div>',\n                width: '30%'\n            },\n            {\n                name: \"Status\",\n                displayName: \"Status\",\n                field: \"status\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><jf-switch-toggle texton=\"Approved\" id=\"license-status\" textoff=\"Unapproved\" ng-click=\"grid.appScope.AdminConfigurationLicenses.setStatus(row.entity)\" ng-class=\"{\\'on\\': row.entity.approved, \\'off\\': !row.entity.approved}\"></jf-switch-toggle></div>',\n                width: '15%'\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: license => this.deleteLicense(license)\n            }\n        ];\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedLicenses()\n            },\n        ]\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/licenses/licenses.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminConfigurationLicenseFormController {\n    constructor($stateParams, LicensesDao, $state, ArtifactoryState, ArtifactoryModelSaver) {\n    \tthis.state = $state;\n    \tthis.isNew = !$stateParams.licenseName;\n    \tthis.licensesDao = LicensesDao;\n\t\tthis.artifactoryState = ArtifactoryState;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['license']);\n\n        this.TOOLTIP = TOOLTIP.admin.configuration.licenseForm;\n\n    \tif (this.isNew) {\n    \t\tthis.license = new LicensesDao();\n    \t}\n    \telse {\n            this.license = LicensesDao.getSingleLicense({name: $stateParams.licenseName});\n            this.license.$promise.then((data)=>{\n                this.ArtifactoryModelSaver.save();\n            });\n    \t}\n    }\n\n    save() {\n\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n\t\tlet whenSaved = this.isNew ? this.license.$create() : this.license.$update();\n        whenSaved.then(() => {\n            this.savePending = false;\n            this.ArtifactoryModelSaver.save();\n            this._end()\n        }).catch(()=>this.savePending = false);\n\n    }\n\tcancel() {\n        this._end();\n    }\n    _end() {\n        let prevState = this.artifactoryState.getState('prevState');\n        if (prevState) {\n            this.state.go(prevState.state,prevState.params);\n        }\n        else {\n            this.state.go('^.licenses');\n        }\n    }\n\n    testRegex(value) {\n\n        let regex = new RegExp('^[A-Za-z0-9\\._-]*$');\n        return regex.test(value);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/licenses/license_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationMailController} from './mail.controller';\n\nfunction mailConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.mail', {\n                params: {feature: 'mail'},\n                url: '/mail',\n                templateUrl: 'states/admin/configuration/mail/mail.html',\n                controller: 'AdminConfigurationMailController as AdminConfigurationMail'\n            })\n}\n\nexport default angular.module('configuration.mail', [])\n        .config(mailConfig)\n        .controller('AdminConfigurationMailController', AdminConfigurationMailController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/mail/mail.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminConfigurationMailController {\n\n    constructor(MailDao, JFrogEventBus, $timeout, ArtifactoryModelSaver) {\n        this.mailDao = MailDao.getInstance();\n        this.JFrogEventBus = JFrogEventBus;\n        this.getMailData();\n        this.mailSettingsForm = null;\n        this.testReceiptForm = null;\n        this.TOOLTIP = TOOLTIP.admin.configuration.mail;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['mail']);\n        this.$timeout = $timeout;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n    }\n\n    getMailData() {\n        this.mailDao.get().$promise.then((mail)=> {\n            this.mail = mail;\n        this.ArtifactoryModelSaver.save();\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n        });\n    }\n\n    save(form) {\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_SUBMITTED, form.$name);\n        if (this.mailSettingsForm.$valid) {\n            this.mailDao.update(this.mail).$promise.then(()=>{\n                this.ArtifactoryModelSaver.save();\n            });\n        }\n    }\n\n    reset() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.getMailData();\n        });\n\n    }\n    testReceipt(form) {\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_SUBMITTED, form.$name);\n        if (this.testReceiptForm.$valid) {\n            this.mailDao.save(this.mail);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/mail/mail.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationXrayController} from './xray.controller';\n\nfunction xrayConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.xray', {\n                params: {feature: 'xray'},\n                url: '/xray',\n                templateUrl: 'states/admin/configuration/xray/xray.html',\n                controller: 'AdminConfigurationXrayController as AdminConfigurationXray'\n            })\n}\n\nexport default angular.module('configuration.xray', [])\n        .config(xrayConfig)\n        .controller('AdminConfigurationXrayController', AdminConfigurationXrayController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/xray/xray.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\nimport FIELD_OPTIONS from \"../../../../constants/field_options.constats\";\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminConfigurationXrayController {\n\n    constructor($scope, $timeout, XrayDao, ProxiesDao, FooterDao, JFrogModal, JFrogGridFactory, JFrogEventBus,\n            commonGridColumns) {\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.commonGridColumns = commonGridColumns;\n        this.xrayDao = XrayDao;\n        this.proxiesDao = ProxiesDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.footerDao = FooterDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n        this.notConnnectedToXrayMessage = CONFIG_MESSAGES.admin.configuration.xray.notConnnectedToXrayMessage;\n        this.TOOLTIP = TOOLTIP;\n        this.proxyOptions = [\"\"];\n        this.proxy = \"\";\n        this.bypassDefaultProxy = false;\n        this.createGrid();\n        this.getData();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this.getData();\n        });\n    }\n    getData() {\n        this.xrayDao.getIndex().$promise.then((data)=>{\n            _.forEach(data, (row) => {\n\n                let rowPackageType =_.find(FIELD_OPTIONS.repoPackageTypes, (type) => {\n                    return type.value == row.pkgType.toLowerCase();\n                });\n\n                row.packageIcon = rowPackageType.icon;\n                row.repoType = row.type.charAt(0).toUpperCase() + row.type.slice(1);\n                if (row.pkgType === 'YUM') {\n                    row.pkgType = 'RPM';\n                }\n            });\n            this.indexedRepos = data;\n            this.gridOptions.setGridData(data);\n        });\n        this.xrayDao.getNoneIndex().$promise.then((data)=>{\n\n            _.forEach(data, (row) => {\n\n                let rowPackageType =_.find(FIELD_OPTIONS.repoPackageTypes, (type) => {\n                    return type.value == row.pkgType.toLowerCase();\n                });\n\n                row.packageIcon = rowPackageType.icon;\n                row.repoType = row.type.charAt(0).toUpperCase() + row.type.slice(1);\n            });\n\n            this.unindexedRepos = data;\n        });\n        this.xrayDao.getIntegrationConfig().$promise.then((data) => {\n            this.xrayEnabled = data.xrayEnabled;\n            this.xrayAllowWhenUnavailable = data.xrayAllowWhenUnavailable;\n            this.xrayAllowBlocked = data.xrayAllowBlocked;\n            this.bypassDefaultProxy = data.bypassDefaultProxy;\n            this.proxy = data.proxy;\n        });\n        this.proxiesDao.getProxyKeys().$promise.then((proxies) => {\n            _.forEach(proxies, (o) => {\n                this.proxyOptions.push(o);\n            });\n        });\n    }\n\n    createGrid() {\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getColumns())\n                .setMultiSelect()\n                .setButtons(this.getActions())\n                .setRowTemplate('default')\n                .setBatchActions(this.getBatchActions());\n    }\n\n    getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: \"name\",\n                width: '40%'\n            },\n            {\n                name: 'Repository Type',\n                displayName: 'Repository Type',\n                field: \"type\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.repoType}}</div>',\n                width: '30%'\n            },\n            {\n                name: 'Package Type',\n                displayName: 'Package Type',\n                field: \"pkgType\",\n                cellTemplate: this.commonGridColumns.iconColumn('row.entity.pkgType', 'row.entity.packageIcon', 'repo-type-icon'),\n                width: '30%'\n            }\n        ]\n    }\n\n    getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Remove',\n                callback: (row) => this.removeIndexes(row),\n                visibleWhen: () => this.xrayEnabled\n            }\n        ];\n    }\n    getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Remove',\n                callback: () => this.bulkRemove(),\n                visibleWhen: () => this.xrayEnabled\n            }\n        ]\n    }\n\n    add() {\n        if (this.xrayEnabled === true) {\n            let modalScope = this.$scope.$new();\n            let modalInstance;\n\n            modalScope.availableRepos = _.cloneDeep(this.unindexedRepos);\n            modalScope.indexedRepos = _.cloneDeep(this.indexedRepos) || [];\n\n            modalScope.save = (indexed) => {\n                this.xrayDao.updateRepositories({}, indexed).$promise.then(() => {\n                    this.getData();\n                    modalInstance.close();\n                });\n\n            };\n\n            modalInstance = this.modal.launchModal('add_xray_index_modal', modalScope);\n        }\n    }\n\n    removeIndexes(repos) {\n        if (_.isArray(repos)) {\n            this.xrayDao.removeIndex({},repos).$promise.then(() => {\n                this.getData();\n            });\n        }\n        else {\n            this.xrayDao.removeIndex({},[{name: repos.name,type: repos.type}]).$promise.then(() => {\n                this.getData();\n            });\n        }\n    }\n\n    bulkRemove() {\n        let selectedRows = this.gridOptions.api.selection.getSelectedRows();\n        let removeList = _.map(selectedRows,(obj) => _.pick(obj,['name','type']));\n        this.removeIndexes(removeList);\n    }\n\n    _updateFooter() {\n        this.JFrogEventBus.dispatch(EVENTS.FOOTER_REFRESH);\n    }\n\n    xrayEnabledChange() {\n        if (this.xrayEnabled === false) {\n            this.modal.confirm(\"If disabled, Artifactory will not generate events for Xray and your artifacts will not be indexed or scanned.<br /><br />Are you sure you want to disable Xray integration?\", 'Disable Xray Integration', {confirm: 'Disable'})\n            .then(()=> {\n                this.enableDisableXrayIntegration(false);\n            }).catch(() => {\n                this.$timeout(() => {\n                    this.xrayEnabled = true;\n                    this.getData();\n                });\n            });\n        } else {\n            this.enableDisableXrayIntegration(true);\n        }\n    }\n\n    enableDisableXrayIntegration(action) {\n        this.xrayEnabled = action;\n        if (!this.xrayEnabled) {\n            this.xrayAllowWhenUnavailable = this.xrayAllowBlocked = false;\n        }\n        this.xrayDao.setXrayEnabled({}, {xrayEnabled: this.xrayEnabled}).$promise.then(()=> {\n            this.getData();\n        });\n    }\n\n    setAllowWhenUnavailable() {\n        this.xrayDao.xrayAllowWhenUnavailable({}, {xrayAllowWhenUnavailable: this.xrayAllowWhenUnavailable}).$promise;\n    }\n\n    setAllowBlockedDownload() {\n        this.xrayDao.xrayAllowBlocked({}, {xrayAllowBlocked: this.xrayAllowBlocked}).$promise;\n    }\n\n    setBypassDefaultProxy() {\n        this.xrayDao.setBypassDefaultProxy({}, {bypassDefaultProxy: this.bypassDefaultProxy}).$promise;\n    }\n\n    updateProxy() {\n        this.xrayDao.updateXrayProxy(this.proxy).$promise\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/xray/xray.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by tomere on 2/22/2017.\n */\nexport default {\n    admin:{\n        repositories:{\n            local:{\n                noReplicationsMessage:`This repository has not been configured for replication. To learn about replicating repositories, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Repository+Replication\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                noReposMessage:`Artifactory has not been configured with local repositories. To learn about local repositories, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Local+Repositories\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n            },\n            remote:{\n                noReposMessage:`Artifactory has not been configured with remote repositories. To learn about remote repositories, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Remote+Repositories\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                noXrayIntegrationMessage:`This Artifactory instance is not connected to <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/XRAY/Welcome+to+JFrog+Xray\" target=\"_blank\">Xray <i class=\"icon icon-external-link\"></i></a>.`\n            },\n            virtual:{\n                noReposMessage:`Artifactory has not been configured with virtual repositories. To learn about virtual repositories, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Virtual+Repositories\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n            },\n            distribution:{\n                noReposMessage:`Bintray Distribution repositories can be used to distribute your products or packages with <a class=\"jf-link\" href=\"https://bintray.com\" target=\"_blank\">JFrog Bintray <i class=\"icon icon-external-link\"></i></a> - the universal distribution platform.`,\n                ePlusNoReposMessage:`Release bundle repositories store release bundles that have either been received or created for distribution using <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/DIST/Welcome+to+JFrog+Distribution\" target=\"_blank\">JFrog Distribution <i class=\"icon icon-external-link\"></i></a>.`\n            }\n        },\n        configuration:{\n            propertySets:{\n                noSetsMessage:`Artifactory has not been configured with property sets. To learn about configuring Artifactory to work with property sets <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Properties#Properties-PropertySets\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n            },\n            proxies:{\n                noSetsMessage:`Artifactory has not been configured with proxy servers. To learn about configuring Artifactory to work with proxy servers, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Managing+Proxies\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n            },\n            xray:{\n              notConnnectedToXrayMessage:`This Artifactory instance is not connected to Xray. To connect this instance to Xray and index artifacts for analysis, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/XRAY/Welcome+to+JFrog+Xray\" target=\"_blank\">Xray User Guide <i class=\"icon icon-external-link\"></i></a>`\n            },\n            ha:{\n                haNotConfiguredMessage:`High Availability license is installed but HA feature is not configured.<br>\n                                      Visit <a class=\"jf-link\" target=\"_blank\" href=\"https://www.jfrog.com/confluence/display/RTF/Installation+and+Setup#InstallationandSetup-ConfiguringArtifactoryHA\">Artifactory High Availability Installation and Setup <i class=\"icon icon-external-link\"></i></a> page in <a class=\"jf-link\" target=\"_blank\" href=\"https://www.jfrog.com/confluence/display/RTF/Welcome+to+Artifactory\">JFrog's wiki <i class=\"icon icon-external-link\"></i></a> for detailed instructions.`\n            }\n        },\n        security:{\n            general:{\n                passwordDecrypted:`All passwords in your configuration are currently visible in plain text. To encrypt the passwords through REST API, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Artifactory+REST+API#ArtifactoryRESTAPI-ActivateMasterKeyEncryption\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                passwordEncrypted:`All passwords in your configuration are currently encrypted. To decrypt the passwords through REST API, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Artifactory+REST+API#ArtifactoryRESTAPI-DeactivateMasterKeyEncryption\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`\n\n            },\n            users:{\n                userForm:{\n                    userIsAdmin:'This user has Admin privileges and is, therefore, not restricted by any of the permission targets specified in the table below.',\n                },\n            },\n            groups:{\n                noGroupsMessage: `No groups found. To learn about managing groups in Artifactory, refer to the Artifactory User Guide.  <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Managing+Users#ManagingUsers-CreatingandEditingGroups\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n                groupForm:{\n                    groupIsAdmin:'This group has Admin privileges and is, therefore, not restricted by any of the permission targets specified in the table below.',\n                },\n            },\n            accessTokens:{\n                noTokensMessage:`Artifactory has no access tokens to display. To learn how to generate access tokens, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Access+Tokens\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n            },\n            ldap:{\n                noLdapConfigurationMessage:`Artifactory has not been configured with an LDAP server. To learn about configuring Artifactory to work with LDAP, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Managing+Security+with+LDAP\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`\n            }\n        },\n        services:{\n            backups:{\n                noBackupsMessage:`Artifactory has not been configured with backups jobs. To learn about backing up Artifactory, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Managing+Backups\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`\n            }\n        },\n        advanced:{\n            logAnalytics:{\n                sumoLogicIntegrationMessage: `The JFrog Artifactory / Sumo Logic integration gives you a centralized overview of your artifact repositories with the ability to drill down and quickly identify recent changes, check application dependencies and identify potential issues. Through dashboards, queries and searches that are pre-enabled out-of-the-box, Sumo Logic allows you to analyze all data that Artifactory generates. For a complete overview, <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Log+Analytics\" target=\"_blank\">click here <i class=\"icon icon-external-link\"></i></a>.`,\n            },\n            supportZone:{\n                openSupportTicketMessage: `The support info bundle is not sent to JFrog support directly. Once you completed the download log in to JFrog <a class=\"jf-link\" href=\"https://support.jfrog.com/\" target=\"_blank\">Support Portal <i class=\"icon icon-external-link\"></i></a> and open a relevant ticket.`\n            }\n        }\n    },\n    builds:{\n        noBuildsDataMessage: `No builds have been published to Artifactory. To learn about build integration, refer to the <a class=\"jf-link\" href=\"https://www.jfrog.com/confluence/display/RTF/Build+Integration\" target=\"_blank\">JFrog Artifactory User Guide <i class=\"icon icon-external-link\"></i></a>.`,\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./constants/configuration_messages.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationProxiesController} from './proxies.controller';\nimport {AdminConfigurationProxyFormController} from './proxy_form.controller';\n\nfunction proxiesConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.proxies', {\n                params: {feature: 'Proxies'},\n                url: '/proxies',\n                templateUrl: 'states/admin/configuration/proxies/proxies.html',\n                controller: 'AdminConfigurationProxiesController as AdminConfigurationProxies'\n            })\n            .state('admin.configuration.proxies.new', {\n                params: {feature: 'Proxies'},\n                parent: 'admin.configuration',\n                url: '/proxies/new',\n                templateUrl: 'states/admin/configuration/proxies/proxy_form.html',\n                controller: 'AdminConfigurationProxyFormController as ProxyForm'\n            })\n            .state('admin.configuration.proxies.edit', {\n                params: {feature: 'Proxies'},\n                parent: 'admin.configuration',\n                url: '/proxies/:proxyKey/edit',\n                templateUrl: 'states/admin/configuration/proxies/proxy_form.html',\n                controller: 'AdminConfigurationProxyFormController as ProxyForm'\n            })\n}\n\nexport default angular.module('configuration.proxies', [])\n        .config(proxiesConfig)\n        .controller('AdminConfigurationProxiesController', AdminConfigurationProxiesController)\n        .controller('AdminConfigurationProxyFormController', AdminConfigurationProxyFormController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/proxies/proxies.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AdminConfigurationProxiesController {\n\n    constructor($scope, ProxiesDao, JFrogGridFactory, JFrogModal, $q, uiGridConstants, commonGridColumns) {\n        this.gridOptions = {};\n        this.commonGridColumns = commonGridColumns;\n        this.uiGridConstants = uiGridConstants;\n        this.proxiesDao = ProxiesDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n        this.$scope=$scope;\n        this.$q = $q;\n        this.proxies = {};\n        this.noSetsMessage = CONFIG_MESSAGES.admin.configuration.proxies.noSetsMessage;\n        this._createGrid();\n        this._initProxies();\n    }\n\n    _initProxies() {\n        this.proxiesDao.get().$promise.then((proxies)=> {\n            this.proxies = proxies;\n            this.gridOptions.setGridData(proxies)\n        });\n    }\n\n    _createGrid() {\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setMultiSelect()\n                .setButtons(this._getButtons())\n                .setBatchActions(this._getBatchActions())\n                .setRowTemplate('default');\n    }\n\n    deleteSelectedProxies() {\n        let selectedRows = this.gridOptions.api.selection.getSelectedRows();\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} proxies?`)\n            .then(() => {\n                    //Create an array of the selected propertySet names\n                    let keys = _.map(selectedRows, (row) => {return row.key;});\n                    //Create Json for the bulk request\n                    let json = {'proxyKeys': keys};\n                    //console.log('Bulk delete....');\n                    //Delete bulk of property set\n                    this.proxiesDao.delete(json).$promise\n                            .then(()=>this._initProxies());\n            })\n            .then(() => this._initProxies());\n    }\n\n    deleteProxy(key) {\n        this.modal.confirm(`Are you sure you want to delete the proxy '${key}'?<br>Any configurations with this proxy on resources such as remote repositories and replications will be removed.`)\n            .then(() => this._doDeleteProxy(key))\n            .then(() => this._initProxies());\n    }\n\n    _doDeleteProxy(key) {\n\n        let json = {proxyKeys:[key]}\n        //console.log(json);\n        return this.proxiesDao.delete(json).$promise;\n    }\n\n    _getColumns() {\n        return [\n            {\n                field: \"key\",\n                name: \"Key\",\n                displayName: \"Key\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"^.proxies.edit({proxyKey: row.entity.key})\">{{ COL_FIELD }}</a></div>',\n                width: '30%'\n            },\n            {\n                field: \"host\",\n                name: \"Host\",\n                displayName: \"Host\",\n                width: '45%'\n            },\n            {\n                field: \"port\",\n                name: \"Port\",\n                displayName: \"Port\",\n                width: '10%'\n            },\n            {\n                field: \"defaultProxy\",\n                name: \"Default Proxy\",\n                displayName: \"Default Proxy\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.defaultProxy'),\n                width: '15%'\n            }\n        ]\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedProxies()\n            }\n        ]\n    }\n\n    _getButtons() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this.deleteProxy(row.key)\n            }\n\n        ];\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/proxies/proxies.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nlet $state, $stateParams, ProxiesDao, JFrogModal, ArtifactoryModelSaver;\n\nexport class AdminConfigurationProxyFormController {\n\n    constructor(_$state_, _$stateParams_, _ProxiesDao_, _JFrogModal_, _ArtifactoryModelSaver_) {\n        ProxiesDao = _ProxiesDao_;\n        $stateParams = _$stateParams_;\n        $state = _$state_;\n        JFrogModal = _JFrogModal_;\n        ArtifactoryModelSaver = _ArtifactoryModelSaver_.createInstance(this,['proxy']);;\n\n\n        this.isNew = !$stateParams.proxyKey;\n        this.formTitle = `${this.isNew && 'New' || 'Edit ' + $stateParams.proxyKey } Proxy`;\n        this.TOOLTIP = TOOLTIP.admin.configuration.proxyForm;\n        this._initProxy();\n    }\n\n    _initProxy() {\n        if (this.isNew) {\n            this.proxy = {};\n        }\n        else {\n            ProxiesDao.getSingleProxy({key: $stateParams.proxyKey}).$promise\n                .then((proxy) => {\n                        this.proxy = proxy;\n                        this.proxy.redirectedToHostsArray = this.proxy.redirectedToHosts ? this.proxy.redirectedToHosts.split(',') : [];\n                        ArtifactoryModelSaver.save();\n                    });\n        }\n    }\n\n    onChangeDefault() {\n        if (!this.proxy.defaultProxy) return;\n        JFrogModal.confirm('Do you wish to use this proxy with existing remote repositories (and override any assigned proxies)?',\n                '',\n                {confirm: \"OK\"})\n            .catch(() => this.proxy.defaultProxy = false);\n    }\n\n    save() {\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        this.proxy.redirectedToHosts = this.proxy.redirectedToHostsArray ? this.proxy.redirectedToHostsArray.join(',') : undefined;\n\n        let whenSaved = this.isNew ? ProxiesDao.save(this.proxy) : ProxiesDao.update(this.proxy);\n        whenSaved.$promise.then(() => {\n            ArtifactoryModelSaver.save();\n            this._end()\n            this.savePending = false;\n        }).catch(()=>this.savePending = false);\n    }\n\n    cancel() {\n        this._end();\n    }\n\n    _end() {\n        $state.go('^.proxies');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/proxies/proxy_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationReverseProxiesController} from './reverse_proxies.controller';\nimport {AdminConfigurationReverseProxyFormController} from './reverse_proxy_form.controller';\n\nfunction reverseProxiesConfig($stateProvider) {\n    $stateProvider\n/*\n            .state('admin.configuration.reverse_proxies', {\n                params: {feature: 'ReverseProxies'},\n                url: '/reverse_proxies',\n                templateUrl: 'states/admin/configuration/reverse_proxies/reverse_proxies.html',\n                controller: 'AdminConfigurationReverseProxiesController as AdminConfigurationReverseProxies'\n            })\n            .state('admin.configuration.reverse_proxies.new', {\n                params: {feature: 'ReverseProxies'},\n                parent: 'admin.configuration',\n                url: '/reverse_proxies/new',\n                templateUrl: 'states/admin/configuration/reverse_proxies/reverse_proxy_form.html',\n                controller: 'AdminConfigurationReverseProxyFormController as ReverseProxyForm'\n            })\n            .state('admin.configuration.reverse_proxies.edit', {\n                params: {feature: 'ReverseProxies'},\n                parent: 'admin.configuration',\n                url: '/reverse_proxies/:reverseProxyKey/edit',\n                templateUrl: 'states/admin/configuration/reverse_proxies/reverse_proxy_form.html',\n                controller: 'AdminConfigurationReverseProxyFormController as ReverseProxyForm'\n            })\n*/\n            .state('admin.configuration.reverse_proxy', {\n                params: {feature: 'ReverseProxies', reverseProxyKey: 'nginx'},\n                parent: 'admin.configuration',\n                url: '/reverse_proxy',\n                templateUrl: 'states/admin/configuration/reverse_proxies/reverse_proxy_form.html',\n                controller: 'AdminConfigurationReverseProxyFormController as ReverseProxyForm'\n            })\n}\n\nexport default angular.module('configuration.reverse_proxies', [])\n        .config(reverseProxiesConfig)\n        .controller('AdminConfigurationReverseProxiesController', AdminConfigurationReverseProxiesController)\n        .controller('AdminConfigurationReverseProxyFormController', AdminConfigurationReverseProxyFormController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/reverse_proxies/reverse_proxies.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminConfigurationReverseProxiesController {\n\n    constructor($scope, ReverseProxiesDao, JFrogGridFactory, JFrogModal, $q, uiGridConstants, commonGridColumns) {\n        this.gridOptions = {};\n        this.commonGridColumns = commonGridColumns;\n        this.uiGridConstants = uiGridConstants;\n        this.reverseProxiesDao = ReverseProxiesDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n        this.$scope=$scope;\n        this.$q = $q;\n\n        this._createGrid();\n        this._initReverseProxies();\n    }\n\n    _initReverseProxies() {\n        this.reverseProxiesDao.get().$promise.then((reverseProxies)=> {\n            this.gridOptions.setGridData(reverseProxies)\n        });\n    }\n\n    _createGrid() {\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setMultiSelect()\n                .setButtons(this._getButtons())\n                .setBatchActions(this._getBatchActions())\n                .setRowTemplate('default');\n    }\n\n    deleteSelectedReverseProxies() {\n        let selectedRows = this.gridOptions.api.selection.getSelectedRows();\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} reverse proxies?`)\n            .then(() => {\n                    let keys = _.map(selectedRows, (row) => {return row.key;});\n                    this.reverseProxiesDao.delete({proxyKeys: keys}).$promise\n                            .then(()=>this._initReverseProxies());\n            })\n            .then(() => this._initReverseProxies());\n    }\n\n    deleteReverseProxy(key) {\n        this.modal.confirm(`Are you sure you want to delete the reverse proxy '${key}'?`)\n            .then(() => this._doDeleteReverseProxy(key))\n            .then(() => this._initReverseProxies());\n    }\n\n    _doDeleteReverseProxy(key) {\n        return this.reverseProxiesDao.delete({proxyKeys:[key]}).$promise;\n    }\n\n    _getColumns() {\n        return [\n            {\n                field: \"key\",\n                name: \"Key\",\n                displayName: \"Key\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"^.reverse_proxies.edit({reverseProxyKey: row.entity.key})\">{{ COL_FIELD }}</a></div>',\n                width: '30%'\n            },\n            {\n                field: \"webServerType\",\n                name: \"Web Server Type\",\n                displayName: \"Web Server Type\",\n                width: '20%'\n            },\n            {\n                field: \"serverName\",\n                name: \"Server Name\",\n                displayName: \"Server Name\",\n                width: '50%'\n            }\n        ]\n    }\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedReverseProxies()\n            }\n        ]\n    }\n\n    _getButtons() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this.deleteReverseProxy(row.key)\n            }\n\n        ];\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/reverse_proxies/reverse_proxies.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport API from '../../../../constants/api.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nlet $state, $stateParams, $timeout, ReverseProxiesDao, JFrogModal, ArtifactoryModelSaver, ArtifactViewsDao, HaDao, JFrogIFrameDownload;\n\nexport class AdminConfigurationReverseProxyFormController {\n\n    constructor(_$state_, _$stateParams_, _$timeout_, _ReverseProxiesDao_, _JFrogModal_, _ArtifactoryModelSaver_, _ArtifactViewsDao_, _HaDao_, _JFrogIFrameDownload_) {\n        ReverseProxiesDao = _ReverseProxiesDao_;\n        $stateParams = _$stateParams_;\n        $state = _$state_;\n        $timeout = _$timeout_;\n        JFrogModal = _JFrogModal_;\n        ArtifactoryModelSaver = _ArtifactoryModelSaver_.createInstance(this,['reverseProxy']);\n        ArtifactViewsDao = _ArtifactViewsDao_;\n        HaDao = _HaDao_;\n        JFrogIFrameDownload = _JFrogIFrameDownload_;\n\n        this.selectizeConfig = {\n            sortField: 'text',\n            create: false,\n            maxItems: 1\n        };\n\n        this.webServerTypeOptions = [\n            {text: 'Embedded Tomcat', value: 'DIRECT', icon: 'tomcat'},\n            {text: 'Nginx', value: 'NGINX', icon: 'nginx'},\n            {text: 'Apache', value: 'APACHE', icon: 'apache'}\n        ];\n        this.dockerReverseProxyMethodSelectizeOptions = [\n            {text: 'Repository Path', value: 'REPOPATHPREFIX'},\n            {text: 'Port', value: 'PORTPERREPO'},\n            {text: 'Sub Domain', value: 'SUBDOMAIN'}\n        ];\n\n        this.formTitle = `HTTP Settings`;\n        this.TOOLTIP = TOOLTIP.admin.configuration.reverseProxy;\n\n        this._checkHaConfiguration();\n\n        this._initReverseProxy();\n    }\n\n    _checkHaConfiguration() {\n        HaDao.query().$promise.then((ha)=> {\n            this.haConfigured = ha.length > 0;\n        });\n    }\n\n    _initReverseProxy() {\n        ReverseProxiesDao.get({key: 'dummy'}).$promise\n            .then((reverseProxy) => {\n                    this.reverseProxy = reverseProxy;\n                this.internalIp = this.reverseProxy.serverName === 'localhost' || this.reverseProxy.serverName === '127.0.0.1';\n                    // console.log(this.reverseProxy);\n                    this.reverseProxy.key = 'nginx';\n                    this.reverseProxy.serverNameExpression = '*.'+(this.reverseProxy.serverName ? this.reverseProxy.serverName : '<SERVER_NAME>');\n\n                    this.reverseProxy.httpPort = this.reverseProxy.httpPort || 80;\n                    if (this.reverseProxy.publicAppContext === undefined) this.reverseProxy.publicAppContext = 'artifactory';\n                    // default which is good for embedded tomcat docker.\n                    // this.reverseProxy.artifactoryServerName = this.reverseProxy.artifactoryServerName || 'localhost';\n                    this.reverseProxy.artifactoryPort = this.reverseProxy.artifactoryPort || 8081;\n                    if (this.reverseProxy.artifactoryAppContext === undefined) this.reverseProxy.artifactoryAppContext = 'artifactory';\n                    if (!this.reverseProxy.useHttp && !this.reverseProxy.useHttps) this.reverseProxy.useHttp = true;\n                    this.reverseProxy.httpsPort = this.reverseProxy.httpsPort || 443;\n                    this.reverseProxy.upStreamName = this.reverseProxy.upStreamName || 'artifactory';\n\n                    // this.reverseProxy.dockerReverseProxyMethod = this.reverseProxy.dockerReverseProxyMethod || 'NOVALUE';\n\n                    this.reverseProxy.webServerType = _.findWhere(this.webServerTypeOptions, {value: this.reverseProxy.webServerType});\n                    // if none specified : default to\n                    if (!this.reverseProxy.webServerType){\n                        this.reverseProxy.webServerType = this.webServerTypeOptions[0];\n                    }\n\n                    ArtifactoryModelSaver.save();\n\n                    $timeout(()=>{\n                        this.gotData = true;\n                    });\n                });\n    }\n\n    onChangeServerName() {\n        this.reverseProxy.serverNameExpression = '*.'+(this.reverseProxy.serverName ? this.reverseProxy.serverName : '<SERVER_NAME>');\n    }\n\n    save() {\n        let publicAppContext = this.reverseProxy.publicAppContext;\n        let artifactoryAppContext = this.reverseProxy.artifactoryAppContext;\n        this.reverseProxy.publicAppContext = publicAppContext.endsWith('/') ? publicAppContext.substr(0,publicAppContext.length-1) : publicAppContext;\n        this.reverseProxy.artifactoryAppContext = artifactoryAppContext.endsWith('/') ? artifactoryAppContext.substr(0,artifactoryAppContext.length-1) : artifactoryAppContext;\n\n        this.reverseProxy.publicAppContext = this.reverseProxy.publicAppContext.startsWith('/') ? this.reverseProxy.publicAppContext.substr(1) : this.reverseProxy.publicAppContext;\n        this.reverseProxy.artifactoryAppContext = this.reverseProxy.artifactoryAppContext.startsWith('/') ? this.reverseProxy.artifactoryAppContext.substr(1) : this.reverseProxy.artifactoryAppContext;\n\n        let payload = _.cloneDeep(this.reverseProxy);\n\n        payload.webServerType = payload.webServerType.value;\n        payload.key = payload.webServerType.toLowerCase();\n\n        if (payload.dockerReverseProxyMethod !== 'SUBDOMAIN') delete payload.serverNameExpression;\n\n        if (!payload.useHttps) {\n            delete payload.httpsPort;\n            delete payload.sslKey;\n            delete payload.sslCertificate;\n        }\n        if (!payload.useHttp) {\n            delete payload.httpPort;\n        }\n\n        // console.log(\"save\");\n        // console.log(payload);\n        // console.log(this.reverseProxy);\n        let whenSaved = ReverseProxiesDao.save(payload);\n        whenSaved.$promise.then(() => {\n            ArtifactoryModelSaver.save();\n        });\n    }\n\n    viewSnippet() {\n        if (!this.canViewSnippet()) return;\n\n        ArtifactViewsDao.getDockerProxySnippet({},{repoKey: 'dummy'}).$promise.then((data)=>{\n            let message = \"To use your reverse proxy configuration, copy the snippet below and place it in the sites-enabled folder and reload your reverse proxy server. This will affect Artifactory's reverse proxy configuration, and Docker repositories if you have any configured.\"\n            JFrogModal.launchCodeModal(\"Reverse Proxy Configuration Snippet\", data.template, {name: 'text'}, message, \"Snippet\");\n        });\n    }\n    downloadSnippet() {\n        if (!this.canViewSnippet()) return;\n        JFrogIFrameDownload(`${API.API_URL}/views/dockerproxy/dummy?download=true`);\n    }\n    canViewSnippet() {\n        return ArtifactoryModelSaver.isModelSaved() && this.reverseProxyEditForm.$valid;\n    }\n\n    reset() {\n        ArtifactoryModelSaver.ask(true).then(()=>{\n            this._initReverseProxy();\n        });\n\n        //        this._end();\n    }\n\n    // helper representaton functions.\n    getDockerServerAndPort() {\n        let name = this.reverseProxy.serverName;\n        let port = this.reverseProxy.httpPort;\n        if (this.reverseProxy.useHttps){\n            port = this.reverseProxy.httpsPort;\n        }\n\n        if (this.internalIp) {\n            name = \"<Artifactory Host IP Address>\"\n        }\n\n        if (!name) {\n            name = \"<SERVER_NAME>\";\n        }\n        if (!port){\n            port = \"<PORT>\";\n        }\n\n\n        return name+\":\"+port;\n    }\n\n    isProxyEnabled(){\n        if (!this.reverseProxy) {return false;}\n        if (!this.reverseProxy.webServerType) {return false;}\n\n        if (this.reverseProxy.webServerType.value === 'DIRECT'){\n            return false;\n        }\n        return true;\n    }\n\n    changeServerProvider() {\n        if (this.reverseProxy.webServerType.value === 'DIRECT') {\n            this.reverseProxy.useHttps = false;\n        }\n    }\n\n/*\n    _end() {\n        $state.go('^.reverse_proxies');\n    }\n*/\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/reverse_proxies/reverse_proxy_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationRegisterController} from './register_pro.controller';\n\nfunction registerProConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.register_pro', {\n                params: {feature: 'register_pro'},\n                url: '/artifactory_licenses',\n                templateUrl: 'states/admin/configuration/register_pro/register_pro.html',\n                controller: 'AdminConfigurationRegisterController as AdminConfigurationRegister'\n            })\n}\n\nexport default angular.module('configuration.register_pro', [])\n        .config(registerProConfig)\n        .controller('AdminConfigurationRegisterController', AdminConfigurationRegisterController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/register_pro/register_pro.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminConfigurationRegisterController{\n\n    constructor(User, $state,FooterDao) {\n        this.$state = $state;\n        this.User=User;\n        this.footerDao = FooterDao;\n        this.initHa();\n    }\n\n    initHa(){\n        this.footerDao.get().then((footerData)=>{\n            this.isHaConfigured = footerData.haConfigured;\n        });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/register_pro/register_pro.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationBintrayController} from './bintray.controller';\n\nfunction bintrayConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.bintray', {\n                url: '/bintray',\n                templateUrl: 'states/admin/configuration/bintray/bintray.html',\n                controller: 'AdminConfigurationBintrayController as AdminConfigurationBintray'\n            })\n}\n\nexport default angular.module('configuration.bintray', [])\n        .config(bintrayConfig)\n        .controller('AdminConfigurationBintrayController', AdminConfigurationBintrayController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/bintray/bintray.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminConfigurationBintrayController {\n\n    constructor(BintrayDao) {\n        this.bintrayDao = BintrayDao.getInstance();\n        this.TOOLTIP = TOOLTIP.admin.configuration.bintray;\n        this._init();\n    }\n\n    _init() {\n\n        this.bintrayDao.get().$promise.then((data)=>{\n            this.bintray = data;\n            this.bintray.fileUploadLimit = data.fileUploadLimit || 0;\n        });\n    }\n\n    save(bintray) {\n        this.bintrayDao.update(bintray);\n    }\n\n    cancel() {\n        this._init();\n    }\n\n    fullCredentials() {\n        return this.bintray && this.bintray.userName && this.bintray.apiKey;\n    }\n\n    testBintray() {\n        this.bintrayDao.save(this.bintray).$promise\n            .then(data => {});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/bintray/bintray.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationGeneralController} from './general.controller';\n\nfunction generalConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.configuration.general', {\n                url: '/general',\n                params: {focusOnBaseUrl: false},\n                templateUrl: 'states/admin/configuration/general/general.html',\n                controller: 'AdminConfigurationGeneralController as AdminConfiguration'\n            })\n}\n\nexport default angular.module('configuration.general', [])\n    .config(generalConfig)\n    .controller('AdminConfigurationGeneralController',AdminConfigurationGeneralController)\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/general/general.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport API from '../../../../constants/api.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminConfigurationGeneralController {\n\n    constructor($scope, $q, $timeout, $stateParams, FileUploader, JFrogNotifications, GeneralConfigDao, FooterDao, JFrogEventBus, ArtifactoryModelSaver, ArtifactActionsDao, JFrogModal, ArtifactoryFeatures) {\n        this.$scope = $scope;\n        this.$q = $q;\n        this.$timeout = $timeout;\n        this.$stateParams = $stateParams;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.generalConfigDao = GeneralConfigDao;\n        this.footerDao = FooterDao;\n        this.FileUploader = FileUploader;\n        this.modal = JFrogModal;\n        this.logoType = 'File';\n        this.defaultLogoUrl = 'images/artifactory_logo.1406.svg';\n        this.logoEndPoint = `${API.API_URL}/generalConfig/logo`;\n        this.TOOLTIP = TOOLTIP.admin.configuration.general;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['generalConfigData']);\n        this.features = ArtifactoryFeatures;\n\n        this.deleteUserLogo = false;\n\n        this._initUploader();\n\n        this._getGeneralConfigData();\n\n    }\n    customMessageToggle() {\n        this.toggleColorPicker();\n    }\n    toggleColorPicker() {\n        $('.color-picker-input').prop('disabled', !this.generalConfigData.systemMessageEnabled);\n    }\n    _getGeneralConfigData() {\n        this.generalConfigDao.get().$promise.then((data) => {\n            this.generalConfigData = data;\n            this.blockReplications = data.blockPushReplications || data.blockPullReplications;\n            this.generalConfigData.systemMessageTitleColor = this.generalConfigData.systemMessageTitleColor.toUpperCase();\n        this.ArtifactoryModelSaver.save();\n            this._getCurrentImage();\n            if (this.generalConfigData.systemMessageEnabled == false) {\n                this.toggleColorPicker();\n            }\n        });\n    }\n\n    _getCurrentImage() {\n        this._userLogoExists().then(()=>{\n            $(\".artifactory-logo img\")[0].src = this.logoEndPoint;\n\n        })\n            .catch(() => {\n                if (this.generalConfigData.logoUrl) {\n                    this.logoUrlInput = this.generalConfigData.logoUrl;\n                    $(\".artifactory-logo img\")[0].src = this.generalConfigData.logoUrl;\n                }\n                else {\n                    $(\".artifactory-logo img\")[0].src = this.defaultLogoUrl;\n                }\n            });\n    }\n\n    _updateGeneralConfigData() {\n        this.generalConfigDao.update(this.generalConfigData).$promise.then((data) => {\n            this.ArtifactoryModelSaver.save();\n        this.JFrogEventBus.dispatch(EVENTS.FOOTER_DATA_UPDATED);\n        });\n    }\n\n    _deleteUploadedPicture() {\n        this.generalConfigDao.deleteLogo().$promise.then((data) => {\n//            console.log(data);\n        });\n    }\n\n    _initUploader() {\n        this.uploader = new this.FileUploader();\n\n        this.uploader.url = this.logoEndPoint;\n        this.uploader.headers = {'X-Requested-With': 'artUI'};\n        this.uploader.onSuccessItem = this.onUploadSuccess.bind(this);\n    }\n\n    isSelectedLogoType(type) {\n        return this.logoType === type;\n    }\n\n    onUploadSuccess() {\n//        console.log('onUploadSuccess');\n//        this.generalConfigData.logoUrl = this.logoEndPoint;\n        this.logoUrlInput = undefined;\n        this._updateGeneralConfigData();\n        this.uploader.clearQueue();\n    }\n\n    onAfterAddingFile(fileItem) {\n        this.assertImage(fileItem._file).then(()=> {\n            this.logoFile = fileItem.file.name;\n            this.showPreview(fileItem._file);\n        }).catch((err)=> {\n            this.artifactoryNotifications.create({error: err});\n            this.uploader.clearQueue();\n        });\n    }\n\n    assertImage(file) {\n\n        let deferred = this.$q.defer();\n\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            let buffer = reader.result;\n            let uInt8View = new Uint8Array(buffer);\n            let int32Sample = uInt8View[3] + uInt8View[2] * 256 + uInt8View[1] * (256 * 256) + uInt8View[0] * (256 * 256 * 256);\n\n            switch (int32Sample) {\n                case 2303741511: //png\n                case 1195984440: //gif\n                case 1112360694: //bmp\n                case 4292411360: case 4292411361: //jpg\n                //case 1010792557: case 1014199911: //svg\n                    deferred.resolve();\n                    break;\n                default:\n                    deferred.reject('Not an image file!');\n                    break;\n            }\n        };\n        reader.readAsArrayBuffer(file);\n\n        return deferred.promise;\n\n    }\n\n    showPreview(file) {\n        if (typeof FileReader !== \"undefined\" && (/image/i).test(file.type)) {\n            let img = $(\".artifactory-logo img\")[0];\n            let reader = new FileReader();\n            reader.onload = (((theImg) => {\n                return (evt) => {\n                    theImg.src = evt.target.result;\n                }\n            })(img));\n            reader.readAsDataURL(file);\n        }\n    }\n\n    clearLookAndFeel(){\n        this.generalConfigData.logoUrl = '';//this.defaultLogoUrl;\n        this.logoUrlInput = undefined;\n        this.uploader.clearQueue();\n        this.logoFile = undefined;\n\n        this.deleteUserLogo = true;\n\n        this.$timeout(()=>{\n            $(\".artifactory-logo img\")[0].src = this.defaultLogoUrl;\n        });\n    }\n\n    clear() {\n        this.generalConfigData.customUrlBase = '';\n        this.clearLookAndFeel();\n    }\n\n    save() {\n        if (this.isSelectedLogoType('File') && this.uploader.queue.length) {\n            this.uploader.uploadAll();\n        }\n        else {\n            if (this.deleteUserLogo) this._deleteUploadedPicture();\n            this._updateGeneralConfigData();\n        }\n    }\n\n    cancel() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.clear();\n            this._getGeneralConfigData();\n        });\n    }\n\n    onChangeLogoUrl() {\n        let form = this.$scope.formGeneral;\n        if (this.logoUrlInput && !form.logoUrlInput.$invalid) {\n            this._imageExists(this.logoUrlInput)\n            .then(()=>{\n                    this.generalConfigData.logoUrl = this.logoUrlInput;\n                    this.deleteUserLogo = true;\n                })\n            .catch((err)=>console.log(err));\n\n        }\n    }\n\n    _userLogoExists() {\n        let deferred = this.$q.defer();\n        this.footerDao.get(true).then(footerData => {\n            if (footerData.userLogo) {\n                deferred.resolve();\n            }\n            else {\n                deferred.reject();\n            }\n        });\n        return deferred.promise;\n    }\n\n    _imageExists(url) {\n        let deferred = this.$q.defer();\n        let img = new Image();\n        img.onload = () => {\n            deferred.resolve();\n        };\n        img.onerror = () => {\n            deferred.reject('no image found');\n        };\n        img.src = url;\n        return deferred.promise;\n    }\n\n    emptyTrashcan() {\n        this.modal.confirm('Are you sure you want to empty the trash can?', 'Empty Trash',\n            {confirm: 'Empty Trash'})\n            .then(() => this.artifactActionsDao.perform({action: 'emptytrash'}, {}));\n    }\n\n    onChangeBlockReplications() {\n        this.generalConfigData.blockPushReplications = this.blockReplications;\n        this.generalConfigData.blockPullReplications = this.blockReplications;\n    }\n\n    onChangePushPullReplications() {\n        this.blockReplications = this.generalConfigData.blockPushReplications || this.generalConfigData.blockPullReplications;\n    }\n\n    onChangeFolderDownload() {\n        this.generalConfigData.folderDownloadEnabledForAnonymous = false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/general/general.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationPropertySetsController} from './property_sets.controller';\nimport {AdminConfigurationPropertySetFormController} from './property_set_form.controller';\nimport {PropertyFormModalFactory} from './property_form_modal';\n\nfunction propertySetsConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.property_sets', {\n                params: {feature: 'properties'},\n                url: '/property_sets',\n                controller: 'AdminConfigurationPropertySetsController as PropertySets',\n                templateUrl: 'states/admin/configuration/property_sets/property_sets.html'\n            })\n            .state('admin.configuration.property_sets.edit', {\n                params: {feature: 'properties'},\n                parent: 'admin.configuration',\n                url: '/property_sets/{propertySetName}/edit',\n                templateUrl: 'states/admin/configuration/property_sets/property_set_form.html',\n                controller: 'AdminConfigurationPropertySetFormController as PropertySetForm'\n            })\n            .state('admin.configuration.property_sets.new', {\n                params: {feature: 'properties'},\n                parent: 'admin.configuration',\n                url: '/property_sets/new',\n                templateUrl: 'states/admin/configuration/property_sets/property_set_form.html',\n                controller: 'AdminConfigurationPropertySetFormController as PropertySetForm'\n            })\n}\n\nexport default angular.module('configuration.property_sets', [])\n        .config(propertySetsConfig)\n        .controller('AdminConfigurationPropertySetsController', AdminConfigurationPropertySetsController)\n        .controller('AdminConfigurationPropertySetFormController', AdminConfigurationPropertySetFormController)\n        .factory('PropertyFormModal', PropertyFormModalFactory)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/property_sets/property_sets.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nlet $timeout, Property, PropertySet, uiGridConstants;\nexport class AdminConfigurationPropertySetsController {\n\n    constructor($scope, PropertySetsDao, JFrogGridFactory, _$timeout_, _Property_, _PropertySet_, JFrogModal, _uiGridConstants_) {\n        $timeout = _$timeout_;\n        this.propertySetsDao = PropertySetsDao;\n        this.$scope = $scope;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n        Property = _Property_;\n        PropertySet = _PropertySet_;\n        uiGridConstants = _uiGridConstants_;\n        this.propertySets = {};\n        this.noSetsMessage = CONFIG_MESSAGES.admin.configuration.propertySets.noSetsMessage;\n        this._createGrid();\n        this._initPropertySets();\n    }\n\n    _initPropertySets() {\n        this.propertySetsDao.query().$promise.then((propertySets)=> {\n            this.propertySets = propertySets.map((propertySet) => new PropertySet(propertySet));\n            this.gridOptions.setGridData(this.propertySets)\n        });\n    }\n\n    _createGrid() {\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getColumns())\n                .setRowTemplate('default')\n                .setMultiSelect()\n                .setButtons(this._getActions())\n                .setBatchActions(this._getBatchActions());\n    }\n\n\n    deletePropertySet(propertySet) {\n        this.modal.confirm(`Are you sure you want to delete the property set '${propertySet.name}?'`)\n            .then(() => {\n                let json = {propertySetNames:[propertySet.name]};\n                this.propertySetsDao.delete(json).$promise\n                    .then(()=>this._initPropertySets());\n            });\n    }\n\n    deleteSelectedPropertySets() {\n        //Get All selected users\n        let selectedRows = this.gridOptions.api.selection.getSelectedGridRows();\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} property sets?`)\n            .then(() => {\n                //Create an array of the selected propertySet names\n                let names = selectedRows.map(row => row.entity.name);\n                //Delete bulk of property sets\n                this.propertySetsDao.delete({propertySetNames: names}).$promise\n                        .then(()=>this._initPropertySets());\n            });\n    }\n\n    getColumns() {\n        return [\n            {\n                field: \"name\",\n                name: \"Property Set Name\",\n                displayName: \"Property Set Name\",\n                sort: {\n                    direction: uiGridConstants.ASC\n                },\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ui-sref=\"^.property_sets.edit({propertySetName: row.entity.name})\" class=\"jf-link text-center ui-grid-cell-contents\">{{row.entity.name}}</a></div>'\n            },\n            {\n                field: \"propertiesCount\",\n                name: \"Properties Count\",\n                displayName: \"Properties Count\"\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: propertySet => this.deletePropertySet(propertySet)\n            }\n        ];\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedPropertySets()\n            },\n        ]\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/property_sets/property_sets.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\n// Injectables:\nlet $q, $scope, $state, $stateParams, JFrogGridFactory, PropertySetsDao, PropertyFormModal, Property, PropertySet, uiGridConstants, JFrogModal, ArtifactoryModelSaver;\n\nexport class AdminConfigurationPropertySetFormController {\n    constructor(_$stateParams_, _$scope_, _PropertySetsDao_, _$state_, _JFrogGridFactory_, _PropertyFormModal_, ArtifactoryState, _$q_, _Property_, _PropertySet_, _uiGridConstants_, _JFrogModal_, _ArtifactoryModelSaver_) {\n        $scope = _$scope_;\n    \t$state = _$state_;\n        $stateParams = _$stateParams_;\n        Property = _Property_;\n        PropertySet = _PropertySet_;\n        JFrogModal = _JFrogModal_;\n        ArtifactoryModelSaver = _ArtifactoryModelSaver_.createInstance(this,['propertySet']);;\n\n    \tthis.isNew = !$stateParams.propertySetName;\n    \tPropertySetsDao = _PropertySetsDao_;\n        PropertyFormModal = _PropertyFormModal_;\n        JFrogGridFactory = _JFrogGridFactory_;\n        $q = _$q_;\n        uiGridConstants = _uiGridConstants_;\n\n        this.TOOLTIP = TOOLTIP.admin.configuration.propertySetsForm;\n        this._createGrid();\n        this._initPropertySet();\n        ArtifactoryState.setState('prevState', $state.current);\n    }\n\n    _initPropertySet() {\n        let promise;\n        if (this.isNew) {\n            promise = $q.when();\n        }\n        else {\n            promise = PropertySetsDao.get({name: $stateParams.propertySetName}).$promise;\n        }\n        promise.then((propertySet) => {\n            this.propertySet = new PropertySet(propertySet);\n            ArtifactoryModelSaver.save();\n            this.gridOptions.setGridData(this.propertySet.properties)\n        });\n    }\n\n    _createGrid() {\n        this.gridOptions = JFrogGridFactory.getGridInstance($scope)\n                .setColumns(this.getColumns())\n                .setRowTemplate('default')\n                .setMultiSelect()\n                .setButtons(this._getActions())\n                .setBatchActions(this._getBatchActions());\n    }\n\n    save() {\n\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        let whenSaved = this.isNew ? PropertySetsDao.save(this.propertySet) : PropertySetsDao.update(this.propertySet);\n        whenSaved.$promise.then(() => {\n            ArtifactoryModelSaver.save();\n            this._end()\n            this.savePending = false;\n        }).catch(()=>this.savePending = false);\n    }\n\n\tcancel() {\n        this._end();\n    }\n\n    _end() {\n        $state.go('^.property_sets');\n    }\n\n    editProperty(property) {\n        // (Adam) Don't take the actual property object because it's different after filtering the GRID\n        // Instead, we find the property in the original propertySet\n        property = this.propertySet.getPropertyByName(property.name);\n        this._launchPropertyEditor(property, false);\n    }\n\n    newProperty(e) {\n        e.preventDefault();\n        let property = new Property();\n        this._launchPropertyEditor(property, true);\n    }\n\n    _launchPropertyEditor(property, isNew) {\n        new PropertyFormModal(this.propertySet, property, isNew).launch()\n        .then(() => {\n            if (isNew) {\n                this.propertySet.addProperty(property);\n            }\n            // (Adam) Must reset the data, because of the filter\n            this.gridOptions.setGridData(this.propertySet.properties);\n        });\n    }\n\n    _doDeleteProperty(property) {\n        this.propertySet.removeProperty(property.name);\n    }\n\n    deleteProperty(property) {\n        JFrogModal.confirm(`Are you sure you want to delete the property '${property.name}?'`)\n            .then(() => {\n                this._doDeleteProperty(property);\n                this.gridOptions.setGridData(this.propertySet.properties);\n            });\n    }\n\n    deleteSelectedProperties() {\n        let selectedRows = this.gridOptions.api.selection.getSelectedGridRows();\n        JFrogModal.confirm(`Are you sure you want to delete ${selectedRows.length} properties?`)\n            .then(() => {\n                selectedRows.forEach((row) => this._doDeleteProperty(row.entity));\n                this.gridOptions.setGridData(this.propertySet.properties);\n            });\n    }\n\n    getColumns() {\n        return [\n            {\n                field: \"name\",\n                name: \"Property Name\",\n                displayName: \"Property Name\",\n                sort: {\n                    direction: uiGridConstants.ASC\n                },\n                cellTemplate: `\n                    <div class=\"ui-grid-cell-contents\">\n                        <a  href=\"\"\n                            ng-click=\"grid.appScope.PropertySetForm.editProperty(row.entity)\"\n                            class=\"jf-link text-center ui-grid-cell-contents\">{{row.entity.name}}</a>\n                    </div>`\n            },\n            {\n                name: 'Value Type',\n                displayName: 'Value Type',\n                field: \"propertyType\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">{{ row.entity.getDisplayType() }}</div>`\n            },\n            {\n                field: \"predefinedValues\",\n                name: \"Predefined Values\",\n                displayName: \"Predefined Values\",\n                cellTemplate: `\n                    <div style=\"padding-left: 10px;  white-space: nowrap; overflow-x: auto;\">\n                        <div class=\"item\" ng-repeat=\"value in row.entity.predefinedValues\">\n                            {{value.value}}<span ng-if=\"value.defaultValue\"> (default)</span>\n                        </div>\n                    </div>\n                `\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: propertySet => this.deleteProperty(propertySet)\n            }\n        ];\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedProperties()\n            },\n        ]\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/property_sets/property_set_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n// modal\nlet $rootScope;\nlet JFrogModal;\nlet Property, PropertySet;\nclass PropertyFormModal {\n    constructor(propertySet, property, isNew) {\n        this.scope = $rootScope.$new();\n        this.scope.PropertyForm = this;\n        this.isNew = isNew;\n        this.originalProperty = property;\n        this.property = angular.copy(this.originalProperty);\n        this.propertySet = propertySet;\n        this.propertyTypes = Property.propertyTypes;\n    }\n\n    launch() {\n        this.modalInstance = JFrogModal.launchModal('property_form_modal', this.scope)\n        return this.modalInstance.result;\n    }\n\n    save() {\n        angular.copy(this.property, this.originalProperty);\n        this.modalInstance.close();\n    }\n\n    cancel() {\n        this.modalInstance.dismiss();\n    }\n\n    isPropertyUnique(propertyName) {\n        return propertyName === this.originalProperty.name || !this.propertySet.getPropertyByName(propertyName);\n    }\n\n    isPredefinedValuesValid() {\n        if (this.property.propertyType === 'ANY_VALUE') return true; // Any Value allows no predefined values\n        else return this.property.predefinedValues.length; // Other types must have predefined values\n    }\n\n    isDefaultValuesValid(propertyType) {\n        if (propertyType === 'MULTI_SELECT') return true;\n        return this.property.getDefaultValues().length < 2;\n    }\n\n    invalidateType() {\n        // By changing the property we use in ui-validate-watch, we force the validation on propertyType to run again\n        this.propertyTypeWatch = this.propertyTypeWatch || 0;\n        this.propertyTypeWatch++;\n    }\n\n    getPredefinedValuesStr() {\n        // This is for watching the propertyType value\n        return JSON.stringify(this.property.predefinedValues);\n    }\n\n    removeValue(value) {\n        _.remove(this.property.predefinedValues, value);\n        this.invalidateType();\n    }\n\n    addValue() {\n        this.newValue = $('#newPredefinedValueName').val();\n        this.errorMessage = null;\n\n        if (this._isValueEmpty(this.newValue)) {\n            this.errorMessage = \"Must input value\";\n        }\n        else if (!this._isValueUnique(this.newValue)) {\n            this.errorMessage = \"Value already exists\";\n        }\n        else {\n            this.property.addPredefinedValue(this.newValue);\n            this.newValue = null;\n            $('#newPredefinedValueName').val('');\n            this.invalidateType();\n        }\n    }\n\n    _isValueEmpty(text) {\n        return _.isEmpty(text);\n    }\n    _isValueUnique(text) {\n        return !this.property.getPredefinedValue(text);\n    }\n}\n\nexport function PropertyFormModalFactory(_$rootScope_, _JFrogModal_, _Property_, _PropertySet_) {\n    Property = _Property_;\n    PropertySet = _PropertySet_;\n    $rootScope = _$rootScope_;\n    JFrogModal = _JFrogModal_;\n    return PropertyFormModal;\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/property_sets/property_form_modal.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminConfigurationHAController} from './ha.controller';\n\nfunction haConfig($stateProvider) {\n    $stateProvider\n            .state('admin.configuration.ha', {\n                params: {feature: 'highavailability'},\n                url: '/ha',\n                templateUrl: 'states/admin/configuration/ha/ha.html',\n                controller: 'AdminConfigurationHAController as AdminConfigurationHA'\n            })\n}\n\nexport default angular.module('configuration.ha', [])\n        .config(haConfig)\n        .controller('AdminConfigurationHAController', AdminConfigurationHAController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/ha/ha.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nlet HaDao, $scope, artifactoryGridFactory, modal;\n\nexport class AdminConfigurationHAController {\n\n    constructor(_$scope_, _JFrogModal_, _HaDao_, _JFrogGridFactory_, _ArtifactoryState_) {\n        HaDao = _HaDao_;\n        $scope = _$scope_;\n        artifactoryGridFactory = _JFrogGridFactory_;\n        modal = _JFrogModal_;\n        this.CONFIG_MESSAGES = CONFIG_MESSAGES.admin.configuration.ha;\n\n        this.gridOptions = {};\n        this._createGrid();\n        this._initHa();\n    }\n\n    _initHa() {\n        HaDao.query().$promise.then((ha)=> {\n            this.ha = ha;\n            this.gridOptions.setGridData(this.ha)\n        });\n    }\n\n    _createGrid() {\n        this.gridOptions = artifactoryGridFactory.getGridInstance($scope)\n                .setColumns(this._getColumns())\n                .setButtons(this._getActions())\n                .setRowTemplate('default');\n    }\n\n\n    _getColumns() {\n        return [\n            {\n                field: \"id\",\n                name: \"Node ID\",\n                displayName: \"Node ID\",\n                width: '7%'},\n            {\n                field: \"startTime\",\n                name: \"Start Time\",\n                displayName: \"Start Time\",\n                width: '9%'\n            },\n            {\n                field: \"url\",\n                name: \"URL\",\n                displayName: \"URL\",\n                width: '18%',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" target=\"_blank\" href=\"{{ COL_FIELD }}\">{{ COL_FIELD }}</a></div>'\n            },\n            {\n                field: \"memberShipPort\",\n                name: \"Membership Port\",\n                displayName: \"Membership Port\",\n                width: '11%'\n            },\n            {\n                field: \"state\",\n                name: \"State\",\n                displayName: \"State\",\n                width: '11%',\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">{{ COL_FIELD }}`+\n                                `<span class=\"ha-node-has-no-license\"\n                                      ng-if=\"!row.entity.hasLicense\"\n                                      jf-tooltip=\"No license installed.\">&nbsp;(Inactive)</span>\n                               </div>`\n            },\n            {\n                field: \"role\",\n                name: \"Role\",\n                displayName: \"Role\",\n                width: '8%'\n            },\n            {\n                field: \"lastHeartbeat\",\n                name: \"Last Heartbeat\",\n                displayName: \"Last Heartbeat\",\n                width: '11%',\n                cellTemplate: `\n                    <div ng-if=\"row.entity.heartbeatStale\"\n                         class=\"ui-grid-cell-contents ha-heartbeat-stale\"\n                         jf-tooltip=\"Heartbeat is stale. Check if your server is down.\"><i class=\"icon icon-notif-warning\"></i>{{ COL_FIELD }}</div>\n                    <div ng-if=\"!row.entity.heartbeatStale\"\n                         class=\"ui-grid-cell-contents\">{{ COL_FIELD }}</div>\n                         `\n            },\n            {\n                field: \"version\",\n                name: \"Version\",\n                displayName: \"Version\",\n                width: '9%'\n            },\n            {\n                field: \"revision\",\n                name: \"Revision\",\n                displayName: \"Revision\",\n                width: '6%'\n            },\n            {\n                field: \"releaseDate\",\n                name: \"Release Date\",\n                displayName: \"Release Date\",\n                width: '10%'\n            }\n        ]\n    }\n\n    _deleteNode(node) {\n        modal.confirm('Are you sure you wish to remove ' + node.id + ' from the nodes list?')\n            .then(() => HaDao.delete({id: node.id}))\n            .then(() => this._initHa());\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                visibleWhen: node => node.heartbeatStale,\n                callback: node => this._deleteNode(node)\n            }\n        ];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/ha/ha.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminConfigurationController {\n\n    constructor() {\n        var AdminConfiguration = this;\n        AdminConfiguration.stateUrl = '/configuration';\n        AdminConfiguration.controllerName = 'idan'\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/configuration/configuration.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminRepositoriesController} from './repositories.controller';\nimport {AdminRepositoryFormController} from './repository_form.controller';\nimport {VirtualRepositoryFormController} from './virtual_repository_form.controller';\nimport {AdminRepositoriesLayoutController} from './repositories_layouts.controller';\nimport {AdminRepositoryLayoutFormController} from './repository_layout_form.controller';\n\nfunction repositoriesConfig($stateProvider) {\n    $stateProvider\n        // base state\n        .state('admin.repositories', {\n            url: '',\n            abstract: true,\n            template: '<ui-view></ui-view>'\n        })\n\n        // repository list and forms\n        .state('admin.repositories.list', {\n            url: '/repositories/{repoType}',\n            templateUrl: 'states/admin/repositories/repositories.html',\n            controller: 'AdminRepositoriesController as Repositories',\n\t        params: {\n\t\t        action: null\n\t        }\n        })\n        .state('admin.repositories.list.edit', {\n            parent: 'admin.repositories',\n            url: '/repository/{repoType}/{repoKey}/{distRepoType}/edit',\n            templateUrl: 'states/admin/repositories/repository_form.html',\n            controller: 'AdminRepositoryFormController as RepositoryForm',\n            params: {\n\t            distRepoType: {\n\t\t            squash: true,\n\t\t            value: null\n\t            }\n            }\n        })\n        .state('admin.repositories.list.new', {\n\t        parent: 'admin.repositories',\n\t        url: '/repository/{repoType}/{distRepoType}/new',\n\t        templateUrl: 'states/admin/repositories/repository_form.html',\n\t        controller: 'AdminRepositoryFormController as RepositoryForm',\n\t        params: {\n\t\t        distRepoType: {\n\t\t\t        squash: true,\n\t\t\t        value: null\n\t\t        }\n\t        }\n        })\n\n        // repository layout list and forms\n        .state('admin.repositories.repo_layouts', {\n            url: '/repo_layouts',\n            templateUrl: 'states/admin/repositories/repositories_layouts.html',\n            controller: 'AdminRepositoriesLayoutController as RepositoriesLayoutController'\n        })\n        .state('admin.repositories.repo_layouts.edit', {\n            parent: 'admin.repositories',\n            url: '/repo_layouts/{layoutname}/edit',\n            templateUrl: 'states/admin/repositories/repository_layout_form.html',\n            controller: 'AdminRepositoryLayoutFormController as RepositoryLayoutForm',\n            params: {viewOnly: true}\n        })\n        .state('admin.repositories.repo_layouts.new', {\n            parent: 'admin.repositories',\n            url: '/repo_layouts/new?copyFrom',\n            templateUrl: 'states/admin/repositories/repository_layout_form.html',\n            controller: 'AdminRepositoryLayoutFormController as RepositoryLayoutForm'\n        })\n\n}\n\nexport default angular.module('admin.repositories', [])\n    .config(repositoriesConfig)\n    .controller('AdminRepositoriesController', AdminRepositoriesController)\n    .controller('AdminRepositoryFormController', AdminRepositoryFormController)\n    .controller('VirtualRepositoryFormController', VirtualRepositoryFormController)\n    .controller('AdminRepositoriesLayoutController', AdminRepositoriesLayoutController)\n    .controller('AdminRepositoryLayoutFormController', AdminRepositoryLayoutFormController);\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/repositories.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport FIELD_OPTIONS from \"../../../constants/field_options.constats\";\nimport CONFIG_MESSAGES from \"../../../constants/configuration_messages.constants\";\nimport EVENTS from \"../../../constants/artifacts_events.constants\";\nimport {REPO_FORM_CONSTANTS} from './repository_form.constants';\n\nexport class AdminRepositoriesController {\n\n    constructor($scope, $state, JFrogGridFactory, RepositoriesDao, JFrogModal, uiGridConstants,\n            ArtifactActionsDao, ArtifactoryFeatures, commonGridColumns, GlobalReplicationsConfigDao, JFrogEventBus,\n            $stateParams, $timeout) {\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.commonGridColumns = commonGridColumns;\n        this.repositoriesDao = RepositoriesDao;\n        this.globalReplicationsConfigDao = GlobalReplicationsConfigDao;\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.modal = JFrogModal;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.gridOption = {};\n        this.uiGridConstants = uiGridConstants;\n        this.CONFIG_MESSAGES = CONFIG_MESSAGES.admin.repositories;\n        this.features = ArtifactoryFeatures;\n        this.currentRepoType = $state.params.repoType;\n        this.gridData = {};\n        this.JFrogEventBus = JFrogEventBus;\n        if (!_.contains(['local','remote','virtual', 'distribution'], this.currentRepoType)) {\n            this.$state.go('not_found_404');\n            return;\n        }\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this._initRepos();\n        });\n\n        this._createGrid();\n        this._initRepos();\n        this._getGlobalReplicationsStatus();\n    }\n\n    $onInit() {\n        if(this.$stateParams.action === 'openCreationDropdowns') {\n            this.$timeout(() => {\n                this.quickActions.showDropdown();\n            });\n        }\n    }\n\n    isCurrentRepoType(type) {\n        return this.currentRepoType == type;\n    }\n\n    /**\n     * Creates the grid according to current repo type, sets draggable according to the global repo status\n     * NOTE: Multi select and batch actions are commented until batch delete repos is approved for prod.\n     */\n    _createGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setSingleSelect();\n        //.setBatchActions(this._getBatchActions())\n        this.gridOption.setRowTemplate('default');\n    }\n\n    _initRepos() {\n        this.repositoriesDao.getRepositories({type: this.currentRepoType}).$promise\n                .then((data) => {\n                    this.noReposMessage = this.CONFIG_MESSAGES[this.currentRepoType].noReposMessage;\n                    if (this.features.isEnterprisePlus() && this.currentRepoType === FIELD_OPTIONS.REPO_TYPE.DISTRIBUTION) {\n                        this.noReposMessage += '<br>' + this.CONFIG_MESSAGES[this.currentRepoType].ePlusNoReposMessage;\n                    }\n                    _.forEach(data, (row) => {\n                        let rowPackageType =_.find(FIELD_OPTIONS.repoPackageTypes, (type) => {\n                            return type.value == row.repoType.toLowerCase();\n                        });\n                        if (rowPackageType) {\n                            row.displayType = rowPackageType.text;\n                            row.typeIcon = rowPackageType.icon;\n                        } else if (row.repoType !== REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES &&\n                                row.repoType.toLowerCase() !== FIELD_OPTIONS.REPO_TYPE.DISTRIBUTION) {\n                            row.ignore = true;\n                        }\n                    });\n                    data = _.filter(data, (row) => !row.ignore);\n                    this.gridData = data;\n                    this.gridOption.setGridData(data);\n                });\n    }\n\n    reorderRepositories() {\n        return this.repositoriesDao.reorderRepositories({repoType: this.currentRepoType}, this.getRepoOrder()).$promise\n    }\n\n    getRepoOrder() {\n        let repoOrderList = [];\n        this.gridData.forEach((data)=> {\n            repoOrderList.push(data.repoKey);\n        });\n        return repoOrderList;\n    }\n\n    _deleteSelected(row) {\n        this.modal.confirm(\"Are you sure you wish to delete this repository? All artifacts will be permanently deleted.\", 'Delete ' + row.repoKey + \" Repository\", {confirm: 'Delete'})\n                .then(()=> {\n                    this.repositoriesDao.deleteRepository({\n                        type: this.currentRepoType,\n                        repoKey: row.repoKey\n                    }).$promise.then((result)=> {\n                        this._initRepos();\n                    })\n                });\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this._deleteSelectedRepos()\n            }\n        ]\n    }\n\n    _deleteSelectedRepos() {\n        let selectedRows = this.gridOption.api.selection.getSelectedGridRows();\n    }\n\n    _editSelected(row) {\n        this.$state.go('^.list.edit', {repoType: this.currentRepoType, repoKey: row.repoKey});\n    }\n\n\n    createNewRepo(distRepoType) {\n        this.$state.go('^.list.new', {repoType: this.currentRepoType, distRepoType: distRepoType});\n    }\n\n    _calculateIndex(row) {\n        this.artifactActionsDao.perform({\n            action: 'calculateIndex',\n            type: row.repoType,\n            repoKey: row.repoKey\n        })\n    }\n\n    localReplicationsRunNow(repoKey) {\n        this.repositoriesDao.runNowReplications({repoKey: repoKey}).$promise.then(()=> {\n        });\n    }\n\n    remoteExecuteReplicationNow(repoKey) {\n        this.repositoriesDao.executeRemoteReplicationNow({repoKey: repoKey},\n                this.repoInfo).$promise.then((result)=> {\n\n        });\n    }\n\n    _getGlobalReplicationsStatus() {\n        this.globalReplicationsConfigDao.status().$promise.then((status) => {\n            this.globalReplicationsStatus = {\n                blockPullReplications: status.blockPullReplications,\n                blockPushReplications: status.blockPushReplications\n            }\n        });\n    }\n\n\n    _getColumns() {\n        if (this.currentRepoType === 'local') {\n            return this._getLocalColumns();\n        } else if (this.currentRepoType === 'remote') {\n            return this._getRemoteColumns();\n        } else if (this.currentRepoType === 'virtual') {\n            return this._getVirtualColumns();\n        } else if (this.currentRepoType === 'distribution') {\n            return this._getDistColumns();\n        }\n    }\n\n    _getLocalColumns() {\n        return [\n            {\n                name: 'Repository Key',\n                displayName: 'Repository Key',\n                field: 'repoKey',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"^.list.edit({repoType:\\'local\\',repoKey: row.entity.repoKey})\" id=\"repositories-local-key\">{{COL_FIELD}}</a></div>',\n                width: '55%',\n                enableSorting: true\n                //sort: {\n                //    direction: this.uiGridConstants.ASC\n                //}\n            },\n            {\n                name: 'Type',\n                displayName: 'Type',\n                field: 'displayType',\n                cellTemplate: this.commonGridColumns.iconColumn('row.entity.displayType', 'row.entity.typeIcon', 'repo-type-icon'),\n                width: '15%',\n                enableSorting: true\n            },\n            {\n                name: 'Recalculate Index',\n                displayName: 'Recalculate Index',\n                field: 'reindex',\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\"><a class=\"grid-column-button icon icon-re-index\" ng-click=\"!row.entity.hasReindexAction || grid.appScope.Repositories._calculateIndex(row.entity)\" ng-disabled=\"!row.entity.hasReindexAction\" jf-tooltip=\"{{row.entity.hasReindexAction ? \\'Recalculate Index Now\\' : \\'Recalculate Not Supported For Repo Type\\'}}\" id=\"repositories-local-reindex\"></a></div>',\n                width: '15%',\n                enableSorting: true\n            },\n            {\n                name: 'Replications',\n                displayName: 'Replications',\n                field: 'replications',\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\" ng-class=\"{\\'replication-disabled\\': grid.appScope.Repositories.globalReplicationsStatus.blockPushReplications}\"><a class=\"grid-column-button icon icon-run\" ng-click=\"(!row.entity.replications || grid.appScope.Repositories.globalReplicationsStatus.blockPushReplications) || grid.appScope.Repositories.localReplicationsRunNow(row.entity.repoKey)\" ng-disabled=\"!row.entity.replications\" jf-tooltip=\"{{grid.appScope.Repositories.globalReplicationsStatus.blockPushReplications ? \\'Push Replication Is Blocked\\' : (row.entity.replications ? \\'Run Replication\\' : \\'No Replication Configured\\')}}\" id=\"repositories-local-replicate\"></a></div>',\n                width: '15%',\n                actions: {\n                    delete: row => this._deleteSelected(row)\n                },\n                enableSorting: false\n            }\n        ]\n    }\n\n    _getRemoteColumns() {\n        return [\n            {\n                name: 'Repository Key',\n                displayName: 'Repository Key',\n                field: 'repoKey',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"^.list.edit({repoType:\\'remote\\',repoKey: row.entity.repoKey})\" id=\"repositories-remote-key\">{{COL_FIELD}}</a></div>',\n                width: '20%',\n                enableSorting: true\n            },\n            {\n                name: 'Type',\n                displayName: 'Type',\n                field: 'displayType',\n                cellTemplate: this.commonGridColumns.iconColumn('row.entity.displayType', 'row.entity.typeIcon', 'repo-type-icon'),\n                width: '10%',\n                enableSorting: true\n            },\n            {\n                name: 'URL',\n                displayName: 'URL',\n                field: 'url',\n                width: '40%',\n                enableSorting: true\n            },\n            {\n                name: 'Recalculate Index',\n                displayName: 'Recalculate Index',\n                field: 'reindex',\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\"><a class=\"grid-column-button icon icon-re-index\" ng-click=\"!row.entity.hasReindexAction || grid.appScope.Repositories._calculateIndex(row.entity)\" ng-disabled=\"!row.entity.hasReindexAction\" jf-tooltip=\"{{row.entity.hasReindexAction ? \\'Recalculate Index Now\\' : \\'Recalculate Not Supported For Repo Type\\'}}\" id=\"repositories-local-reindex\"></a></div>',\n                width: '15%',\n                enableSorting: false\n            },\n            {\n                name: 'Replications',\n                displayName: 'Replications',\n                field: 'hasEnabledReplication',\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\" ng-class=\"{\\'replication-disabled\\': grid.appScope.Repositories.globalReplicationsStatus.blockPullReplications}\"><a class=\"grid-column-button icon icon-run\" ng-click=\"(!row.entity.hasEnabledReplication || grid.appScope.Repositories.globalReplicationsStatus.blockPullReplications) || grid.appScope.Repositories.remoteExecuteReplicationNow(row.entity.repoKey)\" ng-disabled=\"!row.entity.hasEnabledReplication\" jf-tooltip=\"{{grid.appScope.Repositories.globalReplicationsStatus.blockPullReplications ? \\'Pull Replication Is Blocked\\' : (row.entity.hasEnabledReplication ? \\'Run Replication\\' : \\'No Replication Configured\\')}}\" id=\"repositories-local-replicate\"></a></div>',\n                width: '15%',\n                actions: {\n                    delete: row => this._deleteSelected(row)\n                },\n                enableSorting: false\n            }\n        ]\n    }\n\n    _getVirtualColumns() {\n        return [\n            {\n                name: 'Repository Key',\n                displayName: 'Repository Key',\n                field: 'repoKey',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"^.list.edit({repoType:\\'virtual\\',repoKey: row.entity.repoKey})\" id=\"repositories-virtual-key\">{{COL_FIELD}}</a></div>',\n                width: '20%',\n                enableSorting: true\n            },\n            {\n                name: 'Type',\n                displayName: 'Type',\n                field: 'displayType',\n                cellTemplate: this.commonGridColumns.iconColumn('row.entity.displayType', 'row.entity.typeIcon', 'repo-type-icon'),\n                width: '10%',\n                enableSorting: true\n            },\n            {\n                name: 'Included Repositories',\n                displayName: 'Included Repositories',\n                field: 'numberOfIncludesRepositories',\n                width: '15%',\n                enableSorting: false\n            },\n            {\n                name: 'Selected Repositories',\n                displayName: 'Selected Repositories',\n                field: 'selectedRepos',\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.selectedRepos','row.entity.repoKey', null, null, \"repositories-virtual-selected\"),\n                width: '40%',\n                enableSorting: false\n            },\n            {\n                name: 'Recalculate Index',\n                displayName: 'Recalculate Index',\n                field: 'reindex',\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\"><a class=\"grid-column-button icon icon-re-index\" ng-click=\"!row.entity.hasReindexAction || grid.appScope.Repositories._calculateIndex(row.entity)\" ng-disabled=\"!row.entity.hasReindexAction\" jf-tooltip=\"{{row.entity.hasReindexAction ? \\'Recalculate Index Now\\' : \\'Recalculate Not Supported For Repo Type\\'}}\" id=\"repositories-virtual-reindex\"></a></div>',\n                width: '15%',\n                actions: {\n                    delete: row => this._deleteSelected(row)\n                },\n                enableSorting: false\n            }\n        ];\n    }\n\n    _getDistColumns() {\n        return [\n            {\n                name: 'Repository Key',\n                displayName: 'Repository Key',\n                field: 'repoKey',\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    <a ui-sref=\"^.list.edit({repoType:'distribution',repoKey: row.entity.repoKey, distRepoType:row.entity.repoType})\"\n                                        class=\"jf-link\"\n                                        id=\"repositories-distribution-key\">\n                                        {{COL_FIELD}}\n                                    </a>\n                               </div>`,\n                width: '60%',\n                enableSorting: true\n            }, {\n                name: 'Repository Type',\n                displayName: 'Repository Type',\n                field: 'repoType',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"repository-type\">{{row.entity.repoType}}</div>',\n                width: '20%',\n                enableSorting: true\n            }, {\n                name: 'Repository Visibility',\n                displayName: 'Repository Visibility',\n                field: 'visibility',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"repository-visibility\">{{row.entity.visibility}}</div>',\n                width: '20%',\n                enableSorting: true,\n                actions: {\n                    delete: row => this._deleteSelected(row)\n                }\n            }/*,\n            {\n                name: 'Status',\n                displayName: 'Status',\n                field: 'status',\n                cellTemplate: this.commonGridColumns.ajaxColumn(),\n                width: '15%',\n                actions: {\n                    delete: row => this._deleteSelected(row);\n                }\n            }*/\n        ];\n    }\n\n    // New Distribution Repo Actions Dropdown setup\n    setQuickActions() {\n        if (!this.quickActions) {\n            return;\n        }\n        this.quickActions.setActionsDictionary(this.getActionsDictionary());\n        this.quickActions.setActions(this.getActions());\n    }\n\n    initActionsDropdown(actionsController) {\n        this.quickActions = actionsController;\n        this.setQuickActions();\n    }\n\n    getActionsDictionary() {\n        let dictionary = {};\n        dictionary.newReleaseBundlesRepo = {title: 'Release Bundles Repository'};\n        dictionary.newBintrayDistributionRepo = {title: 'Bintray Distribution Repository'};\n        return dictionary;\n    }\n\n    getActions() {\n        let actions = [{\n            name: 'newReleaseBundlesRepo',\n            icon: 'icon-distribution-repo bordered',\n            action: () => {\n                this.createNewRepo(REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES);\n            }\n        },{\n            name: 'newBintrayDistributionRepo',\n            icon: 'icon-distribution-repo bordered',\n            action: () => {\n                this.createNewRepo(REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.BINTRAY);\n            }\n        }];\n        return actions;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/repositories.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport const REPO_FORM_CONSTANTS = {\n\tDISTRIBUTION_REPO_TYPES:{\n\t\tRELEASE_BUNDLES: 'ReleaseBundles',\n\t\tBINTRAY: 'Distribution'\n\t},\n\tCONFIG: {\n\t\tRELEASE_BUNDLES: 'releaseBundlesRepoConfig',\n\t\tBINTRAY:'distributionRepoConfig',\n\t}\n};\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/repository_form.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport fieldsValuesDictionary from \"../../../constants/field_options.constats\";\nimport TOOLTIP from \"../../../constants/artifact_tooltip.constant\";\nimport CONFIG_MESSAGES from \"../../../constants/configuration_messages.constants\";\nimport {REPO_FORM_CONSTANTS} from './repository_form.constants';\n\nexport class AdminRepositoryFormController {\n    constructor($q, $scope, $stateParams, $state, $timeout, $location, RepositoriesDao, PropertySetsDao, JFrogGridFactory,\n            ReverseProxiesDao, JFrogModal, FooterDao, ArtifactoryFeatures, JFrogNotifications, commonGridColumns,\n            ArtifactoryModelSaver, GeneralConfigDao, DockerStatusDao, GlobalReplicationsConfigDao, XrayDao, GoogleAnalytics, JFrogTableViewOptions) {\n        this.$scope = $scope;\n        this.$q = $q;\n        this.currentTab = 'basic';\n        this.$timeout = $timeout;\n        this.$stateParams = $stateParams;\n        this.$location = $location;\n        this.propertySetsDao = PropertySetsDao;\n        this.globalReplicationsConfigDao = GlobalReplicationsConfigDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogTableViewOptions = JFrogTableViewOptions;\n        this.commonGridColumns = commonGridColumns;\n        this.notifications = JFrogNotifications;\n        this.modal = JFrogModal;\n        this.generalConfigDao = GeneralConfigDao;\n        this.NO_VALUE_STRING = '** NO VALUE **';\n        this.$state = $state;\n        this.footerDao = FooterDao;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.repositoriesDao = RepositoriesDao;\n        this.reverseProxiesDao = ReverseProxiesDao;\n        this.xrayDao = XrayDao;\n        this.newRepository = false;\n        this.features = ArtifactoryFeatures;\n        this.replicationsGridOption = {};\n        this.replicationScope = $scope.$new();\n        this.TOOLTIP = TOOLTIP.admin.repositories;\n        this.optionalFormats = [\n                                    {id: 'bz2', text:'Bzip2 (.bz2 extension)', selectedText: 'bz2', isSelected:true},\n                                    {id: 'lzma', text:'LZMA (.lzma extension)', selectedText: 'lzma'},\n                                    {id: 'xz', text:'XZ (.xz extension)', selectedText: 'xz'}\n                                ];\n\t    this.isReleaseBundleRepo = this.$stateParams.distRepoType && this.$stateParams.distRepoType === REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES;\n\t    this.CONFIG_MESSAGES = CONFIG_MESSAGES.admin.repositories;\n        this.DockerStatusDao = DockerStatusDao.getInstance();\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this,['repoInfo'],['replications.*.proxies']);\n        this.bintrayAuthentication = true;\n        this.wizardConfig = {\n            enableNgShow: true\n        };\n        this.reverseProxies = [\"**\"];\n\n        this.reverseProxiesSelectizeConfig = {\n            sortField: 'text',\n            create: false,\n            maxItems: 1\n        };\n        this._setupDistribution();\n        this.licensesListConfig = {\n            sortField: 'text',\n            maxItems: null,\n            plugins: ['remove_button']\n        };\n\n        this._createGrid();\n        this.initRepoForm();\n        this.repoType = this.$stateParams.repoType;\n        if (this.$stateParams.repoKey) {\n            this.title = \"Edit \" + this.$stateParams.repoKey + \" Repository\";\n            this.newRepository = false;\n            this.editRepository(this.$stateParams.repoKey);\n        }\n        else {\n            this.newRepository = true;\n            this.repoInfo = new RepositoriesDao();\n\t        this.title = this.getPageTitle();\n            this._initNewRepositoryTypeConfig();\n\n            if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n                if (!this.repoInfo.basic) {\n                    this.repoInfo.basic = {};\n                    this.repoInfo.basic.contentSynchronisation = {};\n                    this.repoInfo.basic.contentSynchronisation.statistics = {};\n                    this.repoInfo.basic.contentSynchronisation.properties = {};\n                }\n\n                this.repoInfo.basic.contentSynchronisation.enabled = false;\n                this.repoInfo.basic.contentSynchronisation.statistics.enabled = false;\n                this.repoInfo.basic.contentSynchronisation.properties.enabled = false;\n            }\n        }\n        this.packageType = fieldsValuesDictionary.repoPackageTypes;\n\n        this._getGeneralConfig();\n        this._getGlobalReplicationsStatus();\n        this.originalValueFlag = true;\n        this.footerDao.get(true);\n\n        this.repositoryFilterTooltip = this.TOOLTIP.rulesPopup.repositoryFilterTooltip;\n        this.pathFilterToolip = this.TOOLTIP.rulesPopup.pathFilterToolip;\n        this.noReplicationsMessage = this.CONFIG_MESSAGES.local.noReplicationsMessage;\n    }\n\n    getPageTitle() {\n        let distRepoType = (this.$stateParams.distRepoType &&\n        this.$stateParams.distRepoType === REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES ?\n                'Release Bundles' : 'Bintray Distribution');\n        let repoType = this.repoType === 'distribution' ? distRepoType : _.capitalize(this.repoType);\n        return `New ${repoType} Repository`;\n    }\n\n    isCurrentRepoType(type) {\n        return this.repoType == type;\n    }\n\n    onFormatSelectionChange() {\n        let formats = _.filter(this.optionalFormats, (format) => format.isSelected);\n        this.repoInfo.typeSpecific.optionalIndexCompressionFormats = _.map(formats,'id');\n    }\n\n    _updateOptionalIndexCompressionFormats(optionalIndexCompressionFormats) {\n        let result = _.map(this.optionalFormats, format => {\n            return _.extend({}, format,{\n                isSelected: optionalIndexCompressionFormats.indexOf(format.id) !== -1\n            })\n        });\n        return result;\n    }\n\n    /**\n     * init propertiesSets  and replication scope functions for modal and fields options\n     */\n    initRepoForm() {\n        this.replicationScope.replication = {}; //to create a single replication\n        this.replicationScope.testLocalReplicationUrl = (url)=>this.testLocalReplicationUrl(url);\n\n        this.replicationScope.addReplication = (replication)=> this.addReplication(replication);\n        this.replicationScope.closeModal = ()=>this.closeModal();\n        this.replicationScope.RepositoryForm = this;\n    }\n\n    /**\n     * run only if edit repository and get repository data\n     */\n    editRepository(repoKey) {\n\t    let payload = {type: this.isReleaseBundleRepo ? _.camelCase(this.$stateParams.distRepoType) : this.repoType, repoKey: repoKey};\n        this.repositoriesDao.getRepository(payload).$promise\n                .then(info => {\n\t                this.repoInfo = info;\n                    this.repoInfo.basic.includesPatternArray = this.repoInfo.basic.includesPattern ? this.repoInfo.basic.includesPattern.split(',') : [];\n                    this.repoInfo.basic.excludesPatternArray = this.repoInfo.basic.excludesPattern ? this.repoInfo.basic.excludesPattern.split(',') : [];\n                    if(this.repoInfo.typeSpecific.repoType === 'YUM'){\n                        this.repoInfo.groupFileNamesArray = this.repoInfo.typeSpecific.groupFileNames ? this.repoInfo.typeSpecific.groupFileNames.split(',') : [];\n                    }\n                    let repoPackageType = _.where(fieldsValuesDictionary.repoPackageTypes, { 'serverEnumName': this.repoInfo.typeSpecific.repoType });\n\n                    if (repoPackageType.length) {\n                        this.repoInfo.typeSpecific.text = repoPackageType[0].text;\n                        this.repoInfo.typeSpecific.icon = repoPackageType[0].icon;\n                    }\n\n                    if (this.repoInfo.typeSpecific.repoType === \"Docker\" && !this.features.isAol() && !this.features.isNonCommercial()) {\n                        this._getReveresProxyConfigurations();\n                    }\n\n                    if (this.repoInfo.typeSpecific.repoType === \"Debian\" && this.repoInfo.typeSpecific.optionalIndexCompressionFormats !== undefined) {\n                        this.optionalFormats = this._updateOptionalIndexCompressionFormats(this.repoInfo.typeSpecific.optionalIndexCompressionFormats);\n                    }\n\n                    if (this.repoInfo.replications && this.repoInfo.replications.length) {\n                        this.repoInfo.cronExp = this.repoInfo.replications[0].cronExp;\n                        this.repoInfo.enableEventReplication = this.repoInfo.replications[0].enableEventReplication;\n                    }\n                    if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n                        this._getRepositoriesByType();\n                    }\n                    if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE && this.repoInfo.replications) {\n                        this.repoInfo.replication = this.repoInfo.replications[0];\n                    }\n                    else {\n                        this.replicationsGridOption.setData(this.repoInfo.replications);\n                    }\n                    this._getFieldsOptions();\n\n                    if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n                        if (this.repoInfo.advanced.network.installedCertificatesList) {\n                            this.repoInfo.advanced.network.installedCertificatesList.unshift('');\n                        }\n                        this._detectSmartRepository(false).then(()=>{\n                            this.lastSmartRemoteURL = this.repoInfo.basic.url;\n                        });\n                    }\n                    if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE || this.repoType == fieldsValuesDictionary.REPO_TYPE.LOCAL) {\n                        if (this.repoInfo.typeSpecific.maxUniqueSnapshots === 0) {\n                            this.repoInfo.typeSpecific.maxUniqueSnapshots = '';\n                        }\n                        if (this.repoInfo.typeSpecific.maxUniqueTags === 0) {\n                            this.repoInfo.typeSpecific.maxUniqueTags = '';\n                        }\n                        if (this.repoInfo.advanced.cache && this.repoInfo.advanced.cache.keepUnusedArtifactsHours === 0) {\n                            this.repoInfo.advanced.cache.keepUnusedArtifactsHours = '';\n                        }\n                    }\n                    if (this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n                        if (!this.repoInfo.typeSpecific.authenticated && this.$location.search().code) {\n                            this.openBintrayOAuthModal();\n                        }\n\n                        this.bintrayAuthentication = this.repoInfo.typeSpecific.premium ? true : false;\n                        this.defaultNewRepoPrivateSwitch = this.repoInfo.basic.defaultNewRepoPrivate == true ? 'Private' : 'Public';\n                        this.distributionType = this.repoInfo.basic.productName != null;\n                        this.distributionRules = this.repoInfo.advanced.distributionRules;\n                        if (this.features.isOss()) {\n                            this.distributionRules = _.filter(this.distributionRules,(rule=> {\n                                return _.contains(['Maven', 'Gradle', 'Ivy', 'SBT'],rule.type)\n                            }))\n                        } else if (this.features.isConanCE()) {\n                            this.distributionRules = _.filter(this.distributionRules,(rule=> {\n                                return _.contains(['Conan'],rule.type)\n                            }))\n                        }\n                        this._createDistributionRulesGrid(); // Edit\n                        this._setupLicenses();\n                        this._setRulesPackages();\n                    }\n                    this.repoInfo.basic.selectedLocalRepositories = _.pluck(_.filter(this.repoInfo.basic.resolvedRepositories, (repo)=>{\n                        return repo.type === 'local';\n                    }),'repoName');\n                    this.repoInfo.basic.selectedRemoteRepositories = _.pluck(_.filter(this.repoInfo.basic.resolvedRepositories, (repo)=>{\n                        return repo.type === 'remote';\n                    }),'repoName');\n                    this.repoInfo.basic.selectedLocalRepositories.unshift('');\n\n                    this.ArtifactoryModelSaver.save();\n                });\n\n    }\n\n    _setDefaultProxy() {\n        if (this.newRepository && this.fields.defaultProxy && _.has(this.repoInfo, 'advanced.network')) {\n            !this.repoInfo.advanced.network.proxy ?\n                    this.repoInfo.advanced.network.proxy = this.fields.defaultProxy : '';\n        }\n    }\n\n    /**\n     *test button  when adding new replication in local repository\n     */\n    testLocalReplicationUrl(url) {\n        // Create a copy of the repo\n        let testRepo = angular.copy(this.repoInfo);\n\n        // Make sure replications is not null\n        testRepo.replications = testRepo.replications || [];\n\n        let testReplication;\n        if (this.replicationScope.sourceReplication) {\n            testReplication = _.findWhere(testRepo.replications, {url: this.replicationScope.sourceReplication.url});\n            angular.copy(this.replicationScope.replication, testReplication);\n        }\n        else {\n            testReplication = angular.copy(this.replicationScope.replication);\n            testRepo.replications.push(testReplication);\n        }\n\n        testReplication.cronExp = this.repoInfo.cronExp;\n        testReplication.nextTime = this.repoInfo.nextTime;\n        testReplication.type = this.repoType;\n        testReplication.enableEventReplication = this.repoInfo.enableEventReplication;\n\n        this.repositoriesDao.testLocalReplication({replicationUrl: url}, testRepo);\n    }\n\n    testRemoteUrl() {\n        this.repositoriesDao.testRemoteUrl(this.repoInfo).$promise.then((result)=> {\n            //console.log(result);\n        });\n\n        this._detectSmartRepository();\n    }\n\n    _detectSmartRepository(showModal=true) {\n        if (this.features.isNonCommercial()) {\n            return this.$q.when();\n        }\n\n        let defer = this.$q.defer();\n        this.smartRepoUnknownCapabilities = false;\n\n        let repoInfoCopy = angular.copy(this.repoInfo);\n        if (!repoInfoCopy.typeSpecific.repoType) {\n            repoInfoCopy.typeSpecific.repoType = \"Generic\";\n        }\n\n        this.repositoriesDao.detectSmartRepository(repoInfoCopy).$promise.then((result)=> {\n            if (result.artifactory && result.version && result.features.length) {\n                if (!this.repoInfo.basic.contentSynchronisation.enabled || this.repoInfo.basic.url != this.lastSmartRemoteURL) {\n                    this.repoInfo.basic.contentSynchronisation.enabled = true;\n                    this.lastSmartRemoteURL = this.repoInfo.basic.url;\n                    this.smartRepoFeatures = result.features;\n\n                    if (localStorage.disableSmartRepoPopup !== \"true\" && showModal) {\n                        let modalInstance;\n                        let modalScope = this.$scope.$new();\n                        modalScope.smartRepo = this.repoInfo.basic.contentSynchronisation;\n                        modalScope.smartRepo.typeSpecific = this.repoInfo.typeSpecific;\n                        modalScope.closeModal = () => modalInstance.close();\n                        modalScope.options = {dontShowAgain: false};\n                        modalScope.isSmartRepoSupportFeature = (featureName) => this.isSmartRepoSupportFeature(featureName);\n                        modalScope.onDontShowAgain = () => {\n                            localStorage.disableSmartRepoPopup = modalScope.options.dontShowAgain;\n                        };\n                        modalInstance = this.modal.launchModal('smart_remote_repository', modalScope);\n                    }\n\n                    defer.resolve(true);\n                }\n                else\n                    defer.resolve(false);\n            }\n            else {\n                if (result.artifactory && result.version === null) {\n                    this.smartRepoUnknownCapabilities = true;\n                }\n                this.repoInfo.basic.contentSynchronisation.enabled = false;\n                defer.resolve(false);\n            }\n        });\n\n        return defer.promise;\n    }\n\n    isSmartRepoSupportFeature(featureName) {\n        return _.findWhere(this.smartRepoFeatures,{name: featureName}) !== undefined;\n    }\n\n    isRemoteDownloadSettingsValid() {\n        if (this.repoInfo && this.repoInfo.advanced) return !(this.repoType === 'remote' && !this.repoInfo.advanced.storeArtifactsLocally && this.repoInfo.advanced.downloadRedirectConfig && this.repoInfo.advanced.downloadRedirectConfig.enabled);\n    }\n\n    onBlurCredentials() {\n        if (this.smartRepoUnknownCapabilities && this.repoInfo.advanced.network.username && this.repoInfo.advanced.network.password) {\n            this._detectSmartRepository();\n        }\n    }\n\n    testRemoteReplication() {\n        this.addReplication(this.repoInfo.replication);\n        this.repositoriesDao.testRemoteReplication(this.repoInfo).$promise.then((result)=> {\n            //            console.log(result);\n        });\n    }\n\n    setSnapshotVersionBehavior() {\n        if (this.repoInfo && this.repoInfo.typeSpecific && this.repoInfo.typeSpecific.snapshotVersionBehavior) {\n            if (this.repoInfo.typeSpecific.snapshotVersionBehavior == 'NONUNIQUE') {\n                //this.repoInfo.typeSpecific.maxUniqueSnapshots = 0;\n                this.disableMaxUniqueSnapshots = true;\n            }\n            else {\n                this.disableMaxUniqueSnapshots = false;\n            }\n        }\n    }\n\n    _initNewRepositoryTypeConfig() {\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.LOCAL) {\n            this.repoInfo.type = 'localRepoConfig';\n        }\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n            this.repoInfo.type = 'remoteRepoConfig';\n        }\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n            this.repoInfo.type = 'virtualRepoConfig';\n        }\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n            this.repoInfo.type = this.isReleaseBundleRepo ? REPO_FORM_CONSTANTS.CONFIG.RELEASE_BUNDLES : REPO_FORM_CONSTANTS.CONFIG.BINTRAY;\n        }\n\n        this._getDefaultModels()\n            .then(()=> {\n                this._getFieldsOptions()\n                    .then(()=> {\n                        this._setDefaultFields();\n                        if(!this.isReleaseBundleRepo) {\n\t                        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n\t\t                        this.openBintrayOAuthModal();\n\t                        } else {\n\t\t                        this.openRepoTypeModal();\n\t                        }\n                        } else {\n\t                        this.repoInfo.type = REPO_FORM_CONSTANTS.CONFIG.RELEASE_BUNDLES;\n                        }\n                        this.ArtifactoryModelSaver.save();\n                    });\n\n                if (this.repoType == fieldsValuesDictionary.REPO_TYPE.LOCAL) {\n                    this.repoInfo.type = 'localRepoConfig';\n                }\n                if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n                    this.repoInfo.type = 'remoteRepoConfig';\n                }\n                if (this.repoType == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n                    this.repoInfo.type = 'virtualRepoConfig';\n                }\n\n            });\n\n    }\n\n    /**\n     * get all properties\n     */\n    _populateProperties() {\n        return this.propertySetsDao.query({isRepoForm: true}).$promise.then((properites)=> {\n            this.propertiesList = properites;\n        });\n    }\n\n    /**\n     * set dropdown options and default fields\n     */\n    _getFieldsOptions() {\n        return this.repositoriesDao.getAvailableChoicesOptions().$promise.then((fields)=> {\n            this.fields = fields;\n            this.localChecksumPolicies = fieldsValuesDictionary['localChecksumPolicy'];\n            this.localChecksumPoliciesKeys = Object.keys(this.localChecksumPolicies);\n            this.remoteChecksumPolicies = fieldsValuesDictionary['remoteChecksumPolicy'];\n            this.remoteChecksumPoliciesKeys = Object.keys(fieldsValuesDictionary['remoteChecksumPolicy']);\n            fields.proxies = fields.proxies || [];\n            fields.proxies.unshift('');\n            fields.webStartKeyPairs = fields.webStartKeyPairs || [];\n            fields.webStartKeyPairs.unshift('');\n            this.repositoryLayouts = _.sortBy(fields.repositoryLayouts,(layout) => layout);\n\n            if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n                this.repositoryLayouts.unshift('');\n            }\n            if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n                this.ruleTokensByType = fields.distributionTokensByType;\n                this.ruleTokensByLayout = fields.distributionTokensByLayout;\n                this.ruleTokensByLayoutKeys = Object.keys(this.ruleTokensByLayout);\n\n                this.distributionDefaultRules = fields.distributionDefaultRules;\n                if (this.features.isOss()) {\n                    this.distributionDefaultRules = _.filter(this.distributionDefaultRules,(rule=> {\n                        return _.contains(['Maven', 'Gradle', 'Ivy', 'SBT'],rule.type)\n                    }))\n                } else if (this.features.isConanCE()) {\n                    this.distributionDefaultRules = _.filter(this.distributionDefaultRules,(rule=> {\n                        return _.contains(['Conan'],rule.type)\n                    }))\n                }\n\n                this.distributionDefaultProductRules = fields.distributionDefaultProductRules;\n\n                if (this.newRepository) {\n                    this.repoInfo.type = 'distributionRepoConfig';\n                    this.distributionRules = this.distributionDefaultRules;\n                    this._createDistributionRulesGrid();    // NEW\n                }\n\n            }\n\n            this.remoteLayoutMapping = angular.copy(fields.repositoryLayouts);\n            this.remoteLayoutMapping.unshift('');\n            this.mavenSnapshotRepositoryBehaviors = fieldsValuesDictionary['snapshotRepositoryBehavior'];\n            this.mavenSnapshotRepositoryBehaviorsKeys = Object.keys(fieldsValuesDictionary['snapshotRepositoryBehavior']);\n            this.pomCleanupPolicies = fieldsValuesDictionary['pomCleanupPolicy'];\n            this.pomCleanupPoliciesKeys = Object.keys(fieldsValuesDictionary['pomCleanupPolicy']);\n            this.vcsGitProviderOptions = fieldsValuesDictionary['vcsGitProvider'];\n            this.vcsGitProviderOptionsKeys = Object.keys(fieldsValuesDictionary['vcsGitProvider']);\n            this.setSnapshotVersionBehavior();\n            return this._populateProperties();\n        });\n    }\n\n    /**\n     * fetching from server the default data\n     */\n    _getDefaultModels() {\n        return this.repositoriesDao.getDefaultValues().$promise.then((models)=> {\n            this.defaultModels = models.defaultModels;\n        });\n\n    }\n\n\n    /**\n     * check and set current tab\n     */\n    setCurrentTab(tab) {\n        if (this.features.isDisabled(tab)) {\n            return;\n        }\n        this.currentTab = tab;\n    }\n\n    isCurrentTab(tab) {\n        return this.currentTab === tab;\n    }\n\n    /**\n     * handle save or update click\n     */\n    save() {\n\n        let pending = this.repositoriesForm.repoKey.$pending;\n        if (pending && pending.repoKeyValidator) {\n            this.$timeout(()=>{\n                this.save();\n            },100)\n            return;\n        }\n\n        if (this.savePending) return;\n        if (!this.repositoriesForm.$valid) return;\n\n        this.savePending = true;\n\n        this.repoInfo.basic.includesPattern = this.repoInfo.basic.includesPatternArray.join(',') || undefined;\n        this.repoInfo.basic.excludesPattern = this.repoInfo.basic.excludesPatternArray.join(',') || undefined;\n        if(this.repoInfo.typeSpecific.repoType === 'YUM'){\n            this.repoInfo.typeSpecific.groupFileNames =\n                    this.repoInfo.groupFileNamesArray ? this.repoInfo.groupFileNamesArray.join(',') : undefined;\n        }\n\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.LOCAL) {\n            if (this.repoInfo.replications && this.repoInfo.replications.length) {\n                this.saveCronAndEventFlagToAllReplicationsAndValidateHa();\n            }\n            //Warn user if saving cron expression without any replication config\n            if (this.repoInfo.cronExp && (!this.repoInfo.replications || !this.repoInfo.replications.length)) {\n                this.notifications.create({warn: 'A cron expression was entered without any replication configuration.'\n                + '\\nThe expression will not be saved.'\n                });\n            }\n        }\n\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n            this._detectSmartRepository().then((result) => {\n                if (!result) {\n\n                }\n            });\n\n            //Add replication if exists:\n            if (this.repoInfo.replication) {\n                if (this.repoInfo.cronExp && this.repoInfo.replication.enabled\n                    && (!this.repoInfo.advanced.network.username || !this.repoInfo.advanced.network.password)) {\n                    this.notifications.create({\n                        error: 'Pull replication requires non-anonymous authentication to the ' +\n                        'remote repository.\\nPlease make sure to fill the \\'Username\\' and \\'Password\\' fields in the '\n                        + 'Advanced settings tab or remove the fields you filled in the replication tab.'\n                    });\n                    this.savePending = false;\n                    return false;\n                }\n                this.addReplication(this.repoInfo.replication);\n            }\n\n            if (this.repoInfo.advanced.network.proxy === '') {\n                delete this.repoInfo.advanced.network.proxy;\n            }\n\n            if (this.repoInfo.advanced.network.selectedInstalledCertificate == '') {\n                delete this.repoInfo.advanced.network.selectedInstalledCertificate;\n            }\n        }\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION && !this.isReleaseBundleRepo) {\n            this.repoInfo.advanced.distributionRules = this.distributionRules;\n        }\n        this.$timeout(() => {\n            this.save_update();\n        }, 500);\n\n    }\n\n    /**\n     * save or update wizard form\n     */\n    save_update(recursed = false,changeState = true) {\n        let defer = this.$q.defer();\n\n        if (!recursed && this.repoInfo.isType('cocoapods') && this.baseUrl === this.NO_VALUE_STRING) {\n            this._showUrlBaseAlert().then((gotoGenConf)=>{\n                if (gotoGenConf) {\n                    this.save_update(true).then(()=>{\n                        this.$state.go('admin.configuration.general',{focusOnBaseUrl: true});\n                    });\n                }\n                else {\n                    this.save_update(true);\n                }\n            }).catch(()=>this.savePending = false);\n        }\n        else {\n            if (this.repoInfo && this.repoInfo.typeSpecific && this.repoInfo.typeSpecific.keyPair === '') {\n                delete this.repoInfo.typeSpecific.keyPair;\n            }\n            if (this.newRepository) {\n                this.repositoriesDao.save(this.repoInfo).$promise.then((result)=> {\n                    this.ArtifactoryModelSaver.save();\n                    this.savePending = false;\n\n                    // Track new repository creation to Google Analytics\n                    if (this.repoInfo && this.repoInfo.typeSpecific) {\n                        let repoData = [];\n                        if (_.contains(['local','remote','distribution'], this.repoType)) {\n                            if (this.repoType === 'remote' && this.repoInfo.typeSpecific.repoType === 'Docker') {\n                                repoData.push(\"enableForeignLayersCaching:\" + this.repoInfo.typeSpecific.enableForeignLayersCaching);\n                            }\n                            this.GoogleAnalytics.trackEvent('Admin', 'Create Repo', this.repoInfo.typeSpecific.repoType, null, this.repoType, repoData[0] || '');\n                        } else if (this.repoType === 'virtual') {\n                            // Enable Dependency Rewrite (bower/npm)\n                            let repoType = this.repoInfo.typeSpecific.repoType;\n                            if (repoType === 'Bower' || repoType === 'Npm') {\n                                repoData.push(\"enableDependencyRewrite:\" + this.repoInfo.typeSpecific.enableExternalDependencies);\n                            }\n\n                            // Default Deployment Repository\n                            let defaultDeploymentRepo = !!this.repoInfo.basic.defaultDeploymentRepo;\n                            repoData.unshift('defaultDeploymentRepo:' + defaultDeploymentRepo);\n\n                            this.GoogleAnalytics.trackEvent('Admin', 'Create Repo', this.repoInfo.typeSpecific.repoType, this.repoInfo.basic.selectedRepositories.length, this.repoType, repoData[0] || '', repoData[1] || '');\n                        }\n                    }\n\n                    if (this.repoInfo.typeSpecific.repoType === \"Docker\" && this.features.isAol()) {\n                        let modalScope = this.$scope.$new();\n\n\n                        let dockerData = {\n                            repoKey : this.repoInfo.general.repoKey,\n                            packageType: this.repoType\n                        }\n\n                        this.DockerStatusDao.get({repoKey: dockerData.repoKey}).$promise.then((data) => {\n                            dockerData.hostname = data.hostname;\n                            dockerData.dockerPath = data.hostname + '-' + dockerData.repoKey + '.jfrog.io';\n                            dockerData.noDeployToLocal = !this.repoInfo.basic.defaultDeploymentRepo;\n                            dockerData = this.getDockerSnippets(dockerData);\n                            modalScope.dockerData = dockerData;\n\n                            this.dockerPopup = this.modal.launchModal('new_docker_modal', modalScope).result;\n                            this.dockerPopup.finally(()=>{\n                                if (changeState) this.$state.go('^.list', {repoType: this.repoType});\n                            });\n                        });\n                    }\n                    else if (changeState) this.$state.go('^.list', {repoType: this.repoType});\n                    defer.resolve();\n                }).catch(()=>this.savePending = false);\n            } else {\n                this.repositoriesDao.update(this.repoInfo).$promise.then((result)=> {\n                    this.ArtifactoryModelSaver.save();\n                    this.savePending = false;\n\n                    if (changeState) this.$state.go('^.list', {repoType: this.repoType});\n                    defer.resolve();\n                }).catch(()=>this.savePending = false);\n            }\n        }\n\n        return defer.promise;\n    }\n\n    getDockerSnippets(dockerData){\n        let allSnippets = {\n            dockerLogin: {message: \"According to the repository permission, you will need to login to your repository with docker login command\", snippet: \"docker login \" + dockerData.dockerPath},\n            dockerPull:  {message: \"Pull an image.\", snippet: \"docker pull hello-world\"},\n            dockerTag:   {message: \"Tag an image.\", snippet: \"docker tag hello-world \" + dockerData.dockerPath + \"/hello-world\"},\n            dockerPush:  {message: \"Then push it to your repository.\", snippet: \"docker push \" + dockerData.dockerPath + \"/hello-world\"},\n            dockerPushIt: {message: \"Then push it.\", snippet: \"docker push \" + dockerData.dockerPath + \"/hello-world\"},\n            dockerTest:  {message: \"And to test deploy to virtual, tag an image.\", snippet: \"docker tag hello-world \" + dockerData.dockerPath + \"/hello-world\"},\n            dockerPullImageFromRepo: {message: \"To pull an image from your repository.\", snippet: \"docker pull \" + dockerData.dockerPath + \"/hello-world\"},\n        }\n\n        dockerData.snippets = [];\n        if(this.repoInfo.typeSpecific.dockerApiVersion === 'V2'){\n            dockerData.snippets.push(allSnippets.dockerLogin);\n        }\n\n        switch(dockerData.packageType) {\n            case 'local':\n                dockerData.snippets.push(allSnippets.dockerPull);\n                dockerData.snippets.push(allSnippets.dockerTag);\n                dockerData.snippets.push(allSnippets.dockerPush);\n                break;\n            case 'remote':\n                dockerData.snippets.push(allSnippets.dockerPull);\n                break;\n            case 'virtual':\n                if (!dockerData.noDeployToLocal){\n                    dockerData.snippets.push(allSnippets.dockerPull);\n                    dockerData.snippets.push(allSnippets.dockerTest);\n                    dockerData.snippets.push(allSnippets.dockerPushIt);\n                    dockerData.snippets.push(allSnippets.dockerPullImageFromRepo);\n                } else {\n                    dockerData.snippets.push(allSnippets.dockerPullImageFromRepo);\n                }\n                break;\n        }\n        return dockerData;\n    }\n\n    _showUrlBaseAlert() {\n        let modalScope = this.$scope.$new();\n        modalScope.context = 'cocoapods';\n        return this.modal.launchModal('base_url_alert_modal', modalScope, 'md').result;\n    }\n\n    /**\n     * button pre and  forward at the bottom page\n     */\n    prevStep() {\n        if (this.currentTab == 'advanced') {\n            this.setCurrentTab('basic');\n        }\n        else if (this.currentTab == 'replications') {\n            this.setCurrentTab('advanced');\n        }\n        else if (this.currentTab == 'rules') {\n            this.setCurrentTab('advanced');\n        }\n    }\n\n    fwdStep() {\n        if (this.currentTab == 'basic') {\n            this.setCurrentTab('advanced');\n            return;\n        }\n        if (this.currentTab == 'advanced' && this.repoType != fieldsValuesDictionary.REPO_TYPE.VIRTUAL && this.repoType != fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n            this.setCurrentTab('replications');\n        }\n        if (this.currentTab == 'advanced' && this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n            this.setCurrentTab('rules');\n        }\n    }\n\n    /**\n     * function for select package type\n     */\n    openRepoTypeModal() {\n        let addTextBelowIcon = ['Bower', 'Chef', 'CocoaPods', 'Conan', 'Pypi', 'Puppet', 'Opkg', 'Composer', 'SBT', 'Gradle', 'Gems', 'NuGet', 'GitLfs','Generic','P2','VCS','CRAN'];\n        this.$repoTypeScope = this.$scope.$new();\n        this.$repoTypeScope.packageTypes = this.getPackageType();\n        this.$repoTypeScope.highlightCheck = (typeFilter,type) => {\n            if (typeFilter) {\n                let string = type.text.toLowerCase(),\n                searchstring = typeFilter.toLowerCase().replace(/ /g,'');\n\n\n                if (string.substr(0, searchstring.length) == searchstring) {\n                    type.highlighted = true;\n                    return true;\n                } else {\n                    type.highlighted = false;\n                    return false;\n                };\n            }\n        };\n        this.$repoTypeScope.checkNoResults = (typeFilter) => {\n            if (typeFilter && typeFilter.length > 0 && _.filter(this.packageType,(type)=>type.highlighted).length == 0) {\n                return true;\n            }\n        };\n        this.$repoTypeScope.isSelected = () => {\n            let HighlightedListItems = _.filter(this.packageType,(type)=>type.highlighted);\n            if (HighlightedListItems.length == 1) {\n                return true;\n            }\n        };\n        this.$repoTypeScope.selectPackage = () => {\n            let selectedItem = _.filter(this.packageType,(type)=>type.highlighted);\n            if (selectedItem.length == 1) {\n                this.selectRepoType(selectedItem[0])\n            }\n        };\n\n        _.map(this.$repoTypeScope.packageTypes,(type)=>{\n            if (_.includes(addTextBelowIcon, type.serverEnumName)) type.helpText = true;\n        });\n\n        if (this.features.isNonCommercial()) {\n            _.forEach(this.$repoTypeScope.packageTypes, item => {\n                if (!this.features.isEnabled(item.value)) item.disabled = true;\n            });\n\n            let activeItems = _.remove(this.$repoTypeScope.packageTypes, item => item.serverEnumName === \"Conan\" || item.serverEnumName === \"Generic\");\n            this.$repoTypeScope.packageTypes = [...activeItems, ...this.$repoTypeScope.packageTypes];\n        }\n        this.$repoTypeScope.closeModal = () =>  this.closeModalPackageType();\n        this.$repoTypeScope.modalClose = ()=> this.modalClose();\n        this.$repoTypeScope.selectRepoType = (type)=>this.selectRepoType(type);\n        this.isTypeModalOpen = true;\n\n        this.repoTypeModal = this.modal.launchModal('repository_type_modal', this.$repoTypeScope, 1000);\n        this.repoTypeModal.result.finally(() => {\n            this.repositoriesForm.repoKey.$validate();\n            this.isTypeModalOpen = false;\n            if (this.repoInfo.isType('debian')) {\n                this.onFormatSelectionChange();\n            }\n\n        });\n    }\n\n    openBintrayOAuthModal() {\n        this.$bintrayAuthScope = this.$scope.$new();\n        //Stuff for outgoing request\n        this.$bintrayAuthScope.isBackFromBintray = this.$location.search().code;\n        this.$bintrayAuthScope.bintrayBaseUrl = this.repoInfo.typeSpecific.bintrayBaseUrl;\n        this.$bintrayAuthScope.redirectUrl = encodeURIComponent(this.$location.absUrl());\n\n        if (this.$bintrayAuthScope.isBackFromBintray) {\n            this.$bintrayAuthScope.redirectUrl = encodeURIComponent(this.$location.absUrl().split('?')[0]);\n            //this.$bintrayAuthScope.redirectUrl = encodeURIComponent(this.$location.absUrl().substring(0, this.$location.absUrl().indexOf('?')));\n        } else {\n            this.$bintrayAuthScope.redirectUrl = encodeURIComponent(this.$location.absUrl());\n        }\n\n        this.$bintrayAuthScope.config = {bintraySecretString : ''};\n        this.$bintrayAuthScope.saveBintrayAuthInModel = () => this.saveBintrayAuthInModel(this.$bintrayAuthScope.config.bintraySecretString);\n        this.isBintrayModalOpen = true;\n\n        this.bintrayAuthModal = this.modal.launchModal('bintray_oauth_modal', this.$bintrayAuthScope, 600);\n        this.bintrayAuthModal.result.then(() => {\n            this.isBintrayModalOpen = false;\n            this.repositoriesForm.repoKey.$validate();\n        });\n        this.bintrayAuthModal.result.catch(() => {\n            this.ArtifactoryModelSaver.save();\n            this.$state.go('^.list', {repoType: this.repoType});\n        });\n    }\n    goToBintray() {\n        let url = this.$bintrayAuthScope.bintrayBaseUrl + '/login/oauth/authorize?scope=org:?:admin&redirect_uri=' + this.$bintrayAuthScope.redirectUrl + '&artifactory_originated=Oik=';\n        window.open(url, \"_self\");\n    }\n    closeModalPackageType() {\n        if (!this.repoType) {\n            return false;\n        }\n        if (this.newRepository) {\n            this.setRepoLayout();\n        }\n        if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n            // Resetting resolved and selected repositories lists in case we are changing package type\n            if (this.newRepository) {\n                this.repoInfo.basic.selectedRepositories = [];\n                this.repoInfo.basic.resolvedRepositories = [];\n            }\n            this._getRepositoriesByType();\n        }\n    }\n\n    _getRepositoriesByType() {\n        this.repositoriesDao.availableRepositoriesByType({\n            type: this.repoInfo.typeSpecific.repoType,\n            repoKey: this.repoInfo.general ? this.repoInfo.general.repoKey : ''\n        }).$promise.then((repos)=> {\n                    repos.availableLocalRepos = _.map(repos.availableLocalRepos, (repo)=> {\n                        return {\n                            repoName: repo,\n                            type: 'local',\n                            _iconClass: \"icon icon-local-repo\"\n                        }\n                    });\n                    repos.availableRemoteRepos = _.map(repos.availableRemoteRepos, (repo)=> {\n                        return {\n                            repoName: repo,\n                            type: 'remote',\n                            _iconClass: \"icon icon-remote-repo\"\n                        };\n                    });\n                    repos.availableVirtualRepos = _.map(repos.availableVirtualRepos, (repo)=> {\n                        return {\n                            repoName: repo,\n                            type: 'virtual',\n                            _iconClass: \"icon icon-virtual-repo\"\n                        };\n                    });\n\n                    this.repoInfo.basic.selectedRepositories = _.map(this.repoInfo.basic.selectedRepositories,\n                            (repo)=> {\n                                if (repo.type == 'local') {\n                                    return {\n                                        repoName: repo.repoName,\n                                        type: 'local',\n                                        _iconClass: \"icon icon-local-repo\"\n                                    }\n                                }\n                                else if (repo.type == 'remote') {\n                                    return {\n                                        repoName: repo.repoName,\n                                        type: 'remote',\n                                        _iconClass: \"icon icon-remote-repo\"\n                                    }\n                                }\n                                else if (repo.type == 'virtual') {\n                                    return {\n                                        repoName: repo.repoName,\n                                        type: 'virtual',\n                                        _iconClass: \"icon icon-virtual-repo\"\n                                    }\n                                }\n                            });\n\n\n                    this.repositoriesList = [];\n                    this.repositoriesList = repos.availableLocalRepos.concat(repos.availableRemoteRepos).concat(repos.availableVirtualRepos);\n\n                    if (!this.newRepository) this.ArtifactoryModelSaver.save();\n\n                });\n    }\n\n    getReplicationActions() {\n        return [\n            {\n                icon: 'icon icon-run',\n                tooltip: 'Run Now',\n                visibleWhen: row => !this.globalReplicationsStatus.blockPushReplications && row.enabled,\n                callback: row => this.executeReplicationNow(row)\n            },\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this._deleteReplication(row)\n            }\n        ]\n    }\n\n    executeReplicationNow(row) {\n        if (true) {\n            this.repositoriesDao.executeReplicationNow({replicationUrl: row.url},\n                    this.repoInfo).$promise.then((result)=> {\n                        //console.log(result)\n                    });\n        }\n    }\n\n    setRepoLayout() {\n        let foundLayout = false;\n        if (_.has(this.repoInfo, 'typeSpecific.repoType')) {\n            let type = this.repoInfo.typeSpecific.repoType.toLowerCase();\n            let defaultLayouts = fieldsValuesDictionary['defaultLayouts'];\n            if (!this.repoInfo.basic) {\n                this.repoInfo.basic = {};\n                this.repoInfo.basic.repositoryLayout = {};\n            }\n            this.repositoryLayouts = _.filter(this.repositoryLayouts, (layout)=>{return layout !== ''})\n            if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n                this.repositoryLayouts.unshift('');\n            }\n\n            let defaultLayout = defaultLayouts[type];\n            if (defaultLayout && _.includes(this.repositoryLayouts, defaultLayout)) {\n                this.repoInfo.basic.layout = defaultLayout;\n                foundLayout = true;\n            } else {\n                this.repositoryLayouts.forEach((layout)=> {\n                    if (layout.indexOf(type) != -1) {\n                        this.repoInfo.basic.layout = layout;\n                        foundLayout = true;\n                    }\n                });\n            }\n            if (!foundLayout) {\n                this.repoInfo.basic.layout = \"simple-default\";\n            }\n        }\n    }\n\n    /**\n     * set default fields for new repository\n     */\n    _setDefaultValuesByType() {\n        if (!(this.repoInfo && this.repoInfo.typeSpecific)) {\n            this.repoInfo.typeSpecific = {};\n        }\n        let type = this.repoInfo.typeSpecific.repoType.toLowerCase();\n        if (type && this.defaultModels[type]) {\n            angular.extend(this.repoInfo.typeSpecific, this.defaultModels[type]);\n            // add default remote url for remote repository\n            if (this.repoType.toLocaleLowerCase() == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n                this.repoInfo.basic.url = this.defaultModels[type].url;\n            }\n        }\n        if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.VIRTUAL) {\n            this.repoInfo.basic.repositoryLayout = '';\n        }\n    }\n\n    _setDefaultFields() {\n        if (!this.repoInfo.typeSpecific) {\n            this.repoInfo.typeSpecific = {};\n        }\n        this.repoInfo.advanced = {};\n        this.repoInfo.advanced.cache = {};\n        this.repoInfo.advanced.network = {};\n\n        _.forEach(this.defaultModels, (item) => {\n            if (item.maxUniqueTags === 0) {\n                item.maxUniqueTags = '';\n            }\n            if (item.maxUniqueSnapshots === 0) {\n                item.maxUniqueSnapshots = '';\n            }\n            if (item.keepUnusedArtifactsHours === 0) {\n                item.keepUnusedArtifactsHours = '';\n            }\n        });\n\n\n        angular.extend(this.repoInfo.advanced.cache, this.defaultModels['cache']);\n        angular.extend(this.repoInfo.advanced.network, this.defaultModels['network']);\n        if (this.repoInfo.advanced.network.installedCertificatesList) {\n            this.repoInfo.advanced.network.installedCertificatesList.unshift('');\n        }\n\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n            if (!this.repoInfo.advanced) {\n                this.repoInfo.advanced = {};\n            }\n            if (!this.repoInfo.basic) {\n                this.repoInfo.basic = {};\n            }\n\n            angular.extend(this.repoInfo.advanced, this.defaultModels['remoteAdvanced']);\n            angular.extend(this.repoInfo.basic, this.defaultModels['remoteBasic']);\n        }\n        else if (this.repoType == fieldsValuesDictionary.REPO_TYPE.LOCAL\n                    || this.repoType == fieldsValuesDictionary.REPO_TYPE.VIRTUAL\n                    || this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n            if (!this.repoInfo.advanced) {\n                this.repoInfo.advanced = {};\n            }\n            if (!this.repoInfo.basic) {\n                this.repoInfo.basic = {};\n            }\n            angular.extend(this.repoInfo.advanced, this.defaultModels['localAdvanced']);\n            angular.extend(this.repoInfo.basic, this.defaultModels['localBasic']);\n            this.repoInfo.typeSpecific.localChecksumPolicy = this.defaultModels['maven'].localChecksumPolicy;\n            if(this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n\t            if(this.isReleaseBundleRepo) {\n\t\t            this.repoInfo.advanced = {};\n\t\t            this.repoInfo.typeSpecific = {\n\t\t\t            repoType: REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES\n\t\t            };\n\t\t            this.repoInfo.basic.includesPatternArray = ['**/*'];\n\t\t            this.repoInfo.basic.excludesPatternArray = [];\n\t\t            return;\n\t            } else {\n\t\t            this.repoInfo.typeSpecific = this.defaultModels['distribution'];\n\t\t            this.repoInfo.basic.layout = \"simple-default\";\n\t\t            this.distributionType = false;\n                }\n            }\n        }\n\n        this.repoInfo.basic.includesPatternArray = ['**/*'];\n        this.repoInfo.basic.excludesPatternArray = [];\n\n        this._setDefaultProxy();\n    }\n\n    selectRepoType(type) {\n        if (this.features.isDisabled(type.value)) {\n            return;\n        }\n\n        this.repoTypeModal.close();\n        if (!this.repoInfo.typeSpecific) {\n            this.repoInfo.typeSpecific = {};\n        }\n        this.repoInfo.typeSpecific.repoType = type.serverEnumName;\n        this.repoInfo.typeSpecific.icon = type.icon;\n        this.repoInfo.typeSpecific.text = type.text;\n        if (this.repoInfo.typeSpecific.repoType === \"Docker\" && !this.features.isAol() && !this.features.isNonCommercial()) {\n            this._getReveresProxyConfigurations();\n        }\n        if(this.repoInfo.typeSpecific.repoType === \"CocoaPods\" && this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n            this.repoInfo.advanced.network.socketTimeout = 45000\n        }\n\n        if (this.newRepository) {\n            this._setDefaultValuesByType();\n        }\n        this.closeModalPackageType();\n\n        // Go import in virtual repo specific tooltip\n        if (this.repoType === 'virtual') {\n            this.whitelistTooltip = \"\";\n            this.$timeout(() => this.whitelistTooltip = type.value === 'go' ? this.TOOLTIP.virtualForm.externalDependenciesPatternsGo : this.TOOLTIP.virtualForm.externalDependenciesPatterns);\n        }\n    }\n\n    saveBintrayAuthInModel(bintraySecretString) {\n        //todo -- should respond to feature disabled?\n        if (!this.repoInfo.typeSpecific) {\n            this.repoInfo.typeSpecific = {};\n        }\n        this.repoInfo.typeSpecific.repoType = 'Distribution';\n        if (this.newRepository) {\n            this._setDefaultValuesByType();\n        }\n        this.repoInfo.typeSpecific.bintrayAuthString = bintraySecretString;\n        this.repoInfo.typeSpecific.redirectUrl = this.$location.absUrl().split('?')[0];\n        this.repoInfo.typeSpecific.paramClientId = this.$location.search().client_id;\n        this.repoInfo.typeSpecific.code = this.$location.search().code;\n        this.repoInfo.typeSpecific.scope = this.$location.search().scope;\n        this.repositoriesDao.saveBintrayOauthConfig(this.repoInfo.typeSpecific).$promise.then((result)=> {\n            this.bintrayAuthModal.close();\n            //Result from backend contains the key for the newly created OAuth app that this repo must reference.\n            this.repoInfo.typeSpecific = result.data;\n            let isPremium = this.repoInfo.typeSpecific.premium;\n            if (!isPremium) {\n                this.bintrayAuthentication = false;\n            }\n            this._setupLicenses();\n            this._checkVisibility(isPremium)\n            this._setRulesPackages();\n        }).catch(() => {\n\n        });\n    }\n\n    isRightColumnEmptyInLocalRepo(){\n        return (!this.repoInfo.isType('maven', 'gradle', 'ivy', 'sbt', 'yum','cocoapods','debian','docker','nuget'));\n    }\n\n    isRightColumnEmptyInRemoteRepo(){\n        return (!this.repoInfo.basic.contentSynchronisation.enabled &&\n               !this.smartRepoUnknownCapabilities &&\n               !this.repoInfo.isType('maven','gradle','ivy','sbt','generic',\n                                               'vcs', 'bower', 'cocoapods', 'composer',\n                                               'docker','nuget','debian','yum','p2', 'pypi', 'go'));\n    }\n\n    isVirtualAdvancedAvailable() {\n        return !this.repoInfo.isType('gems', 'nuget', 'chef', 'gitlfs','p2','pypi','yum','generic','puppet','helm', 'conda', 'debian');\n    }\n\n    /**\n     * newReplication; editReplication->\n     * functions for replications modal (work only for local repos)\n     */\n    newReplication() {\n        if (this.repoInfo.replications && this.repoInfo.replications.length && this.features.isDisabled('highAvailability') && !this.features.isDedicatedAol()) {\n            this.notifications.create({warn: 'Multi-push replication will only work with an Enterprise license'});\n            return true;\n        }\n        this.replicationScope.replication = {};\n        this.replicationScope.title = 'New Replication';\n        this.replicationScope.replication.socketTimeout = 15000;\n        this.replicationScope.replication.syncProperties = true;\n        this.replicationScope.sourceReplication = null;\n        this.replicationScope.replication.enabled = true;\n        this.replicationModal(false);\n    }\n\n\n    editReplication(row) {\n        this.replicationScope.title = 'Replication Properties';\n        this.replicationScope.replication = angular.copy(row);\n        this.replicationScope.sourceReplication = row;\n        this.replicationModal(true);\n    }\n\n    _deleteReplication(row) {\n        this.modal.confirm(\"Are you sure you wish to delete this replication?\", 'Delete Replication', {confirm: 'Delete'})\n                .then(()=> {\n                    _.remove(this.repoInfo.replications, row);\n                    this.replicationsGridOption.setData(this.repoInfo.replications);\n                });\n\n    }\n\n    replicationModal(isEdit) {\n        this.replicationScope.replication.proxies = this.fields.proxies;\n        if(!isEdit) {\n            this.fields.defaultProxy ? this.replicationScope.replication.proxy = this.fields.defaultProxy : '';\n        }\n        this.modalInstance = this.modal.launchModal('replication_modal', this.replicationScope);\n    }\n\n    /**\n     * add replication: function that save fields in form for replication.\n     * if local: push it for grid replication\n     * if remote: clear exsit replication and set the new one\n     */\n    addReplication(replication) {\n\n        if (this.repoType.toLowerCase() == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n            this.repoInfo.replications = [];\n        }\n        replication.enabled = replication.enabled ? replication.enabled : false;\n        replication.syncDeletes = replication.syncDeletes ? replication.syncDeletes : false;\n        replication.syncProperties = replication.syncProperties ? replication.syncProperties : false;\n        replication.syncStatistics = replication.syncStatistics ? replication.syncStatistics : false;\n        replication.cronExp = this.repoInfo.cronExp;\n        replication.nextTime = this.repoInfo.nextTime;\n        replication.enableEventReplication = this.repoInfo.enableEventReplication;\n        replication.type = this.repoType;\n        if (replication.proxy === '') {\n            delete replication.proxy;\n        }\n        if (this.replicationScope.sourceReplication) {\n            // updating replication\n            angular.copy(replication, this.replicationScope.sourceReplication);\n        } else {\n            // adding new replication\n            this.repoInfo.replications = this.repoInfo.replications || [];\n            this.repoInfo.replications.push(replication);\n        }\n        if (this.repoType.toLocaleLowerCase() == fieldsValuesDictionary.REPO_TYPE.LOCAL) {\n            this.replicationsGridOption.setData(this.repoInfo.replications);\n            this.closeModal();\n        }\n    }\n\n    /**\n     * Saves the cron expression and event replication flag to all replications.\n     * Also validates that if HA license is not installed - only one active replication is saved.\n     */\n    saveCronAndEventFlagToAllReplicationsAndValidateHa() {\n        //Signifies save should disable all replications but one because multiple enabled replicaions exist without HA license\n        let notHa = this.features.isDisabled('highAvailability') && !this.features.isDedicatedAol() && this.repoInfo.replications.length > 1;\n        this.repoInfo.replications.forEach((replication) => {\n            replication.cronExp = this.repoInfo.cronExp;\n            replication.enableEventReplication = this.repoInfo.enableEventReplication;\n            if(notHa) {\n                replication.enabled = false;\n            }\n        });\n        if(notHa) {\n            this.notifications.create({warn: 'You saved multiple enabled replication configurations.\\n Multi-push ' +\n            'replication is only available with an Enterprise licenses therefore only the first replication will be' +\n            'saved as enabled and the rest will be disabled.'});\n            this.repoInfo.replications[0].enabled = true;\n        }\n    }\n\n    closeModal() {\n        this.modalInstance.close();\n    }\n\n    _createGrid() {\n        this.replicationsGridOption = new this.JFrogTableViewOptions(this.$scope);\n        this.replicationsGridOption\n                .setRowsPerPage(10)\n                .setColumns(this._getColumns())\n                .setSelection(this.replicationsGridOption.SINGLE_SELECTION)\n                .setEmptyTableText('No replications')\n                .setObjectName('Repository/Repositories')\n                .setActions(this.getReplicationActions());\n        //\n        this.replicationsGridOption.setData([]);\n    }\n\n    /**\n     * controller display arrows form\n     */\n    showNextButton() {\n        if (this.repoType == fieldsValuesDictionary.REPO_TYPE.LOCAL || this.repoType == fieldsValuesDictionary.REPO_TYPE.REMOTE) {\n            if (this.features.isDisabled('replications')) {\n                return this.currentTab != 'advanced';\n            }\n            return this.currentTab != 'replications';\n        } else if (this.repoType == fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION) {\n            if (this.features.isDisabled('rules')) {\n                return this.currentTab != 'advanced';\n            }\n            return this.currentTab != 'rules';\n        }\n        else {\n            return this.currentTab != 'advanced';\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'URL',\n                header: 'URL',\n                field: 'url',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ng-click=\"grid.appScope.RepositoryForm.editReplication(row.entity)\" class=\"jf-link\">{{row.entity.url}}</a></div>'\n\n            },\n            {\n                name: 'Sync Deletes',\n                header: 'Sync Deletes',\n                field: 'syncDeletes',\n                cellTemplate:  this.JFrogTableViewOptions\n                        .cellTemplateGenerators.checkboxColumn('row.entity.syncDeletes')\n            },\n            {\n                name: 'Sync Properties',\n                header: 'Sync Properties',\n                field: 'syncProperties',\n                cellTemplate: this.JFrogTableViewOptions\n                        .cellTemplateGenerators.checkboxColumn('row.entity.syncProperties')\n            },\n            {\n                name: 'Enabled',\n                header: 'Enabled',\n                field: 'enabled',\n                cellTemplate: this.JFrogTableViewOptions\n                        .cellTemplateGenerators.checkboxColumn('row.entity.enabled')\n            }\n        ]\n    }\n\n    /**\n     * all packages sorts by type\n     */\n    getPackageType() {\n        switch (this.repoType) {\n            case fieldsValuesDictionary.REPO_TYPE.LOCAL:\n            {\n                return _.filter(this.packageType,(type) => {\n                   return _.indexOf(type.repoType, fieldsValuesDictionary.REPO_TYPE.LOCAL) != -1});\n            }\n            case fieldsValuesDictionary.REPO_TYPE.REMOTE:\n            {\n                return _.select(this.packageType,(type) => {\n                    return _.indexOf(type.repoType, fieldsValuesDictionary.REPO_TYPE.REMOTE) != -1});\n            }\n            case fieldsValuesDictionary.REPO_TYPE.VIRTUAL:\n            {\n                return _.select(this.packageType,(type) => {\n                    return _.indexOf(type.repoType, fieldsValuesDictionary.REPO_TYPE.VIRTUAL) != -1});\n            }\n            case fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION:\n            {\n                return fieldsValuesDictionary.REPO_TYPE.DISTRIBUTION\n            }\n        }\n    }\n\n    cancel() {\n        this.$state.go('^.list', {repoType: this.repoType});\n    }\n\n    _getReveresProxyConfigurations() {\n        this.reverseProxiesDao.get().$promise.then((reverseProxies)=> {\n\n            this.reverseProxyConfigured = reverseProxies.serverName && reverseProxies.webServerType && (reverseProxies.useHttp || reverseProxies.useHttps) && reverseProxies.dockerReverseProxyMethod !== 'NOVALUE';;\n\n//            this.hideReverseProxy = this.reverseProxyConfigured\n\n            if (this.reverseProxyConfigured) {\n                if (!this.repoInfo.advanced.reverseProxy) {\n                    this.repoInfo.advanced.reverseProxy = {\n                        key: reverseProxies.key,\n                        serverName: reverseProxies.serverName\n                    };\n                }\n                if (reverseProxies.dockerReverseProxyMethod === 'PORTPERREPO') {\n                    this.reverseProxyPortMode = true;\n                    this.repoInfo.advanced.reverseProxy.serverName = reverseProxies.serverName;\n                }\n                else if (reverseProxies.dockerReverseProxyMethod === 'REPOPATHPREFIX') {\n                }\n                else {\n                    this.reverseProxyPortMode = false;\n                    if (this.repoInfo.general && this.repoInfo.general.repoKey) this.repoInfo.advanced.reverseProxy.serverName = reverseProxies.serverNameExpression.replace('*',this.repoInfo.general.repoKey);\n                    this.reverseProxyServerNameExpression = reverseProxies.serverNameExpression;\n                }\n            }\n\n        });\n    }\n    onChangeRepoKey() {\n        if (this.repoInfo.general && this.repoInfo.general.repoKey && this.reverseProxyServerNameExpression) this.repoInfo.advanced.reverseProxy.serverName = this.reverseProxyServerNameExpression.replace('*',this.repoInfo.general.repoKey);\n    }\n\n    onChangeForeignLayersCachingEnabled() {\n        if (this.repoInfo.typeSpecific.enableForeignLayersCaching) {\n            if (!this.repoInfo.typeSpecific.externalPatterns) {\n                this.repoInfo.typeSpecific.externalPatterns = ['**'];\n            }\n        }\n    }\n\n    _getGeneralConfig() {\n        this.generalConfigDao.get().$promise.then((data) => {\n            this.baseUrl = data.customUrlBase || this.NO_VALUE_STRING;\n            this.isS3Configured = data.s3Configured\n        });\n    }\n\n    _getGlobalReplicationsStatus() {\n        this.globalReplicationsConfigDao.status().$promise.then((status) => {\n            this.globalReplicationsStatus = {\n                blockPullReplications: status.blockPullReplications,\n                blockPushReplications: status.blockPushReplications\n            }\n        });\n    }\n\n    // YUM FOLDER DEPTH TOOLTIP\n    hostYumOriginalValue() {\n        this.originalYumValue;\n        if (this.originalValueFlag) {\n            this.originalYumValue = this.repoInfo.typeSpecific.metadataFolderDepth;\n            this.originalValueFlag = false;\n        }\n    }\n    changeYumFolderDepth() {\n        this.yumTooltip = (this.repoInfo.typeSpecific.metadataFolderDepth < this.originalYumValue) ? true : false;\n    }\n\n    // DISTRIBUTION RULES\n\n    _setRulesPackages() {\n\n        this.distributionRulesPackages = _.filter(this.packageType, (o) => {\n            if (this.features.isOss()) {\n                return o.value == 'generic' || o.value == 'maven' || o.value == 'gradle' || o.value == 'ivy' || o.value == 'sbt';\n            } else if (this.features.isConanCE()) {\n                return o.value == 'generic' || o.value == 'conan';\n            } else {\n                return o.value != 'gitlfs' && o.value != 'gems' && o.value != 'pypi' && o.value != 'p2' && o.value != 'vcs';\n            }\n        });\n        this.distributionRulesPackages.forEach((pack)=>delete pack.description);\n    }\n\n    _checkVisibility(isPremium) {\n        if (!isPremium) {\n            this.defaultNewRepoPrivateSwitch = 'Public';\n            this.repoInfo.basic.defaultNewRepoPrivate = false;\n            this.repoInfo.basic.defaultNewRepoPremium = false;\n        } else {\n            this.defaultNewRepoPrivateSwitch = 'Private';\n            this.repoInfo.basic.defaultNewRepoPrivate = true;\n            this.repoInfo.basic.defaultNewRepoPremium = true;\n        }\n    }\n\n    _setupLicenses() {\n        // License input configuration\n        this.licensesList = _.map(this.repoInfo.typeSpecific.availableLicenses, (lic) => {\n            return {\n                text: lic,\n                value: lic\n            }\n        });\n    }\n\n    // TODO: try understand why there is a glitch with width when dragging\n    _setupDistribution() {\n        this.distRepoRulesGridData = [];\n        this.rulesGridOptions = new this.JFrogTableViewOptions(this.$scope);\n        this.rulesGridOptions\n                .setNewEntityAction(this.rulesPopup.bind(this))\n                .setDraggable(this._reorderRules.bind(this))\n                .setColumns(this._getDistributionRulesColumns())\n                .setActions(this._getRulesActions())\n                .setBatchActions(this._getBatchActions())\n                .setRowsPerPage(10)\n                .setEmptyTableText('No rules to show')\n                .setObjectName('Rule/Rules')\n                .setSelection(this.JFrogTableViewOptions.MULTI_SELECTION);\n    }\n\n    _reorderRules() {\n        this.distributionRules = this.distRepoRulesGridData;\n    }\n\n    _getRulesActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this._deleteRule(row)\n            }\n        ]\n    }\n\n    _deleteRule(row) {\n        this.modal.confirm(\"Are you sure you wish to delete this rule?\", 'Delete Rule', {confirm: 'Delete'})\n            .then(()=> {\n                _.remove(this.distributionRules, row);\n                this._createDistributionRulesGrid();\n            });\n\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.bulkDelete()\n            }\n        ]\n    }\n\n    bulkDelete(){\n        // Get All selected rules\n        let selectedRows = this.rulesGridOptions.getSelected();\n\n        // Ask for confirmation before delete and if confirmed then delete bulk of rules\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} rules?`)\n            .then(() => {\n                this.distributionRules = _.filter(this.distributionRules, (row)=>{\n                    return !_.find(selectedRows, {name: row.name})\n                });\n                this._createDistributionRulesGrid();\n            });\n    }\n\n    changeDistribute() {\n        if (this.distributionType == false) {\n            this.repoInfo.basic.productName = null;\n        }\n        /*this.modal.confirm(\"Artifactory has a set of default rules for \" + (this.distributionType ? \"product\" : \"packages\") + \" distribution.<br/>Would you like to set these rules and <strong>override</strong> existing rules?\", this.distributionType ? 'Set Product Distribution Rules' : 'Set Packages Distribution Rules', {confirm: 'Override'})\n            .then(()=> {\n                if (this.distributionType == false) {\n                    this.distributionRules = this.distributionDefaultRules;\n                }\n                else {\n                    this.distributionRules = this.distributionDefaultProductRules;\n                }\n                this._createDistributionRulesGrid();\n            }).catch(() => {\n            this.distributionType = !this.distributionType;\n        });*/\n    }\n\n    changeDistributeVisibility() {\n        this.repoInfo.basic.defaultNewRepoPrivate = this.defaultNewRepoPrivateSwitch == 'Private' ? true : false;\n    }\n\n    _createDistributionRulesGrid() {\n\n        if (!this.distributionRules && !this.newRepository) {\n            this.distributionRules = this.repoInfo.advanced.distributionRules;\n        }\n\n        _.forEach(this.distributionRules, (row) => {\n            var rowPackageType =_.find(fieldsValuesDictionary.repoPackageTypes, (type) => {\n                return type.value == row.type.toLowerCase();\n            });\n            if (rowPackageType) {\n                row.displayType = rowPackageType.text;\n                row.typeIcon = rowPackageType.icon;\n            } else row.ignore = true;\n        });\n        let distRepoRulesGridData = _.filter(this.distributionRules, (row) => !row.ignore);\n        this.distRepoRulesGridData = distRepoRulesGridData;\n        this.rulesGridOptions.setData(this.distRepoRulesGridData);\n\n    }\n\n    onWizardTabSwitch(tab) {\n        if(this.rulesGridOptions && this.rulesGridOptions.update && tab === 'Rules') {\n            this.rulesGridOptions.update();\n        }\n    }\n\n    _getDistributionRulesColumns() {\n        return [\n            {\n                name: 'Name',\n                header: 'Name',\n                field: \"name\",\n                cellTemplate: `<a class=\"jf-link rule-name\" \n                                    ng-click=\"appScope.RepositoryForm.editDistributionRule(row.entity)\">\n                                    {{row.entity.name}}\n                               </a>`,\n                width: '80%',\n                sortable: false\n            },\n            {\n                name: 'Type',\n                header: 'Type',\n                field: 'displayType',\n                cellTemplate: this.JFrogTableViewOptions\n                        .cellTemplateGenerators.iconColumn('row.entity.displayType', 'row.entity.typeIcon', 'repo-type-icon'),\n                width: '20%',\n                sortable: false\n            }\n        ]\n\n    }\n\n    rulesPopup() {\n        this.rulesModalScope = this.$scope.$new();\n        this.rulesModalScope.title = \"Add New Rule\";\n        this.rulesModalScope.itemToEdit = null;\n        this.rulesModalScope.rule = {};\n        this.availableTokens = null;\n        this.rulesModalScope.repositoryFilterTooltip = this.repositoryFilterTooltip;\n        this.rulesModalScope.pathFilterToolip = this.pathFilterToolip;\n\n        this.modalRules = this.modal.launchModal('add_rule_modal', this.rulesModalScope, 1000);\n    }\n\n    changeRuleRepoType() {\n        let selectedPackageType = this.rulesModalScope.rule.selectedPackageType;\n        let selectedPackageServerEnumName = selectedPackageType.serverEnumName;\n        let selectedPackageValue = selectedPackageType.value;\n        if (selectedPackageValue == 'generic') {\n            this.rulesModalScope.rule.RulePackageLayoutSelect = null; // Reset selected layout\n            this.availableTokens = this.ruleTokensByLayout[selectedPackageServerEnumName];\n        } else if (selectedPackageValue == 'nuget' || selectedPackageValue == 'debian') {\n            this.rulesModalScope.rule.distributionCoordinatesPackage = \"[packageName]\";\n            this.availableTokens = this.ruleTokensByType[selectedPackageServerEnumName];\n        } else {\n            this.availableTokens = this.ruleTokensByType[selectedPackageServerEnumName];\n            if (!this.distributionType) {\n                this.availableTokens = _.filter(this.availableTokens,(val) => val !== '${productName}');\n            }\n        }\n\n        // Auto fill coordinates from default rules module\n        let coordinates = {};\n        if (selectedPackageValue != 'generic') {\n            coordinates = _.filter(this.distributionDefaultRules, (o) => {\n                return o.type.toLowerCase() === selectedPackageValue;\n            });\n            coordinates = coordinates.length ? coordinates[0].distributionCoordinates : [];\n        }\n        this.rulesModalScope.rule.distributionCoordinatesRepo = coordinates.repo || '';\n        this.rulesModalScope.rule.distributionCoordinatesPackage = coordinates.pkg || '';\n        this.rulesModalScope.rule.distributionCoordinatesVersion = coordinates.version || '';\n        this.rulesModalScope.rule.distributionCoordinatesPath = coordinates.path || '';\n    }\n\n    changeRulePackageLayout() {\n        this.availableTokens =  this.ruleTokensByLayout[this.rulesModalScope.rule.RulePackageLayoutSelect];\n    }\n\n    saveDistributionRule() {\n        let ruleObject = {\n                    name: this.rulesModalScope.rule.ruleName,\n                    type: this.rulesModalScope.rule.selectedPackageType.text,\n                    repoFilter: this.rulesModalScope.rule.filterRepo  || '',\n                    pathFilter: this.rulesModalScope.rule.filterPath  || '',\n                    distributionCoordinates: {\n                        repo: this.rulesModalScope.rule.distributionCoordinatesRepo || '',\n                        pkg: this.rulesModalScope.rule.distributionCoordinatesPackage || '',\n                        version: this.rulesModalScope.rule.distributionCoordinatesVersion || '',\n                        path: this.rulesModalScope.rule.distributionCoordinatesPath  || ''\n                    }\n        };\n\n        if (this.rulesModalScope.itemToEdit == null) {\n            this.distributionRules.push(ruleObject);\n        } else {\n            this.distributionRules[this.rulesModalScope.itemToEdit] = ruleObject;\n        }\n\n        this._createDistributionRulesGrid();\n        this.modalRules.close();\n\n    }\n\n    editDistributionRule(row) {\n        let selectedPackageType = _.find(fieldsValuesDictionary.repoPackageTypes, (type) => {\n            return type.value == row.type.toLowerCase();\n        });\n        this.availableTokens = this.ruleTokensByType[row.type];\n\n        if (!this.distributionType) {\n            this.availableTokens = _.filter(this.availableTokens,(val) => val !== '${productName}');\n        }\n\n        this.rulesModalScope = this.$scope.$new();\n        this.rulesModalScope.originalRuleName = row.name;\n        this.rulesModalScope.title = \"Edit Rule\";\n        this.rulesModalScope.itemToEdit = _.indexOf(this.distributionRules, row);\n        this.rulesModalScope.rule = {\n            ruleName: row.name,\n            selectedPackageType: selectedPackageType,\n            filterRepo: row.repoFilter,\n            filterPath: row.pathFilter,\n            distributionCoordinatesRepo: row.distributionCoordinates.repo,\n            distributionCoordinatesPackage: row.distributionCoordinates.pkg,\n            distributionCoordinatesVersion: row.distributionCoordinates.version,\n            distributionCoordinatesPath: row.distributionCoordinates.path\n        };\n\n        this.rulesModalScope.repositoryFilterTooltip = this.repositoryFilterTooltip;\n        this.rulesModalScope.pathFilterToolip = this.pathFilterToolip;\n\n        this.modalRules = this.modal.launchModal('add_rule_modal', this.rulesModalScope, 1000);\n    }\n\n    // RULE TEST\n    testRule() {\n        this.repositoriesDao.testDistributionRules({\n            testPath: this.rulesModalScope.rule.testPath,\n            productName: this.repoInfo.basic.productName || null,\n            name: this.rulesModalScope.rule.ruleName,\n            type: this.rulesModalScope.rule.selectedPackageType.text,\n            repoFilter: this.rulesModalScope.rule.filterRepo  || '',\n            pathFilter: this.rulesModalScope.rule.filterPath  || '',\n            distributionCoordinates: {\n                repo: this.rulesModalScope.rule.distributionCoordinatesRepo || '',\n                pkg: this.rulesModalScope.rule.distributionCoordinatesPackage || '',\n                version: this.rulesModalScope.rule.distributionCoordinatesVersion || '',\n                path: this.rulesModalScope.rule.distributionCoordinatesPath  || ''\n            }\n        }).$promise.then((result)=> {\n            //console.log(result);\n        });\n    }\n\n    // VALIDATIONS\n    isProductNameValid(value) {\n            return !value || value.match(/^[a-zA-Z0-9\\-_\\.:]+$/)\n    }\n    checkUniqueRuleName(value) {\n        let found = _.find(this.distributionRules, function(o) {\n            return o.name == value;\n        });\n        return !found || value == this.rulesModalScope.originalRuleName;\n    }\n    checkReservedName(value) {\n        let notAlowedStrings = ['delete', 'remove', 'edit', 'create', 'save', 'new', 'account', 'usage', 'anonymous', 'status', 'product', 'eula', 'packages', 'package', 'products', 'jcenter', 'rpm-center', 'deb-center', 'node-center', 'ruby-center', 'gems-center', 'gems-central', 'docker-'];\n        let found = _.includes(notAlowedStrings, value);\n        return !found;\n    }\n\n    validateRuleRepoName(value) {\n        let regex = /^([A-Za-z0-9.\\-_]+)$/;\n        return !value || value.match(regex);\n    }\n\n    firstLetterValidation(value) {\n        let firstLetterRegex = /^[A-Za-z0-9$]/; //Allow letters, numbers and $ sign in first letter\n        return !value || value.charAt(0).match(firstLetterRegex);\n    }\n\n    checkLength(value,min=1,max=100) {\n        if (value) {\n            let result = (value.length > max) ? false : true;\n            return (result);\n        }\n    }\n\n    dockerVagrantValidate(value) {\n        if (value) {\n            if (this.rulesModalScope.rule.selectedPackageType && (this.rulesModalScope.rule.selectedPackageType.serverEnumName === 'Docker' || this.rulesModalScope.rule.selectedPackageType.serverEnumName === 'Vagrant')) {\n                let regex = /^([a-z0-9.\\-_]+)$/;\n                return value.match(regex);\n            } else {\n                return true;\n            }\n        }\n    }\n\n    isEventReplicationDisabled() {\n        return !this.repoInfo.replication ||\n                !this.repoInfo.replication.enabled ||\n                !this.lastSmartRemoteURL ||\n                (this.footerDao.getInfo().versionID !== 'ENT'\n                        && this.footerDao.getInfo().versionID !== 'ENTPLUS'\n                        && !this.features.isDedicatedAol()) ||\n                !this.isSmartRepoSupportFeature('EVENT_BASED_PULL_REPLICATION');\n    }\n\n    formatNewPattern(newPattern) {\n        return _.trimLeft(newPattern,'/');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/repository_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class VirtualRepositoryFormController {\n    constructor($scope, RepositoriesDao, parseUrl, JFrogNotifications, ArtifactoryFeatures) {\n        this.$scope = $scope;\n        this.parseUrl = parseUrl;\n        this.gridP2Option = {};\n        this.repositoriesDao = RepositoriesDao;\n        this.notifications = JFrogNotifications;\n        this.artifactoryGridFactory = $scope.RepositoryForm.artifactoryGridFactory;\n        this.repositoryForm = $scope.RepositoryForm;\n        this.virtualRepo = {};\n        this.features = ArtifactoryFeatures;\n        this._createGrid();\n        this._initVirtual();\n\n        this.repositoryForm.isDependencyRewriteOK = this.isDependencyRewriteOK.bind(this);\n    }\n\n    isSigningKeysDisable() {\n        if (this.features.isDisabled(\"signingKeys\")) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    _initVirtual() {\n        if (!this.repositoryForm.newRepository) {\n            if (this.repositoryForm.repoInfo.typeSpecific && this.repositoryForm.repoInfo.typeSpecific.p2Repos) {\n                this.gridP2Option.setGridData(this.repositoryForm.repoInfo.typeSpecific.p2Repos);\n            }\n        }\n        this.repositoriesDao.remoteUrlToRepoMap().$promise.then((result)=> {\n            this.remoteUrlMap = result;\n        });\n    }\n\n    _createGrid() {\n        this.gridP2Option = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getP2Columns())\n                .setRowTemplate('default')\n                .setButtons(this._getActions())\n                .setGridData([]);\n    }\n\n    addP2Local() {\n        let repoToPush = {};\n        let baseUrl = 'local://';\n        if (this.virtualRepo.pathSuffix) {\n            repoToPush.pathSuffix = this.virtualRepo.pathSuffix.startsWith('/') ? this.virtualRepo.pathSuffix.replace(/\\/+/, '') : this.virtualRepo.pathSuffix;\n            repoToPush.repoUrl = baseUrl + this.virtualRepo.localRepoKey + \"/\" + repoToPush.pathSuffix;\n        }\n        else {\n            repoToPush.repoUrl = baseUrl + this.virtualRepo.localRepoKey;\n        }\n        repoToPush.repoKey = this.virtualRepo.localRepoKey;\n        if (this._repoKeyExists(repoToPush.repoKey)) {\n            repoToPush.action = 'included';\n        }\n        else {\n            repoToPush.action = 'include';\n        }\n        this._pushToGrid(repoToPush);\n    }\n\n    _repoKeyExists(repoKey) {\n        let repos = this.repositoryForm.repoInfo.typeSpecific.p2Repos;\n        if (repos) {\n            return _.find(repos, {repoKey: repoKey});\n        }\n        return false;\n    }\n    _repoUrlExists(repoUrl) {\n        let repos = this.repositoryForm.repoInfo.typeSpecific.p2Repos;\n        if (repos) {\n            return _.find(repos, {repoUrl: repoUrl});\n        }\n        return false;\n    }\n\n    addP2Remote() {\n        let indexRepo = 1;\n        let findMatch = false;\n        this.currentRepo = '';\n        _.forOwn(this.remoteUrlMap, (remoteUrl, key) => {\n            if (this.virtualRepo.remoteUrl.startsWith(remoteUrl)) {\n                let action = 'include';\n                if (this._repoKeyExists(key)) {\n                    action = 'included';\n                }\n                if (this._pushToGrid({repoKey: key, repoUrl: this.virtualRepo.remoteUrl, action: action})) {\n                    findMatch = true;\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            }\n        });\n        if (!findMatch) {\n            let fields = this.repositoryForm.fields;\n            let allRepos = fields.availableLocalRepos.concat(fields.availableRemoteRepos).concat(fields.availableVirtualRepos);\n            let parser = this.parseUrl(this.virtualRepo.remoteUrl);\n\n            this.currentRepo = parser.host.replace(':', \"-\");\n\n            if (_.indexOf(allRepos, this.currentRepo) != -1) {\n                let regexp = new RegExp(this.currentRepo + '-.+');\n                let matchingRepos = _.select(allRepos, (repo) => {\n                    return regexp.test(repo);\n                });\n                if (matchingRepos.length) {\n                    let lastMatchingRepo = _.last(matchingRepos.sort());\n                    indexRepo = lastMatchingRepo.substring(lastMatchingRepo.indexOf('-') + 1);\n                    indexRepo = parseInt(indexRepo) + 1;\n                }\n                this.currentRepo = this.currentRepo + \"-\" + indexRepo;\n            }\n\n            this.remoteUrlMap[this.currentRepo] = this.virtualRepo.remoteUrl;\n            this._pushToGrid({repoKey: this.currentRepo, repoUrl: this.virtualRepo.remoteUrl, action: 'create'});\n        }\n    }\n\n    onChangeRepo() {\n        this.repositoriesDao.getResolvedRepositories(\n                this.repositoryForm.repoInfo).$promise.then((resolvedRepositories)=> {\n                    this.repositoryForm.repoInfo.basic.resolvedRepositories = resolvedRepositories;\n                    this.repositoryForm.repoInfo.basic.selectedLocalRepositories = _.pluck(_.filter(this.repositoryForm.repoInfo.basic.resolvedRepositories, (repo)=>{\n                        return repo.type === 'local';\n                    }),'repoName');\n                    this.repositoryForm.repoInfo.basic.selectedRemoteRepositories = _.pluck(_.filter(this.repositoryForm.repoInfo.basic.resolvedRepositories, (repo)=>{\n                        return repo.type === 'remote';\n                    }),'repoName');\n                    if (!_.contains(this.repositoryForm.repoInfo.basic.selectedLocalRepositories,this.repositoryForm.repoInfo.basic.defaultDeploymentRepo)) {\n                        this.repositoryForm.repoInfo.basic.defaultDeploymentRepo = null;\n                    }\n                    this.repositoryForm.repoInfo.basic.selectedLocalRepositories.unshift('');\n                });\n    }\n\n    _pushToGrid(repo) {\n        if (this._repoUrlExists(repo.repoUrl)) {\n            this.notifications.create({error: \"Repo URL already exists in the list\"});\n            return false;\n        }\n        this.repositoryForm.repoInfo.typeSpecific.p2Repos = this.repositoryForm.repoInfo.typeSpecific.p2Repos || [];\n        this.repositoryForm.repoInfo.typeSpecific.p2Repos.push(repo);\n        this.gridP2Option.setGridData(this.repositoryForm.repoInfo.typeSpecific.p2Repos);\n        this.virtualRepo.remoteUrl = '';\n        return true;\n    }\n\n    _deleteRepo(repo) {\n        _.remove(this.repositoryForm.repoInfo.typeSpecific.p2Repos, {repoUrl: repo.repoUrl});\n        this.gridP2Option.setGridData(this.repositoryForm.repoInfo.typeSpecific.p2Repos);\n    }\n\n    isDependencyRewriteRelevant() {\n        return this.repositoryForm.repoInfo.typeSpecific && (this.repositoryForm.repoInfo.typeSpecific.repoType === 'Bower'\n                || this.repositoryForm.repoInfo.typeSpecific.repoType === 'Npm'\n                || this.repositoryForm.repoInfo.typeSpecific.repoType === 'Go');\n    }\n\n    addDependencyRewritePattern() {\n        this.newValue = $('#newPatternField').val();\n        this.errorMessage = null;\n\n        if (_.isEmpty(this.newValue)) {\n            this.errorMessage = \"Must input value\";\n        }\n        //else if (!this._isValueUnique(this.newValue)) {\n        //    this.errorMessage = \"Value already exists\";\n        //}\n        else {\n            this.repositoryForm.repoInfo.typeSpecific.externalPatterns.push(this.newValue);\n            this.newValue = null;\n            $('#newPatternField').val('');\n            //this.invalidateType();\n        }\n    }\n\n    removeDependencyRewritePattern(index) {\n        this.repositoryForm.repoInfo.typeSpecific.externalPatterns.splice(index,1);\n    }\n\n    onDependencyRewriteEnableChange() {\n        if (this.repositoryForm.repoInfo.typeSpecific.enableExternalDependencies) {\n            if (!this.repositoryForm.repoInfo.typeSpecific.externalRemoteRepo && this.repositoryForm.repoInfo.basic.selectedRemoteRepositories) {\n                this.repositoryForm.repoInfo.typeSpecific.externalRemoteRepo = this.repositoryForm.repoInfo.basic.selectedRemoteRepositories[0];\n            }\n            if (!this.repositoryForm.repoInfo.typeSpecific.externalPatterns) {\n                this.repositoryForm.repoInfo.typeSpecific.externalPatterns = ['**'];\n            }\n        }\n    }\n\n    isDependencyRewriteOK() {\n        return (!this.repositoryForm.repoInfo.typeSpecific.enableExternalDependencies || this.repositoryForm.repoInfo.typeSpecific.externalRemoteRepo)\n                || this.repositoryForm.repoInfo.typeSpecific.repoType === 'Go';\n    }\n\n    getP2Columns() {\n        return [\n            {\n                name: 'Action',\n                displayName: 'Action',\n                field: 'action',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.action || \"included\" }}</div>'\n            },\n            {\n                name: 'Repository',\n                displayName: 'Repository',\n                field: 'repoKey',\n                enableCellEdit: `{{row.entity.action === 'create'}}`\n\n            }, {\n                name: 'URL',\n                displayName: 'URL',\n                field: 'repoUrl',\n                enableCellEdit: true\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (repo) => {\n                    this._deleteRepo(repo);\n                }\n            }\n        ];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/virtual_repository_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminRepositoriesLayoutController {\n\n    constructor($scope, $state, JFrogGridFactory, RepositoriesLayoutsDao, uiGridConstants, ArtifactoryFeatures, JFrogModal) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.layoutsDao = RepositoriesLayoutsDao;\n        this.gridOptions = {};\n        this.modal = JFrogModal;\n        this.uiGridConstants = uiGridConstants;\n        this.enableNew = ArtifactoryFeatures.getCurrentLicense() !== 'OSS';\n\n        this._createGrid();\n        this._getLayouts();\n    }\n\n    _createGrid() {\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this.getColumns())\n            .setSingleSelect()\n            .setButtons(this.getActions())\n            .setRowTemplate('default');\n\n    }\n\n\n    _getLayouts() {\n        this.layoutsDao.getLayouts().$promise.then((data)=>{\n            this.gridOptions.setGridData(data);\n        });\n\n    }\n\n    getColumns() {\n        return [\n            {\n                field: \"name\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n\n                },\n                name: \"Name\",\n                displayName: \"Name\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"layout-name\" ui-sref=\"^.repo_layouts.edit({layoutname: row.entity.name,viewOnly: !row.entity.layoutActions.edit})\" ><a href=\"\" class=\"jf-link\">{{row.entity.name}}</a></div>',\n                width: '15%'\n            },\n            {\n                field: \"artifactPathPattern\",\n                name: \"Artifact Path Pattern\",\n                displayName: \"Artifact Path Pattern\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"artifact-pattern\">{{row.entity.artifactPathPattern}}</div>',\n                width: '85%'\n            }\n        ]\n    }\n\n    copyLayout(row) {\n        this.$state.go('^.repo_layouts.new',{copyFrom: row.name});\n    }\n\n    deleteLayout(row) {\n        this.modal.confirm(`Are you sure you want to delete layout '${row.name}?'`).then(()=>{\n            this.layoutsDao.deleteLayout({},{layoutName: row.name}).$promise.then((data)=>{\n                this._getLayouts();\n            });\n        });\n    }\n\n    getActions() {\n        return [\n            {\n                icon: 'icon icon-copy',\n                tooltip: 'Duplicate',\n                callback: (row) => this.copyLayout(row),\n                visibleWhen: (row) => row.layoutActions.copy\n            },\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (row) => this.deleteLayout(row),\n                visibleWhen: (row) => row.layoutActions.delete\n            }\n\n        ];\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/repositories_layouts.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../constants/artifact_tooltip.constant';\n\nexport class AdminRepositoryLayoutFormController {\n    constructor($state,$stateParams, RepositoriesLayoutsDao, ArtifactoryModelSaver) {\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.layoutsDao = RepositoriesLayoutsDao;\n        this.TOOLTIP = TOOLTIP.admin.repositories.layoutsForm;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['layoutData']);\n\n        this.input = {};\n        this.testReply = null;\n        this.regexViewData = null;\n\n        this.testReplyDictionary = {\n            organization: 'Organization',\n            module: 'Module',\n            baseRevision: 'Base Revision',\n            folderIntegrationRevision: 'Folder Integration Revision',\n            fileIntegrationRevision: 'File Integration Revision',\n            classifier: 'Classifier',\n            ext: 'Extension',\n            type: 'Type'\n        };\n\n        this.viewOnly = ($stateParams.viewOnly === true);\n\n        if ($stateParams.layoutname) {\n            this.mode = 'edit';\n            this.layoutName = $stateParams.layoutname;\n            this.title = 'Edit ' + this.layoutName + ' Repository Layout';\n            this._getLayoutData(this.layoutName);\n        }\n        else if ($stateParams.copyFrom) {\n            this.mode = 'create';\n            this.title = 'New Repository Layout';\n            this._getLayoutData($stateParams.copyFrom);\n        }\n        else {\n            this.mode = 'create';\n            this.title = 'New Repository Layout';\n            this.layoutData = {};\n        }\n\n    }\n\n    save() {\n\n        if (this.savePending) return;\n\n        this.savePending = true;\n        if (this.mode == 'edit')\n        {\n            let payload = angular.copy(this.layoutData);\n            delete (payload.repositoryAssociations);\n\n            this.layoutsDao.update({},payload).$promise.then((data)=>{\n                this.savePending = false;\n                this.ArtifactoryModelSaver.save();\n                this.$state.go('^.repo_layouts');\n            }).catch(()=>this.savePending = false);\n        }\n\n        if (this.mode == 'create')\n        {\n            this.layoutsDao.save({},this.layoutData).$promise.then((data)=>{\n                this.savePending = false;\n                this.ArtifactoryModelSaver.save();\n                this.$state.go('^.repo_layouts');\n            }).catch(()=>this.savePending = false);\n        }\n    }\n\n    hasAnyAssoc() {\n        return this.layoutData &&\n               (this.layoutData.repositoryAssociations.localRepositories.length ||\n               this.layoutData.repositoryAssociations.remoteRepositories.length ||\n               this.layoutData.repositoryAssociations.virtualRepositories.length);\n    }\n\n    cancel() {\n        this.$state.go('^.repo_layouts');\n    }\n\n\n    test() {\n        let payload = angular.copy(this.layoutData);\n        delete (payload.repositoryAssociations);\n        _.extend(payload,{pathToTest: this.input.testPath});\n        this.testReply = null;\n\n        this.layoutsDao.testArtifactPath({},payload).$promise.then((data)=>{\n            this.testReply = data.data;\n        });\n    }\n\n    isSaveDisabled() {\n        return this.savePending || !this.layoutForm || this.layoutForm.$invalid;\n    }\n\n    resolveRegex() {\n        let payload = angular.copy(this.layoutData);\n        delete (payload.repositoryAssociations);\n        this.regexViewData = null;\n        this.layoutsDao.resolveRegex({},payload).$promise.then((data)=>{\n            this.regexViewData = data;\n        });\n    }\n\n    gotoEditRepo(type,repo) {\n        this.$state.go('admin.repositories.list.edit',{repoType: type, repoKey: repo});\n    }\n    _getLayoutData(layoutName) {\n        this.layoutsDao.getLayoutData({},{layoutName:layoutName}).$promise.then((data)=>{\n            this.layoutData = data;\n        this.ArtifactoryModelSaver.save();\n            if (this.$stateParams.copyFrom) {\n                this.layoutData.name = '';\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/repositories/repository_layout_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport ConfigDescriptor from \"./config_descriptor/config_descriptor.module\";\nimport Maintenance from \"./maintenance/maintenance.module\";\nimport SecurityDescriptor from \"./security_descriptor/security_descriptor.module\";\nimport StorageSummary from \"./storage_summary/storage_summary.module\";\nimport SystemInfo from \"./system_info/system_info.module\";\nimport SystemLogs from \"./system_logs/system_logs.module\";\nimport SupportPage from \"./support_page/support_page.module\";\nimport LogAnalytics from \"./log_analytics/log_analytics.module\";\nimport {AdminAdvancedController} from \"./advanced.controller\";\n\nfunction advancedConfig($stateProvider) {\n    $stateProvider\n            .state('admin.advanced', {\n                url: '/advanced',\n                template: '<ui-view></ui-view>',\n                controller: 'AdminAdvancedController as AdminAdvanced'\n            })\n}\n\nexport default angular.module('admin.advanced', [\n    ConfigDescriptor.name,\n    Maintenance.name,\n    SecurityDescriptor.name,\n    StorageSummary.name,\n    SystemInfo.name,\n    SystemLogs.name,\n    SupportPage.name,\n    LogAnalytics.name\n])\n        .config(advancedConfig)\n        .controller('AdminAdvancedController', AdminAdvancedController);\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/advanced.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedConfigDescriptorController} from './config_descriptor.controller';\n\nfunction configDescriptorConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.advanced.config_descriptor', {\n                params: {feature: 'configDescriptor'},\n                url: '/config_descriptor',\n                templateUrl: 'states/admin/advanced/config_descriptor/config_descriptor.html',\n                controller: 'AdminAdvancedConfigDescriptorController as ConfigDescriptorController'\n            })\n}\n\nexport default angular.module('advanced.config_descriptor', [])\n        .config(configDescriptorConfig)\n        .controller('AdminAdvancedConfigDescriptorController', AdminAdvancedConfigDescriptorController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/config_descriptor/config_descriptor.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\n\nexport class AdminAdvancedConfigDescriptorController {\n\n    constructor($scope,$timeout, ArtifactoryHttpClient, JFrogNotifications, RESOURCE, ArtifactoryModelSaver, JFrogEventBus) {\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.RESOURCE = RESOURCE;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.artifactoryHttpClient = ArtifactoryHttpClient;\n        this.configDescriptor = '';\n        this.apiAccess = {};\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['configDescriptor']);\n        this.JFrogEventBus = JFrogEventBus;\n\n        this._getData();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this._getData();\n        });\n    }\n\n    _getData() {\n        this.artifactoryHttpClient.get(this.RESOURCE.CONFIG_DESCRIPTOR).then((response) => {\n                this.configDescriptor = response.data;\n        this.ArtifactoryModelSaver.save();\n                this.$timeout(()=> {\n                    this.apiAccess.api.clearHistory();\n                });\n            }\n        );\n    }\n\n    save(configXml) {\n        this.artifactoryHttpClient.put(this.RESOURCE.CONFIG_DESCRIPTOR, {configXml})\n            .then(response => {\n                this.ArtifactoryModelSaver.save();\n                this.artifactoryNotifications.create(response.data);\n            })\n            .catch(response => {\n                if (response.data.errors && response.data.errors.length) {\n                    this.artifactoryNotifications.create(angular.fromJson(response.data.errors[0].message));\n                }\n            });\n    }\n\n    cancel() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this._getData();\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/config_descriptor/config_descriptor.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedMaintenanceController} from './maintenance.controller';\n\nfunction maintenanceConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.advanced.maintenance', {\n                params: {feature: 'maintenance'},\n                url: '/maintenance',\n                templateUrl: 'states/admin/advanced/maintenance/maintenance.html',\n                controller: 'AdminAdvancedMaintenanceController as Maintenance'\n            })\n}\n\nexport default angular.module('advanced.maintenance', [])\n        .config(maintenanceConfig)\n        .controller('AdminAdvancedMaintenanceController', AdminAdvancedMaintenanceController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/maintenance/maintenance.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminAdvancedMaintenanceController {\n    constructor(MaintenanceDao, JFrogNotifications, JFrogEventBus, JFrogModal, ArtifactoryModelSaver) {\n        this.maintenanceDao = MaintenanceDao;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryModal = JFrogModal;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['maintenanceSettings']);\n        this.maintenanceSettings = {};\n        this.TOOLTIP = TOOLTIP.admin.advanced.maintenance;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n        this._getData();\n    }\n\n    _getData() {\n        this.maintenanceDao.get().$promise.then(data => {\n            this.backupMaintance = angular.copy(data);\n            this.maintenanceSettings.cleanUnusedCachedCron = data.cleanUnusedCachedCron;\n            this.maintenanceSettings.cleanVirtualRepoCron = data.cleanVirtualRepoCron;\n            this.maintenanceSettings.garbageCollectorCron = data.garbageCollectorCron;\n            this.maintenanceSettings.quotaControl = data.quotaControl;\n            this.maintenanceSettings.storageLimit = data.storageLimit;\n            this.maintenanceSettings.storageWarning = data.storageWarning;\n        this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    save() {\n        if (this.maintenanceForm.$valid) {\n            this.maintenanceDao.update(this.maintenanceSettings).$promise.then(()=>{\n                this.ArtifactoryModelSaver.save();\n            });\n        }\n    }\n\n    clear() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n            this._getData();\n        });\n    }\n\n    resetQuotaFields() {\n        if (!this.maintenanceSettings.quotaControl) {\n            this.maintenanceSettings.storageLimit = this.backupMaintance.storageLimit;\n            this.maintenanceSettings.storageWarning = this.backupMaintance.storageWarning;\n        }\n    }\n\n    _runAction(name) {\n        this.maintenanceDao.perform({module: name});\n    }\n\n    runGarbageCollection() {\n        this._runAction('garbageCollection');\n    }\n\n    runUnusedCachedArtifactsCleanup() {\n        this._runAction('cleanUnusedCache');\n    }\n\n    compressInternalDatabase() {\n        this.artifactoryModal.confirm('Are you sure you want to compress the internal database?')\n            .then(() => this._runAction('compress'));\n    }\n\n    pruneUnreferencedData() {\n        this._runAction('prune');\n    }\n\n    cleanVirtualRepositories() {\n        this._runAction('cleanVirtualRepo');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/maintenance/maintenance.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedSecurityDescriptorController} from './security_descriptor.controller';\n\nfunction securityDescriptorConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.advanced.security_descriptor', {\n                params: {feature: 'securityDescriptor'},\n                url: '/security_descriptor',\n                templateUrl: 'states/admin/advanced/security_descriptor/security_descriptor.html',\n                controller: 'AdminAdvancedSecurityDescriptorController as SecurityDescriptorController'\n            })\n}\n\nexport default  angular.module('advanced.security_descriptor', [])\n        .config(securityDescriptorConfig)\n        .controller('AdminAdvancedSecurityDescriptorController', AdminAdvancedSecurityDescriptorController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/security_descriptor/security_descriptor.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminAdvancedSecurityDescriptorController {\n    constructor($timeout, ArtifactoryHttpClient, JFrogNotifications, RESOURCE, ArtifactoryModelSaver) {\n        this.artifactoryHttpClient = ArtifactoryHttpClient;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.RESOURCE = RESOURCE;\n        this.$timeout = $timeout;\n        this.securityDescriptor = '';\n        this.apiAccess = {};\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['securityDescriptor']);\n\n        this._getData();\n    }\n\n    _getData() {\n        this.artifactoryHttpClient.get(this.RESOURCE.SECURITY_DESCRIPTOR).then((response) => {\n            this.securityDescriptor = response.data;\n        this.ArtifactoryModelSaver.save();\n            this.$timeout(()=> {\n                this.apiAccess.api.clearHistory();\n            });\n        });\n    }\n\n    save(securityXML) {\n        this.artifactoryHttpClient.put(this.RESOURCE.SECURITY_DESCRIPTOR, {securityXML}).\n            success((response) => {\n            this.ArtifactoryModelSaver.save();\n                    this.artifactoryNotifications.create(response);\n                }\n        )\n            .error((response) => {\n                if (response.errors && response.errors.length) {\n                    this.artifactoryNotifications.create(angular.fromJson(response.errors[0].message));\n                }\n            });\n    }\n\n    cancel() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this._getData();\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/security_descriptor/security_descriptor.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedStorageSummaryController} from './storage_summary.controller';\n\nfunction storageSummaryConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.advanced.storage_summary', {\n                url: '/storage_summary',\n                templateUrl: 'states/admin/advanced/storage_summary/storage_summary.html',\n                controller: 'AdminAdvancedStorageSummaryController as StorageSummaryController'\n            })\n}\n\nexport default angular.module('advanced.storage_summary', [])\n        .config(storageSummaryConfig)\n        .controller('AdminAdvancedStorageSummaryController', AdminAdvancedStorageSummaryController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/storage_summary/storage_summary.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\nimport FIELD_OPTIONS from '../../../../constants/field_options.constats';\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\n\nexport class AdminAdvancedStorageSummaryController {\n    constructor($scope, $timeout, StorageSummaryDao, JFrogGridFactory, uiGridConstants, commonGridColumns, $compile,\n            ArtifactoryFeatures,JFrogEventBus) {\n        this.$scope = $scope;\n        this.$compile = $compile;\n        this.$timeout = $timeout;\n        this.commonGridColumns = commonGridColumns;\n        this.storageSummary = {};\n        this.gridOption = {};\n        this.uiGridConstants = uiGridConstants;\n        this.storageSummaryDao = StorageSummaryDao.getInstance();\n        this.features = ArtifactoryFeatures;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.TOOLTIP = TOOLTIP.admin.advanced.storageSummary;\n        this.counterTooltip = 'List includes all Local and Virtual repositories, and Remote repositories configured to store artifacts locally.'\n        this.binariesKeys = ['binariesSize','binariesCount','artifactsSize','artifactsCount','optimization','itemsCount'];\n        this.JFrogEventBus = JFrogEventBus;\n\n        this.getGridPopulatedWithData();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this.getGridPopulatedWithData();\n        });\n    }\n\n    getGridPopulatedWithData(){\n        this.storageSummaryDao.get().$promise.then((result) => {\n            this.storageSummary = result;\n            // Creates a repository array by running each repo element in the list through the arrow function\n            this.storageSummary.repositoriesSummaryList = _.map(this.storageSummary.repositoriesSummaryList,(row)=>{\n                return this.setRowTemplate(row);\n            });\n\n            this.getStorageTableSummaryData();\n\n            // If grid does not exists - create it , else refresh the grid data\n            if(!this.gridOption.data){\n                this.createGrid();\n            }\n            else {\n                this.gridOption.setGridData(this.storageSummary.repositoriesSummaryList);\n            }\n        });\n    }\n\n    setRowTemplate(row){\n\n        row = this.getStorageTableSummaryTamplate(row);\n\n        row = this.getDataColumns(row);\n\n        row = this.getPackageTypeColumn(row);\n\n        return row;\n    }\n\n    getDataColumns(row){\n        let repoKey = row.repoKey;\n        for (let key in row) {\n            if (key !== '__doNotCount__' && key !== 'percentageDisplay') {\n                row[key] = {value: row[key], repoKey: repoKey, getCtrl: ()=>this};\n            }\n        }\n        return row;\n    }\n\n    getPackageTypeColumn(row){\n        var rowPackageType =_.find(FIELD_OPTIONS.repoPackageTypes, (type) => {\n            return ((type.serverEnumName == row.packageType.value) ||\n            (type.serverEnumName =='YUM' && row.packageType.value == 'RPM'));\n            // The REST for storage has changed and now returns RPM, while other RESTs returns YUM\n        });\n\n        if (rowPackageType) {\n            row.typeIcon = rowPackageType.icon;\n            // set the correct package name (from FIELD_OPTIONS constants)\n            row.packageType.value = rowPackageType.text;\n        }\n\n        if (row.packageType.value === 'Trash') {\n            row.typeIcon = 'trash';\n        }\n\n        if (row.packageType.value === 'Distribution') {\n            row.typeIcon = 'distribution-repo';\n        }\n\n        return row;\n    }\n\n    getStorageTableSummaryTamplate(row,repoKey){\n        if (repoKey==='TOTAL') {\n            row.percentage = 100;\n            row.percentageDisplay = '100%';\n        }\n        else {\n            row.percentage = !_.isNaN(parseFloat(row.percentage)) ? parseFloat(row.percentage) : row.percentage;\n            row.percentageDisplay = _.isNumber(row.percentage) ? row.percentage + '%' : 'N/A';\n        }\n\n        if (row.repoType === 'NA') row.repoType = 'N/A';\n        if (row.packageType === 'NA') row.packageType = 'N/A';\n\n        if (row.repoKey === 'TOTAL' || row.repoKey === 'auto-trashcan') {\n            row['__doNotCount__'] = true;\n            row.packageType = 'N/A';\n            row._specialRow = true;\n        }\n\n        if (row.repoKey === 'auto-trashcan') {\n            row.trashcan = true;\n            row.packageType = 'Trash';\n            row.repoKey = \"Trash Can\";\n        }\n\n        return row;\n    }\n\n    getStorageTableSummaryData(){\n        //This is for assuring that even without sorting, total will always be first and trash will be second\n        let total = _.findWhere(this.storageSummary.repositoriesSummaryList,{repoKey: {value:'TOTAL'}});\n        let trash = _.findWhere(this.storageSummary.repositoriesSummaryList,{repoKey: {value:'Trash Can'}});\n        let totalIndex = this.storageSummary.repositoriesSummaryList.indexOf(total);\n        let trashIndex = this.storageSummary.repositoriesSummaryList.indexOf(trash);\n        this.storageSummary.repositoriesSummaryList.splice(totalIndex,1);\n        this.storageSummary.repositoriesSummaryList.splice(trashIndex,1);\n        this.storageSummary.repositoriesSummaryList.unshift(trash);\n        this.storageSummary.repositoriesSummaryList.unshift(total);\n\n        if (this.storageSummary.fileStoreSummary && this.storageSummary.fileStoreSummary.storageDirectory.indexOf(', ') != -1) {\n            this.storageSummary.fileStoreSummary.storageDirectory = '<div class=\"storage-multiple-mounts\">' + this.storageSummary.fileStoreSummary.storageDirectory.replace(/, /g, '<br>') + '</div>';\n            this.storageSummary.fileStoreSummary.storageType = 'Advanced Configuration';\n        }\n    }\n\n    createGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getColumns())\n                .setGridData(this.storageSummary.repositoriesSummaryList)\n                .setRowTemplate('default');\n\n        this.gridOption.afterRegister((gridApi)=>{\n            gridApi.pagination.on.paginationChanged(this.$scope, (pageNumber, pageSize) => {\n                let specialsToRemove = $('.ui-grid-row.special-row');\n                specialsToRemove.removeClass('special-row');\n                this.$timeout(()=>{\n                    let specials = $('.special-row');\n                    specials.parent().parent().addClass('special-row');\n                    specials.removeClass('special-row')\n                },100)\n            });\n        });\n\n        this.$timeout(()=>{\n            let counterElem = $('.grid-counter');\n            let tooltipElem = $('<jf-help-tooltip html=\"StorageSummaryController.counterTooltip\"></jf-help-tooltip>');\n            counterElem.append(tooltipElem);\n            this.$compile(tooltipElem)(this.$scope);\n\n            let specials = $('.special-row');\n            specials.parent().parent().addClass('special-row');\n            specials.removeClass('special-row')\n\n        })\n    }\n\n    sortGeneral(a,b,column) {\n        let dir = 'asc';\n        let ctrl = a.getCtrl();\n        if (column) {\n            dir = _.findWhere(ctrl.gridOption.api.grid.columns, {field: column}).sort.direction;\n        }\n        if (a.repoKey === 'TOTAL') return dir === 'desc' ? 1 : -1;\n        else if (b.repoKey === 'TOTAL') return dir === 'desc' ? -1 : 1;\n        else if (a.repoKey === 'Trash Can') return dir === 'desc' ? 1 : -1;\n        else if (b.repoKey === 'Trash Can') return dir === 'desc' ? -1 : 1;\n        else return a.value > b.value ? 1 : a.value < b.value ? -1 : 0;\n    }\n\n    sortByteSizes(a,b, column) {\n        let dir = 'asc';\n        let ctrl = a.getCtrl();\n\n        if (column) {\n            dir = _.findWhere(ctrl.gridOption.api.grid.columns, {field: column}).sort.direction;\n        }\n\n        let res = 0;\n        if (a===undefined || b===undefined) return res;\n\n        if (a.repoKey === 'TOTAL') return dir === 'desc' ? 1 : -1;\n        else if (b.repoKey === 'TOTAL') return dir === 'desc' ? -1 : 1;\n        else if (a.repoKey === 'Trash Can') return dir === 'desc' ? 1 : -1;\n        else if (b.repoKey === 'Trash Can') return dir === 'desc' ? -1 : 1;\n        else {\n            var tb = [a.value.match('TB'), b.value.match('TB')],\n                gb = [a.value.match('GB'), b.value.match('GB')],\n                mb = [a.value.match('MB'), b.value.match('MB')],\n                kb = [a.value.match('KB'), b.value.match('KB')]\n\n            res = (tb[0] && !tb[1]) ? 1 : (tb[1] && !tb[0]) ? -1 :\n                      (gb[0] && !gb[1]) ? 1 : (gb[1] && !gb[0]) ? -1 :\n                      (mb[0] && !mb[1]) ? 1 : (mb[1] && !mb[0]) ? -1 :\n                      (kb[0] && !kb[1]) ? 1 : (kb[1] && !kb[0]) ? -1 :\n                      (parseFloat(a.value.match(/[+-]?\\d+(\\.\\d+)?/)[0]) > parseFloat(b.value.match(/[+-]?\\d+(\\.\\d+)?/)[0])) ? 1 : -1\n        }\n\n        return res;\n    }\n\n    getColumns() {\n        return [\n            {\n                field: \"repoKey\",\n                name: \"Repository Key\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'repoKey'),\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"repoKey\">{{row.entity.repoKey.value}}</div>',\n                displayName: \"Repository Key\"\n            },\n            {\n                field: \"repoType\",\n                name: \"Repository Type\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'repoType'),\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"repoType\">{{row.entity.repoType.value}}</div>',\n                displayName: \"Repository Type\"\n            },\n            {\n                field: \"packageType\",\n                name: \"Package Type\",\n                displayName: \"Package Type\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'packageType'),\n                cellTemplate: this.commonGridColumns.iconColumn('row.entity.packageType.value', 'row.entity.typeIcon', 'repo-type-icon')\n            },\n            {\n                field: \"percentage\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\" id=\"storage-precentage\" >{{row.entity.percentageDisplay}}</div>',\n                name: \"Percentage\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'percentage'),\n                displayName: \"Percentage\"\n            },\n            {\n                field: \"usedSpace\",\n                name: \"Used Space\",\n                displayName: \"Artifacts Size\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\" id=\"used-space\" >{{row.entity.usedSpace.value}}</div>',\n                sortingAlgorithm : (a,b)=>this.sortByteSizes(a,b,'usedSpace'),\n                sort: {\n                    direction: this.uiGridConstants.DESC\n                }\n            },\n            {\n                field: \"filesCount\",\n                name: \"Files\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'filesCount'),\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"files\" >  {{row.entity.filesCount.value}}</div>',\n                displayName: \"Files\"\n            },\n            {\n                field: \"foldersCount\",\n                name: \"Folders\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'foldersCount'),\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"folders\" >{{row.entity.foldersCount.value}}</div>',\n                displayName: \"Folders\"\n            },\n            {\n                field: \"itemsCount\",\n                name: \"Items\",\n                sortingAlgorithm : (a,b)=>this.sortGeneral(a,b,'itemsCount'),\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"items\" >{{row.entity.itemsCount.value}}</div>',\n                displayName: \"Items\"\n            }\n\n        ]\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/storage_summary/storage_summary.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedSystemInfoController} from './system_info.controller';\n\n\nfunction systemInfoConfig($stateProvider) {\n    $stateProvider\n            .state('admin.advanced.system_info', {\n                params: {feature: 'systemInfo'},\n                url: '/system_info',\n                templateUrl: 'states/admin/advanced/system_info/system_info.html',\n                controller: 'AdminAdvancedSystemInfoController as SystemInfoController'\n            })\n}\n\nexport default angular.module('advanced.system_info', [])\n        .config(systemInfoConfig)\n        .controller('AdminAdvancedSystemInfoController', AdminAdvancedSystemInfoController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/system_info/system_info.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminAdvancedSystemInfoController {\n    constructor(SystemInfoDao) {\n       // console.log(\"log: \"+SystemInfoDao);\n        this.systemInfoDao = SystemInfoDao.getInstance();\n        let self=this;\n        this.systemInfo;\n        this.systemInfoJoined;\n        this.systemInfoDao.get().$promise.then(function(data){\n            self.getSystemInfoKeys(data);\n        })\n    }\n    getSystemInfoKeys(data) {\n        this.systemInfo = data.systemInfo;\n        this.systemInfoJoined = JSON.stringify(data.systemInfo);\n        //let headers = Object.keys(systemInfo);\n        //let subTitles = [];\n    }\n\n    replaceNewLines(text) {\n        return text.replace(/\\n/g, \"<br>\");\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/system_info/system_info.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedSystemLogsController} from './system_logs.controller';\n\nfunction systemLogsConifg($stateProvider) {\n\n    $stateProvider\n            .state('admin.advanced.system_logs', {\n                url: '/system_logs',\n                templateUrl: 'states/admin/advanced/system_logs/system_logs.html',\n                controller: 'AdminAdvancedSystemLogsController as SystemLogsController'\n            })\n}\n\nexport default angular.module('advanced.system_logs', [])\n        .config(systemLogsConifg)\n        .controller('AdminAdvancedSystemLogsController', AdminAdvancedSystemLogsController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/system_logs/system_logs.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport API from '../../../../constants/api.constants';\n\nexport class AdminAdvancedSystemLogsController {\n    constructor($scope, SystemLogsDao, $interval, $window, $timeout) {\n\n        this.logsDao = SystemLogsDao;\n        this.$interval = $interval;\n        this.$window = $window;\n        this.$timeout = $timeout;\n\n        this.intervalPromise = null;\n        this.timeoutSpinner = null;\n        this.timeCount = 5;\n\n        this._getInitialData();\n\n        $scope.$on('$destroy', ()=> {\n            this.stopTimeout();\n            this.stopInterval();\n        });\n    }\n\n    _getInitialData() {\n        this.logsDao.getLogs().$promise.then((data)=> {\n            this.refreshRateSecs = data.refreshRateSecs;\n            this.logs = _.map(data.logs, (logName)=>{return {logName:logName}});\n            this.selectedLog = this.logs[0].logName;\n            this.data = {fileSize: 0};\n            this._getLogData();\n        });\n    }\n\n    _getLogData() {\n        this.stopInterval();\n\n        this.logsDao.getLogData({id: this.selectedLog, fileSize: this.data.fileSize, $no_spinner: true}).$promise.then((data)=> {\n            this.stopTimeout();\n\n            if (this.data.fileSize === 0) {\n                this.$timeout(()=> {\n                    var textarea = document.getElementById('textarea');\n                    textarea.scrollTop = textarea.scrollHeight;\n                });\n            }\n\n            if (data.fileSize)\n                this.data = data;\n\n            this.timeCount = this.refreshRateSecs;\n            if (!this.intervalPromise && !this.paused)\n                this.startInterval();\n        });\n\n        this.timeoutSpinner = this.$timeout(() => {\n            this.timeCount--;\n        }, 400);\n    }\n\n    download() {\n        this.$window.open(`${API.API_URL}/systemlogs/downloadFile?id=`+this.selectedLog, '_blank');\n    }\n\n\n    onChangeLog() {\n        this.stopInterval();\n        this.data = {fileSize: 0};\n        this._getLogData();\n    }\n\n    startInterval() {\n        this.intervalPromise = this.$interval(()=> {\n            if (this.timeCount == 0)\n                this._getLogData();\n            else\n                this.timeCount--;\n        }, 1000);\n    }\n\n    stopInterval() {\n        if (this.intervalPromise) {\n            this.$interval.cancel(this.intervalPromise);\n            this.intervalPromise = null;\n        }\n    }\n\n    stopTimeout() {\n        if (this.timeoutSpinner) {\n            this.$timeout.cancel(this.timeoutSpinner);\n            this.timeoutSpinner = null;\n        }\n    }\n\n    togglePause() {\n        this.paused = !this.paused;\n        if (this.paused) {\n            this.stopInterval();\n            this.stopTimeout();\n        }\n        else {\n            this.startInterval();\n        }\n    }\n    getPauseLinkText() {\n        return this.paused ? 'Resume' : 'Pause';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/system_logs/system_logs.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedSupportPageController} from './support_page.controller';\n\n\nfunction supportPageConfig($stateProvider) {\n    $stateProvider\n            .state('admin.advanced.support_page', {\n                params: {feature: 'supportPage'},\n                url: '/support_page',\n                templateUrl: 'states/admin/advanced/support_page/support_page.html',\n                controller: 'AdminAdvancedSupportPageController as SupportPage'\n            })\n}\n\nexport default angular.module('advanced.support_page', [])\n        .config(supportPageConfig)\n        .controller('AdminAdvancedSupportPageController', AdminAdvancedSupportPageController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/support_page/support_page.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AdminAdvancedSupportPageController {\n    constructor(SupportPageDao, ServerTimeDao, $timeout, $scope, JFrogIFrameDownload, GeneralConfigDao, RESOURCE, JFrogNotifications, $compile, JFrogModal) {\n\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.$compile = $compile;\n        this.supportPageDao = SupportPageDao;\n        this.serverTimeDao = ServerTimeDao;\n        this.iFrameDownload = JFrogIFrameDownload;\n        this.RESOURCE = RESOURCE;\n        this.TOOLTIP = TOOLTIP.admin.advanced.supportPage;\n        this.CONFIG_MESSAGES = CONFIG_MESSAGES.admin.advanced.supportZone;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.modal = JFrogModal;\n\n        this.ready = false;\n\n        this.timePeriodConfig = {\n            maxItems: 1,\n            create: false\n        };\n\n        GeneralConfigDao.get().$promise.then((data)=> {\n            this.dateFormat = this._getDatePartFromFormat(data.dateFormat);\n            this._init();\n        });\n    }\n\n\n    _init() {\n        this.serverTimeDao.get().$promise.then((serverTimeResource)=>{\n            let serverTime = \"\";\n            let json = serverTimeResource.toJSON();\n            for (let i=0;i<Object.keys(json).length;i++) {\n                serverTime += json[i];\n            }\n            serverTime = parseInt(serverTime);\n            let miliDiff = serverTime - (new Date()).getTime();\n            let hourDiff = Math.round(miliDiff/(1000*60*60));\n            this.timeDiff = hourDiff*1000*60*60;\n            this._getOldBundles();\n            this.ready = true;\n        });\n\n        let localNow = new Date();\n        let today = this.today = new Date(localNow.getFullYear(), localNow.getMonth(), localNow.getDate());\n        let minDate = this.minDate = new Date(today.getTime()-14*24*60*60*1000);\n\n        this.setup = {\n            hideUserDetails: true,\n            systemLogsConfiguration : {\n                enabled: true,\n                startDate: new Date(today.getTime()-2*24*60*60*1000),\n                endDate: today\n            },\n            systemInfoConfiguration : {\n                enabled : true\n            },\n            securityInfoConfiguration : {\n                enabled : true\n            },\n            configDescriptorConfiguration : {\n                enabled : true\n            },\n            configFilesConfiguration : {\n                enabled : true\n            },\n            storageSummaryConfiguration : {\n                enabled : true\n            },\n            threadDumpConfiguration : {\n                enabled : true,\n                count: 1,\n                interval: 0\n            }\n        };\n\n\n        let basicDatePickerOptions = {format : this.dateFormat, maxDate: this.today, toolbarPlacement: 'bottom'};\n\n\n        this.toDateOptions = basicDatePickerOptions;\n        this.fromDateOptions = basicDatePickerOptions;\n\n\n        if (this.setup.systemLogsConfiguration.startDate.getTime() > this.setup.systemLogsConfiguration.endDate.getTime()) {\n            this.setup.systemLogsConfiguration.endDate = new Date(this.setup.systemLogsConfiguration.startDate);\n            this.setup.systemLogsConfiguration.startDate = new Date(this.setup.systemLogsConfiguration.endDate);\n\n            this.toDate = this.setup.systemLogsConfiguration.endDate;\n            this.fromDate = this.setup.systemLogsConfiguration.startDate;\n        }\n        this.timePeriodOptions = [\n            {text: \"Last 24 Hours\", value: 1},\n            {text: \"Last 3 Days\", value: 3},\n            {text: \"Last 5 Days\", value: 5},\n            {text: \"Last 7 Days\", value: 7},\n            {text: \"Custom Dates\", value: 'CUSTOM'}\n        ];\n\n        this.timePeriodSelection = 1;\n\n    }\n\n    _getOldBundles() {\n        this.supportPageDao.listBundles().$promise.then((data)=>{\n            this.oldBundles = _.filter(data,(obj)=>{\n                return typeof obj === 'string';\n            });\n            this.oldBundles = _.map(this.oldBundles,(filename)=>{\n                let filenameNoExt=filename.split('.')[0];\n                let time=parseInt(filenameNoExt.split('-')[filenameNoExt.split('-').length-1]) - this.timeDiff;\n                return {\n                    filename: filename,\n                    date: (new Date(time)).toString()\n                }\n            })\n        });\n    }\n\n    onChangeTimePeriod() {\n        if (this.timePeriodSelection !== \"CUSTOM\") {\n            this.setup.systemLogsConfiguration.endDate = this.toDate = this.today;\n            this.setup.systemLogsConfiguration.startDate = this.fromDate =  new Date(this.today.getTime() - (this.timePeriodSelection-1) *24*60*60*1000);\n\n        } else if(!this.onChange) {\n            this.onChange = (data) => {\n\n                this.toDate = new Date(this.toDate);\n\n                switch (data.state) {\n                    case 'fromDate':\n                        this.fromDate = this.setup.systemLogsConfiguration.startDate = new Date(this.fromDate);\n                        if(Date.parse(this.fromDate) > Date.parse(this.toDate)) {\n                            this.toDate = this.setup.systemLogsConfiguration.endDate = new Date(this.fromDate);\n                        }\n                        break;\n                    case 'toDate':\n                        this.toDate = this.setup.systemLogsConfiguration.endDate = new Date(this.toDate);\n                        if(Date.parse(this.fromDate) > Date.parse(this.toDate)) {\n                            this.fromDate = this.setup.systemLogsConfiguration.startDate = new Date(this.toDate);\n                        }\n                        break;\n                }\n\n            }\n        }\n    }\n\n    download(link) {\n        this.iFrameDownload(link);\n    }\n\n    downloadOld(filename) {\n        let url = this.RESOURCE.API_URL + '/userSupport/downloadBundle/' + filename;\n        this.iFrameDownload(url);\n    }\n\n    deleteOld(filename) {\n        this.modal.confirm(`Are you sure you want to delete this bundle?`)\n                .then(() => {\n                    this.supportPageDao.deleteBundle({}, {filename: filename}).$promise.then((resp)=> {\n                        this._getOldBundles();\n                    })\n                });\n    }\n\n    create() {\n        let payload = angular.copy(this.setup);\n        if (this.timePeriodSelection != 1) {\n            payload.systemLogsConfiguration.startDate = payload.systemLogsConfiguration.startDate.getTime() + this.timeDiff;\n            payload.systemLogsConfiguration.endDate = payload.systemLogsConfiguration.endDate.getTime() + this.timeDiff + 24*60*60*1000;\n        }\n        else {\n            payload.systemLogsConfiguration.endDate = (new Date()).getTime() + this.timeDiff;\n            payload.systemLogsConfiguration.startDate = payload.systemLogsConfiguration.endDate - 24*60*60*1000;\n        }\n\n        payload.configDescriptorConfiguration.hideUserDetails = this.setup.hideUserDetails;\n        payload.securityInfoConfiguration.hideUserDetails = this.setup.hideUserDetails;\n        payload.configFilesConfiguration.hideUserDetails = this.setup.hideUserDetails;\n\n        delete payload.hideUserDetails;\n\n        this.supportPageDao.generateBundle({},payload).$promise.then((files)=>{\n            if (files.length) {\n                //this.downloadLinks = files;\n                this.artifactoryNotifications.createMessageWithHtml({\n                    type: 'success',\n                    body: 'Successfully created support information <a href id=\"link-in-toaster\" ng-click=\"SupportPage.download(\\''+files[0]+'\\')\">bundle</a>',\n                    timeout: 10000\n                });\n                this.$timeout(()=>{\n                    let elem = angular.element($('#link-in-toaster'));\n                    this.$compile(elem)(this.$scope);\n\n                })\n            }\n            this._getOldBundles();\n        });\n    }\n\n    _getDatePartFromFormat(format) {\n        let parts = this._breakFormat(format);\n\n        let currContext = 'U';  //U = Unkown D = Date T = Time\n        let unknowns = [];\n\n        let gotMonth = false;\n        for (let i in parts) {\n            let part = parts[i];\n\n            if (_.contains('dy',part.char)) {\n                part.context = 'D';\n            }\n            else if (_.contains('hs',part.char)) {\n                part.context = 'T';\n            }\n            else if (part.char === 'm') {\n                if (gotMonth) currContext = 'U';\n                part.context = !gotMonth && currContext === 'D' ? 'D' :'U';\n                unknowns.push(part);\n            }\n            if (part.context) currContext = part.context;\n            if (currContext !== 'U' && unknowns.length) {\n                for (let i in unknowns) {\n                    unknowns[i].context = currContext;\n                    if (currContext === 'D') gotMonth = true;\n                }\n                unknowns = [];\n            }\n        }\n\n        let insideDate=false;\n        let justDate = [];\n        for (let i in parts) {\n            let part = parts[i];\n            if (part.context === 'D') {\n                insideDate = true;\n            }\n            else if (part.context === 'T') {\n                insideDate = false;\n            }\n            if (insideDate) justDate.push(part);\n        }\n\n        let trim = 0;\n        for (let i = justDate.length - 1; i>=0; i--) {\n            let part = parts[i];\n            if (part.context) {\n                break;\n            }\n            else justDate.pop();\n        }\n\n        let finalResult = '';\n        for (let i in justDate) {\n            let part = justDate[i];\n            finalResult += part.precise;\n        }\n\n        return moment().toMomentFormatString(finalResult);\n\n\n    }\n    _breakFormat(format) {\n        let parts = [];\n        while (format.length) {\n            let part = this._getNextFormatPart(format);\n            parts.push(part);\n            format = format.substr(part.count);\n        }\n        return parts;\n    }\n\n    _getNextFormatPart(format) {\n        let temp = format.toLowerCase();\n        let char = temp.charAt(0);\n        let count = 0;\n        while (temp.charAt(0) === char) {\n            count++;\n            temp = temp.substr(1);\n        }\n        let precise = format.substr(0,count);\n        return {\n            char: char,\n            count: count,\n            precise: precise\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/support_page/support_page.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminAdvancedLogAnalyticsController} from \"./log_analytics.controller\";\n\nfunction logAnalyticsConfig($stateProvider) {\n    $stateProvider\n            .state('admin.advanced.log_analytics', {\n                url: '/log_analytics',\n                templateUrl: 'states/admin/advanced/log_analytics/log_analytics.html',\n                controller: 'AdminAdvancedLogAnalyticsController as LogAnalytics'\n            })\n}\n\nexport default angular.module('advanced.log_analytics', [])\n        .config(logAnalyticsConfig)\n        .controller('AdminAdvancedLogAnalyticsController', AdminAdvancedLogAnalyticsController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/log_analytics/log_analytics.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\nimport MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\n/*\n* TODO:\n* - if proxy is change or on load thre's default proxy - update the model\n* */\nexport class AdminAdvancedLogAnalyticsController {\n\n    constructor(SumoLogicConfigDao, $scope, $state, $location, $timeout, $interval, $window, JFrogModal, ArtifactoryModelSaver, ProxiesDao) {\n        this.sumoLogicConfigDao = SumoLogicConfigDao;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$location = $location;\n        this.$timeout = $timeout;\n        this.$interval = $interval;\n        this.$window = $window;\n        this.modal = JFrogModal;\n        this.proxiesDao = ProxiesDao;\n        this.artifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['sumologic']);\n        this.enableExistingSettings = false;\n        this.TOOLTIP = TOOLTIP.admin.logAnalytics;\n        this.MESSAGES = MESSAGES.admin.advanced.logAnalytics;\n        this.getSumoLogicData(false,true);\n        this.proxies = [\"\"];\n\n        this.proxiesDao.get().$promise.then((proxies)=> {\n            _.forEach(proxies, (o) => {\n                this.proxies.push(o.key);\n                if (o.defaultProxy && !this.proxy) {\n                    this.proxy = o.key;\n                }\n            });\n        });\n    }\n\n    disabledIntegration() {\n        if (this.enableExistingSettings === false) {\n                this.modal.confirm(\"If disabled, logs will not be sent to your Sumo Logic account. <br /> You can enable the integration for this instance later. <br /><br /> Are you sure you want to disable the integration for this instance?\", 'Disable Sumo Logic Integration', {confirm: 'Disable'})\n                    .then(()=> {\n                        this.cancelInterval();\n                        this.enableDisableSumoLogic(false);\n                    }).catch(() => {\n                        this.enableExistingSettings = !this.enableExistingSettings;\n                    });\n        } else {\n            if (!this.sumologic.email) {\n                this.modal.confirm('To enable the Sumo Logic integration, you must provide Artifactory with your email address by adding it to your User Profile.', 'Email address required', {confirm: 'Go to User Profile'})\n                    .then(()=> {\n                        this.$state.go('user_profile');\n                    }).catch(() => {\n                        this.enableExistingSettings = !this.enableExistingSettings;\n                    });\n            } else {\n                if(this.sumologic.clientId && this.sumologic.secret) {\n                this.modal.confirm('If enabled, your logs will be populated and sent to your Sumo Logic Artifactory dashboard. <br /><br /> Are you sure you want to enable the integration for this instance?', 'Enable Sumo Logic Integration', {confirm: 'Enable'})\n                    .then(()=> {\n                        this.enableDisableSumoLogic(true);\n                    }).catch(() => {\n                        this.enableExistingSettings = !this.enableExistingSettings;\n                    });\n                } else {\n                    this.enableDisableSumoLogic(true);\n                }\n            }\n        }\n    }\n\n    enableDisableSumoLogic(action) {\n        this.sumologic.enabled = action;\n        this.updateModel();\n    }\n\n    changeListener() {\n        if (this.connectionMethod === 'existing') {\n            this.disableRegisterButton = false;\n        }\n    }\n\n    requireAuth() {\n        return this.sumologic.clientId != this.origSumologicData.clientId || this.sumologic.secret != this.origSumologicData.secret;\n    }\n\n    changeConnectionMethod(value) {\n        if (value === 'new') {\n            if (this.sumologic.dashboardUrl || this.isPullingRunning) {\n                this.modal.confirm(\"Creating a new connection will disconnect the current connection. When you access your dashboard with a new connection for the first time, a new Client ID and Secret will be created. <br /><br />Are you sure you want to create a new connection?\", 'Create New Connection with Sumo Logic', {confirm: 'Create'})\n                    .then(()=> {\n                        this.cancelInterval();\n                        this.sumoLogicConfigDao.reset().$promise.then((sumologic) => {\n                            this.connectionMethod = 'new';\n                            this.statusConnected = false;\n                            this.disableRegisterButton = false;\n                            this.sumologic = sumologic;\n                            this.artifactoryModelSaver.save();\n                        }).catch(() => {\n                            this.cancelInterval();\n                        });\n\n\n                    }).catch(() => {\n                    this.connectionMethod = 'existing';\n                });\n\n            } else {\n                this.sumologic.clientId = null;\n                this.sumologic.secret = null;\n            }\n        }\n    }\n\n    registerSumoLogicApplication() {\n        this.disableRegisterButton = true;\n        this.sumologic.dashboardUrl = null;\n        this.sumoLogicConfigDao.registerSumoLogicApplication().$promise.then(() => {\n            this.getSumoLogicData(true);\n            if (!angular.isDefined(this.getDataInterval)) {\n                this.getDataInterval = this.$interval(() => {\n                    this.isPullingRunning = true;\n                    this.getSumoLogicData();\n                }, 5000);\n            }\n        }).catch(() => {\n            this.cancelInterval();\n        });\n    }\n\n    authenticateWithSumo(setupNewConnection) {\n        this.sumologic.dashboardUrl = null;\n        let setupTypeSuffix = setupNewConnection ? '/new_app' : '/existing_app';\n        let redirectUrl = encodeURIComponent(this.sumologic.redirectUrl + setupTypeSuffix);\n        let email = this.sumologic.email;\n        let url = this.sumologic.sumoBaseUrl + '/partner/oauth/authorize?response_type=code&email=' + encodeURIComponent(email)\n            + '&license_type=' + this.sumologic.licenseType + '&client_id=' + this.sumologic.clientId + '&redirect_uri=' + redirectUrl + '';\n\n        var popup = this.$window.open(url, \"_blank\");\n\n        if (!angular.isDefined(this.getDataInterval)) {\n            this.getDataInterval = this.$interval(() => {\n                this.isPullingRunning = true;\n                this.getSumoLogicData();\n            }, 5000);\n        }\n\n\n        this.$timeout(() => {\n            if(!popup || popup.outerHeight === 0) {\n                let modalScope = this.$scope.$new();\n                modalScope.url = url;\n                this.modalInstance = this.modal.launchModal(\"popup_block_notice\", modalScope ,'sm');\n            }\n        }, 100);\n    }\n    \n    getSumoLogicData(setupNewConnection, firstLoad) {\n        this.sumoLogicConfigDao.get().$promise.then((sumologic)=> {\n            this.sumologic = sumologic;\n            this.origSumologicData = {\n                \"clientId\" : this.sumologic.clientId,\n                \"secret\" : this.sumologic.secret\n            };\n            this.enableExistingSettings = this.sumologic.enabled;\n\n            if (this.sumologic.dashboardUrl) {\n                this.cancelInterval();\n                if (firstLoad && this.enableExistingSettings) {\n                    this.sumoLogicConfigDao.refreshToken().$promise.then((refreshResponseData)=> {\n                        this.sumologic.dashboardUrl = refreshResponseData.dashboardUrl;\n                        this.statusConnected = true;\n                        this.updateModel();\n                    }).catch(() => {\n                        if (angular.isDefined(this.getDataInterval)) {\n                            this.$interval.cancel(this.getDataInterval);\n                        }\n                    });\n                }\n\n            }\n\n            if (this.sumologic.clientId || this.sumologic.secret) {\n                this.connectionMethod = 'existing';\n            } else {\n                this.connectionMethod = 'new';\n            }\n\n            if (setupNewConnection) {\n                this.authenticateWithSumo(true);\n                this.updateModel();\n            }\n            this.artifactoryModelSaver.save();\n        }).catch(() => {\n            this.cancelInterval();\n        });\n    }\n    cancelInterval() {\n        if (angular.isDefined(this.getDataInterval)) {\n            this.isPullingRunning = false;\n            this.$interval.cancel(this.getDataInterval);\n            delete this.getDataInterval;\n        }\n    }\n    updateProxy() {\n        this.updateModel();\n    }\n    updateModel() {\n        this.sumoLogicConfigDao.update(this.sumologic).$promise.then(()=> {\n            this.artifactoryModelSaver.save();\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/log_analytics/log_analytics.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminAdvancedController {\n\n  constructor () {\n    var AdminAdvanced = this;\n    AdminAdvanced.stateUrl = '/advanced';\n    AdminAdvanced.controllerName = 'AdminAdvancedController'\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/advanced/advanced.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nfunction dashboardConfig($stateProvider) {\n    $stateProvider\n            .state('admin.dashboard', {\n                url: '/dashboard',\n                templateUrl: 'states/admin/dashboard/dashboard.html'\n            })\n}\n\nexport default angular.module('admin.dashboard', [])\n        .config(dashboardConfig)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/dashboard/dashboard.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Repositories from './repositories/repositories.module';\nimport System from './system/system.module';\n\nimport {AdminImportExportController} from './import_export.controller';\n\nfunction importExportConfig($stateProvider) {\n    $stateProvider\n            .state('admin.import_export', {\n                url: '/import_export',\n                template: '<ui-view></ui-view>',\n                controller: 'AdminImportExportController as AdminImportExport'\n            })\n}\n\nexport default angular.module('admin.import_export', [\n    Repositories.name,\n    System.name\n])\n        .config(importExportConfig)\n        .controller('AdminImportExportController', AdminImportExportController);\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/import_export/import_export.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ImportExportRepositoriesController} from './repositories.controller';\n\n\nfunction repositoriesConfig($stateProvider) {\n    $stateProvider\n            .state('admin.import_export.repositories', {\n                params: {feature: 'repositories'},\n                url: '/repositories',\n                templateUrl: 'states/admin/import_export/repositories/repositories.html',\n                controller: 'ImportExportRepositoriesController as Repositories'\n            })\n}\n\nexport default angular.module('import_export.repositories', [])\n        .config(repositoriesConfig)\n        .controller('ImportExportRepositoriesController', ImportExportRepositoriesController)\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/import_export/repositories/repositories.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport API from '../../../../constants/api.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class ImportExportRepositoriesController {\n    constructor($scope, BrowseFilesDao, ExportDao, ImportDao, JFrogNotifications, FileUploader, RepoDataDao, JFrogEventBus) {\n        this.$scope = $scope;\n        this.repoDataDao = RepoDataDao;\n        this.browseFilesDao = BrowseFilesDao.getInstance();\n        this.JFrogEventBus = JFrogEventBus;\n        this.FileUploader = FileUploader;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n        this.exportDao = ExportDao;\n        this.importDao = ImportDao;\n        this.TOOLTIP = TOOLTIP.admin.import_export.repositories;\n\n\n        this.exportFileBrowserOptions = {\n            canSelectFiles: false,\n            selectionLabel: 'Directory To Export',\n            pathLabel: 'Path to export',\n            confirmButtonLabel: 'Select',\n            showSelectedItem: true,\n            enableSelectedItem: true\n        };\n        this.importFileBrowserOptions = {\n            canSelectFiles: false,\n            selectionLabel: 'Directory To Import',\n            pathLabel: 'Path to import',\n            confirmButtonLabel: 'Select',\n            showSelectedItem: true,\n            enableSelectedItem: false\n        };\n\n        this.uploadZip = {};\n        this.uploadSuccess = false;\n        this.exportOptions = {\n            action: 'repository',\n            repository: 'All Repositories',\n            path: '',\n            excludeMetadata: false,\n            m2: false,\n            verbose: false\n        };\n        this.importOptions = {\n            action: 'repository',\n            repository: 'All Repositories',\n            path: '',\n            excludeMetadata: false,\n            verbose: false\n        };\n        this.zipOptions = {\n            action: 'repository',\n            repository: 'All Repositories',\n            path: '',\n            verbose: false\n        };\n        this.artifactoryNotifications = JFrogNotifications;\n        this._initImportExportRepo();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this.getAllReposList();\n        });\n    }\n\n    _getRootPath() {\n        this.browseFilesDao.query({path: '/'}).$promise.then((result)=> {\n            if (result) {\n                this.rootPath = result.roots[0] || '/';\n                this.roots = result.roots;\n            }\n        });\n    }\n\n    getAllReposList(){\n        this.repoDataDao.getForBackup().$promise.then((result) => {\n            this.reposList = _.sortBy(result.repoList,(repo) => repo);\n            this.reposList.unshift('All Repositories');\n        });\n    }\n\n    _initImportExportRepo() {\n        this.uploader = new this.FileUploader();\n        this.uploader.url = `${API.API_URL}/artifactimport/upload`;\n        this.uploader.headers = {'X-Requested-With': 'artUI'};\n        this.uploader.onSuccessItem = this.onUploadSuccess.bind(this);\n        this.uploader.onErrorItem = this.onUploadError.bind(this);\n        this.uploader.onAfterAddingFile = this.onAddingfile.bind(this);\n\n        this.uploader.removeAfterUpload = true;\n        this.getAllReposList();\n\n        this._getRootPath();\n    }\n\n    onUploadError(fileDetails, response) {\n        this.artifactoryNotifications.create(response);\n    }\n\n    onUploadSuccess(fileDetails, response) {\n        this.uploadSuccess = true;\n        this.zipOptions.path = response.path;\n    }\n\n    onAddingfile(fileItem) {\n        if (fileItem.file.size < 0) {\n            fileItem.okToUploadFile = false;\n            this.uploader.removeFromQueue(fileItem);\n        }\n        else {\n            fileItem.okToUploadFile = true;\n        }\n    }\n\n    updateExportFolderPath(directory) {\n        this.exportOptions.path = directory;\n    }\n\n    updateImportFolderPath(directory) {\n        this.importOptions.path = directory;\n    }\n\n    clearValidations() {\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n    }\n\n    export(form) {\n        let self = this;\n        if (form.$valid) {\n            let ok = false;\n            for (let i in this.roots) {\n                let root = this.roots[i];\n                if (_.startsWith(this.exportOptions.path.toUpperCase(), root)) {\n                    ok = true;\n                    break;\n                }\n            }\n            if (!ok) {\n                this.exportOptions.path = this.defaultRoot + this.exportOptions.path;\n            }\n            this.exportDao.save(this.exportOptions);\n        }\n    }\n\n\n    import(form) {\n        if (form.$valid) {\n            this.importDao.save(this.importOptions);\n        }\n    }\n\n    importUploadZip() {\n        let importDetails = {\n            path: this.zipOptions.path,\n            verbose: this.zipOptions.verbose,\n            repository: this.zipOptions.repository,\n            zip: true\n        };\n        this.importDao.save({action: 'repository'}, importDetails).$promise\n            .finally(() => this.uploadSuccess = false);\n    }\n\n    upload() {\n        if (this.uploader.queue[0]) this.uploader.queue[0].upload();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/import_export/repositories/repositories.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminImportExportSystemController} from './system.controller';\n\nfunction systemConfig($stateProvider) {\n    $stateProvider\n            .state('admin.import_export.system', {\n                url: '/system',\n                templateUrl: 'states/admin/import_export/system/system.html',\n                controller: 'AdminImportExportSystemController as SystemController'\n            })\n}\n\nexport default angular.module('import_export.system', [])\n        .config(systemConfig)\n        .controller('AdminImportExportSystemController', AdminImportExportSystemController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/import_export/system/system.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminImportExportSystemController {\n    constructor(BrowseFilesDao, ExportDao, ImportDao, JFrogNotifications, JFrogModal, JFrogEventBus) {\n        this.browseFilesDao = BrowseFilesDao.getInstance();\n        this.JFrogEventBus = JFrogEventBus;\n        this.systemExportDao = ExportDao;\n        this.systemImportDao = ImportDao;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.modal = JFrogModal;\n        this.TOOLTIP = TOOLTIP.admin.import_export.system;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n        this.exportFileBrowserOptions = {\n            canSelectFiles: false,\n            selectionLabel: 'Directory To Export',\n            pathLabel: 'Path to export',\n            confirmButtonLabel: 'Select',\n            showSelectedItem: true,\n            enableSelectedItem: true\n        };\n        this.importFileBrowserOptions = {\n            canSelectFiles: true,\n            selectionLabel: 'Directory Or Zip File To Import',\n            pathLabel: 'Path to import',\n            confirmButtonLabel: 'Select',\n            showSelectedItem: true,\n            enableSelectedItem: false\n        };\n\n\n        this.exportOptions = {\n            path: '',\n            excludeContent: false,\n            excludeMetadata: false,\n            m2: false,\n            createArchive: false,\n            verbose: false\n        };\n\n        this.importOptions = {\n            path: '',\n            excludeContent: false,\n            excludeMetadata: false,\n            verbose: false\n        };\n\n        this._getRootPath();\n    }\n\n    _getRootPath() {\n        this.browseFilesDao.query({path: '/'}).$promise.then((result) => {\n            if (result) {\n                this.defaultRootPath = result.roots[0] || '/';\n                this.roots = result.roots;\n            }\n        });\n    }\n\n    clearValidations() {\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n    }\n\n    updateImportFolderPath(directory) {\n        this.importOptions.path = directory;\n    }\n\n    updateExportFolderPath(directory) {\n        this.exportOptions.path = directory;\n    }\n\n    import() {\n        if (this.importForm.$valid) {\n            this.confirmImport();\n        }\n    }\n\n    doImport() {\n        this.importOptions.zip = _.endsWith(this.importOptions.path, '.zip');\n        this.importOptions.action = \"system\";\n        this.systemImportDao.save(this.importOptions).$promise.then((response) => {\n            if (response.data.errors) {\n                this.artifactoryNotifications.create({error: 'The import has failed. Check Artifactory logs for details.'});\n            }\n        });\n    }\n\n    export() {\n        if (this.exportForm.$valid) {\n            let ok = false;\n            for (let i in this.roots) {\n                let root = this.roots[i];\n                if (_.startsWith(this.exportOptions.path.toUpperCase(), root)) {\n                    ok = true;\n                    break;\n                }\n            }\n            if (!ok) {\n                this.exportOptions.path = this.defaultRootPath + this.exportOptions.path;\n            }\n            this.exportOptions.action = \"system\";\n            this.systemExportDao.save(this.exportOptions).$promise.then((res)=>{\n                if (res.status = 200) {\n                    document.querySelector('#export-path').focus();\n                    this.exportOptions.path = '';\n                }\n            });\n        }\n    }\n\n    confirmImport() {\n        this.modal.confirm('Full system import deletes all existing Artifactory content. <br /> Are you sure you want to continue?')\n                .then(() => this.doImport());\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/import_export/system/system.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminImportExportController {\n  constructor () {\n    var AdminImportExport = this;\n    AdminImportExport.stateUrl = '/import_export';\n    AdminImportExport.controllerName = 'AdminImportExportController'\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/import_export/import_export.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport General from './general/general.module';\nimport Groups from './groups/groups.module';\nimport HttpSso from './http_sso/http_sso.module';\nimport SshServer from './ssh_server/ssh_server.module';\nimport Permissions from './permissions/permissions.module';\nimport Users from './users/users.module';\nimport Saml from './saml_integration/saml_integration.module';\nimport CrowdIntegration from './crowd_integration/crowd_integration.module';\nimport OAuth from './oauth/oauth.module';\nimport LdapSettings from './ldap_settings/ldap_settings.module';\nimport SigningKeys from './signing_keys/signing_keys.module';\nimport TrustedKeys from './trusted_keys/trusted_keys.module';\nimport AccessTokens from './access_tokens/access_tokens.module';\nimport SslCertificates from './ssl_certificates/ssl_certificates.module';\n\nimport {AdminSecurityController} from './security.controller';\n\nfunction securityConfig($stateProvider) {\n    $stateProvider\n            .state('admin.security', {\n                url: '/security',\n                template: '<ui-view></ui-view>',\n                controller: 'AdminSecurityController as AdminSecurity'\n            })\n}\n\n\nexport default angular.module('admin.security', [\n    General.name,\n    Groups.name,\n    HttpSso.name,\n    SshServer.name,\n    Permissions.name,\n    Users.name,\n    Saml.name,\n    CrowdIntegration.name,\n    OAuth.name,\n    LdapSettings.name,\n    SigningKeys.name,\n    TrustedKeys.name,\n    AccessTokens.name,\n    SslCertificates.name\n])\n        .config(securityConfig)\n        .controller('AdminSecurityController', AdminSecurityController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/security.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecurityGeneralController} from './general.controller';\n\nfunction securityGeneralConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.general', {\n                url: '/general',\n                templateUrl: 'states/admin/security/general/general.html',\n                controller: 'AdminSecurityGeneralController as AdminSecurityGeneral'\n            })\n}\n\nexport default angular.module('security.general', [])\n        .config(securityGeneralConfig)\n        .controller('AdminSecurityGeneralController', AdminSecurityGeneralController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/general/general.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\nimport MESSAGES from \"../../../../constants/configuration_messages.constants\"\n\nexport class AdminSecurityGeneralController {\n\n    constructor(AdminSecurityGeneralDao, PasswordsEncryptionDao, ArtifactoryModelSaver, UserProfileDao, JFrogModal, UserDao, JFrogNotifications, User) {\n        this.adminSecurityGeneralDao = AdminSecurityGeneralDao;\n        this.passwordsEncryptionDao = PasswordsEncryptionDao.getInstance();\n        this.options = [{label:'Supported', value: 'SUPPORTED'},\n                        {label:'Unsupported', value: 'UNSUPPORTED'},\n                        {label:'Required', value: 'REQUIRED'}];\n        this.modal = JFrogModal;\n        this.User = User;\n        this.TOOLTIP = TOOLTIP.admin.security.general;\n        this.MESSAGES = MESSAGES.admin.security.general;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['generalConfig']);\n        this.userProfileDao = UserProfileDao;\n        this.userDao = UserDao.getInstance();\n        this.artifactoryNotifications = JFrogNotifications;\n\n\n        this.getGeneralConfigObject();\n        this.getMasterKeyStatus();\n    }\n\n    getEncryptionButtonText() {\n        return this.materKeyState.hasMasterKey ? \"Decrypt\" : \"Encrypt\";\n    }\n\n    getEncryptionStatusText() {\n        return this.materKeyState.hasMasterKey ?\n                this.MESSAGES.passwordEncrypted :\n                this.MESSAGES.passwordDecrypted;\n    }\n\n    getGeneralConfigObject() {\n        this.adminSecurityGeneralDao.get().$promise.then((data) => {\n            this.generalConfig = data;\n            this.generalConfig.passwordSettings.encryptionPolicy = _.find(this.options,{value: this.generalConfig.passwordSettings.encryptionPolicy});\n        this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    getMasterKeyStatus() {\n        this.materKeyState = this.passwordsEncryptionDao.get();\n    }\n    forcePassExpForAll() {\n        if (!this.generalConfig.passwordSettings.expirationPolicy.enabled) return;\n        this.modal.confirm(`Are you sure you want to expire all user's passwords?`)\n            .then(() => {\n                this.userDao.expireAllPassword();\n            });\n    }\n\n    unExpireAll() {\n        if (!this.generalConfig.passwordSettings.expirationPolicy.enabled) return;\n        this.modal.confirm(`Are you sure you want to unexpire all user's expired passwords?`)\n            .then(() => {\n                this.userDao.unExpireAllPassword();\n            });\n    }\n\n    toggleEncryption() {\n        if (this.materKeyState.hasMasterKey) {\n            this.modal.confirm(`Artifactory will decrypt all encrypted data in your configuration files<br/>and user sensitive data, and it will be saved in clear text.<br/>It is recommended to backup your current artifactory.key<br/>(under $ARTIFACTORY_HOME/etc/security).<br/><br/>Are you sure you want to decrypt?`,null,{confirm: 'Decrypt'}).then(() => {\n                this.materKeyState.$decrypt().then(() => {\n                    this.getMasterKeyStatus();\n                });\n            });\n        } else {\n            this.modal.confirm(`Artifactory will create a private key to encrypt your configuration data<br/>and user sensitive data under /etc directory.<br/>Make sure to backup the key (under $ARTIFACTORY_HOME/etc/security)<br/>in a secure private location, since without it Artifactory will not be able to decrypt the encrypted data, such as configuration passwords, API keys, encrypted passwords, etc.<br/><br/>Are you sure you want to encrypt?`,null,{confirm: 'Encrypt'}).then(() => {\n                this.materKeyState.$encrypt().then(() => {\n                    this.getMasterKeyStatus();\n                });\n            });\n        }\n    }\n\n    save() {\n        let payload = _.cloneDeep(this.generalConfig);\n        payload.passwordSettings.encryptionPolicy = payload.passwordSettings.encryptionPolicy.value;\n        this.adminSecurityGeneralDao.update(payload).$promise.then(()=>{\n            this.ArtifactoryModelSaver.save();\n            this.User.reload();\n        });\n    }\n\n    cancel() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.getGeneralConfigObject();\n        });\n    }\n\n    revokeApiKeys() {\n        this.modal.confirm(`Are you sure you want to revoke all users API keys?`)\n                .then(() => {\n                    this.userProfileDao.revokeApiKey({deleteAll: 1});\n                });\n    }\n\n    unlockAllUsers() {\n        this.adminSecurityGeneralDao.unlockAllUsers();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/general/general.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecurityGroupsController} from './group.controller';\nimport {AdminSecurityGroupFormController} from './group_form.controller';\n\nfunction groupsConfig($stateProvider) {\n\n    $stateProvider\n        .state('admin.security.groups', {\n            url: '/groups',\n            templateUrl: 'states/admin/security/groups/groups.html',\n            controller: 'AdminSecurityGroupsController as AdminSecurityGroups'\n        })\n        .state('admin.security.groups.edit', {\n            parent: 'admin.security',\n            url: '/groups/{groupname}/edit',\n            templateUrl: 'states/admin/security/groups/group_form.html',\n            controller: 'AdminSecurityGroupFormController as GroupForm'\n        })\n        .state('admin.security.groups.new', {\n            parent: 'admin.security',\n            url: '/groups/new',\n            templateUrl: 'states/admin/security/groups/group_form.html',\n            controller: 'AdminSecurityGroupFormController as GroupForm'\n        })\n\n}\n\nexport default angular.module('security.groups', [])\n        .config(groupsConfig)\n        .controller('AdminSecurityGroupsController', AdminSecurityGroupsController)\n    .controller('AdminSecurityGroupFormController', AdminSecurityGroupFormController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/groups/groups.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AdminSecurityGroupsController {\n\n    constructor(JFrogModal, $scope, $state, GroupsDao, JFrogGridFactory, uiGridConstants, commonGridColumns) {\n        this.DEFAULT_REALM = \"artifactory\";\n        this.gridOption = {};\n        this.uiGridConstants = uiGridConstants;\n        this.commonGridColumns = commonGridColumns;\n        this.groupsDao = GroupsDao.getInstance();\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.noGroupsMessage = CONFIG_MESSAGES.admin.security.groups.noGroupsMessage;\n        this._createGrid();\n        this._initGroups();\n    }\n\n    _initGroups() {\n        this.groupsDao.getAll().$promise.then((groups)=> {\n            this.gridOption.setGridData(groups);\n        });\n    }\n\n    _createGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getColumns())\n                .setButtons(this._getActions())\n                .setMultiSelect()\n                .setRowTemplate('default')\n                .setBatchActions(this._getBatchActions());\n    }\n\n    deleteGroup(group) {\n        let json = {groupNames:[group.groupName]};\n        this.modal.confirm(`Are you sure you want to delete group '${group.name}' ?`)\n            .then(() => this.groupsDao.delete(json).$promise.then(()=>this._initGroups()));\n    }\n\n    bulkDelete() {\n        //Get All selected users\n        let selectedRows = this.gridOption.api.selection.getSelectedRows();\n        //Create an array of the selected groups names\n        let names = _.map(selectedRows, (group) => {return group.groupName;});\n        //Create Json for the bulk request\n        let json = {groupNames: names};\n        //console.log('Bulk delete....');\n        //Ask for confirmation before delete and if confirmed then delete bulk of users\n        this.modal.confirm(`Are you sure you want to delete ${names.length} groups ?`).\n        then(() => this.groupsDao.delete(json).$promise.then(() => this._initGroups()));\n    }\n    getColumns() {\n        return [\n            {\n                field: \"groupName\",\n                name: \"Group Name\",\n                displayName: \"Group Name\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" ui-sref=\"^.groups.edit({groupname: row.entity.groupName})\"><a href=\"\" class=\"jf-link\" >{{row.entity.groupName}}</a></div>',\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '20%'\n            },\n            {\n                field: \"permissions\",\n                name: \"Permissions\",\n                displayName: \"Permissions\",\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.permissions','row.entity.groupName'),\n                width: '50%'\n            },\n            {\n                name: \"External\",\n                displayName: \"External\",\n                field: \"External\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.external'),\n                width: '10%'\n            }, {\n                name: \"Admin\",\n                displayName: \"Admin\",\n                field: \"adminPrivileges\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.adminPrivileges'),\n                width: '10%'\n            },\n            {\n                name: \"Auto Join\",\n                displayName: \"Auto Join\",\n                field: \"Auto Join\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.autoJoin'),\n                width: '10%'\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (row) => this.deleteGroup(row)\n            }\n\n        ];\n    }\n   _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.bulkDelete()\n            }\n        ]\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/groups/group.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AdminSecurityGroupFormController {\n    constructor($scope, $state, $stateParams, $timeout, $q, JFrogGridFactory, GroupsDao, UserDao, GroupPermissionsDao,\n                commonGridColumns, ArtifactoryModelSaver, RepositoriesDao) {\n        this.DEFAULT_REALM = \"artifactory\";\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.repositoriesDao = RepositoriesDao;\n        this.userDao = UserDao.getInstance();\n        this.groupsDao = GroupsDao.getInstance();\n        this.groupPermissionsDao = GroupPermissionsDao.getInstance();\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.permissionsGridOptions = {};\n        this.buildPermissionsGridOptions = {};\n        this.commonGridColumns = commonGridColumns;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['groupdata']);\n        this.input = {};\n        this.MESSAGES = MESSAGES.admin.security.groups.groupForm;\n\n\n        if ($stateParams.groupname) {\n            this.mode = 'edit';\n            this.groupname = $stateParams.groupname;\n            this.title = 'Edit ' + this.groupname + ' Group';\n            this._getGroupData();\n            this._createGrid();\n            this._getPermissions();\n        }\n        else {\n            this.mode = 'create';\n            this.title = 'Add New Group';\n            this.groupdata = {};\n            this.saveLastNewUsersCheckbox = false;\n        }\n\n        this._getAllRepos();\n        this._getAllUsers();\n\n    }\n\n    _getAllRepos() {\n        this.reposData = {};\n        this.repositoriesDao.getRepositories({type:'local'}).$promise\n                .then((data) => {\n                    this.reposData.locals = _.map(data,(r)=>{return r.repoKey;});\n                });\n        this.repositoriesDao.getRepositories({type:'remote'}).$promise\n                .then((data) => {\n                    this.reposData.remotes = _.map(data,(r)=>{return r.repoKey;});\n                });\n        this.repositoriesDao.getRepositories({type:'distribution'}).$promise\n                .then((data) => {\n                    this.reposData.dists = _.map(data,(r)=>{return r.repoKey;});\n                });\n    }\n\n    _getGroupData() {\n        this.groupsDao.getSingle({name: this.groupname}).$promise.then((data) => {\n            this.groupdata = data.data;\n            this.saveLastNewUsersCheckbox = this.groupdata.newUserDefault;\n            this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    _getAllUsers() {\n        this.userDao.getAll().$promise.then((data)=> {\n            this.usersData = data;\n            this.usersList = _.map(data, (user)=> {\n                return user.name;\n            });\n            this.userDndTemplate = `<div style=\"min-width:200px\">\n                                        {{getItemInfo().text}}\n                                        <i ng-if=\"userScope.GroupForm.userIsAdmin(getItemInfo().text)\" \n                                            jf-tooltip=\"Admin Privileges\"\n                                            class=\"icon icon-admin-new pull-left\"></i>\n                                        <i ng-if=\"!userScope.GroupForm.userIsAdmin(getItemInfo().text)\" \n                                            class=\"icon icon-blank pull-left\"></i>\n                                    </div>`\n        });\n    }\n\n    userIsAdmin(user){\n        return _.find(this.usersData,(userData)=>{\n            return  userData.name === user && (userData.admin === true || userData.groupAdmin);\n        });\n    }\n\n    _createGrid() {\n        this.permissionsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getPermissionCloumns())\n            .setRowTemplate('default');\n\n        this.buildPermissionsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getBuildPermissionColumns())\n                .setRowTemplate('default');\n\n    }\n\n    _getPermissions() {\n        this.groupPermissionsDao.get({groups: [this.groupname]}).$promise.then((data)=> {\n            this.buildPermissionsGridOptions.setGridData(data.buildPermissions);\n\n            this._fixDataFormat(data.repoPermissions).then((fixedData)=>{\n                this.permissionsGridOptions.setGridData(fixedData);\n            });\n        });\n    }\n\n    _fixDataFormat(data,defer = null) {\n        defer = defer || this.$q.defer();\n        if (this.reposData.locals && this.reposData.remotes) {\n            data.forEach((record)=>{\n                if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY LOCAL') {\n                    record.repoKeysView = 'ANY LOCAL';\n                    record.reposList = angular.copy(this.reposData.locals);\n                }\n                else if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY REMOTE') {\n                    record.repoKeysView = 'ANY REMOTE';\n                    record.reposList = angular.copy(this.reposData.remotes);\n                }\n                else if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY DISTRIBUTION') {\n                    record.repoKeysView = 'ANY DISTRIBUTION';\n                    record.reposList = angular.copy(this.reposData.dists);\n                }\n                else if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY') {\n                    record.repoKeysView = 'ANY';\n                    record.reposList = angular.copy(this.reposData.remotes).concat(this.reposData.locals).concat(this.reposData.dists);\n                }\n                else if (record.repoKeys) {\n                    record.repoKeysView = record.repoKeys.join(', ');\n                    record.reposList = angular.copy(record.repoKeys);\n                }\n            });\n            defer.resolve(data);\n        }\n        else {\n            this.$timeout(()=>{\n                this._fixDataFormat(data,defer);\n            })\n        }\n        return defer.promise;\n    }\n\n    updateGroup() {\n        let payload = angular.copy(this.groupdata);\n        _.extend(payload, this.input);\n        this.groupsDao.update({name: this.groupdata.groupName}, payload).$promise.then((data) => {\n            this.savePending = false;\n            this.ArtifactoryModelSaver.save();\n            this.$state.go('^.groups');\n        }).catch(()=>this.savePending = false);\n    }\n\n    createNewGroup() {\n        let payload = angular.copy(this.groupdata);\n        payload.realm = this.DEFAULT_REALM;\n        _.extend(payload, this.input);\n        this.groupsDao.create(payload).$promise.then((data) => {\n            this.savePending = false;\n            this.ArtifactoryModelSaver.save();\n            this.$state.go('^.groups');\n        }).catch(()=>this.savePending = false);\n    }\n\n    save() {\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        if (this.mode === 'edit')\n            this.updateGroup();\n        if (this.mode === 'create')\n            this.createNewGroup();\n    }\n\n    isSaveDisabled() {\n        return this.savePending || this.groupForm.$invalid;\n    }\n\n    onAdminPrivelegesChange(){\n        if(this.groupdata.adminPrivileges){\n            this.saveLastNewUsersCheckbox = this.groupdata.newUserDefault;\n            this.groupdata.newUserDefault = false\n        } else {\n            this.groupdata.newUserDefault = this.saveLastNewUsersCheckbox;\n        }\n    }\n\n    cancel() {\n        this.$state.go('^.groups');\n    }\n\n    _getBuildPermissionColumns() {\n        let nameCellTemplate = '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" href ui-sref=\"admin.security.permissions.edit({permission: row.entity.permissionName})\">{{row.entity.permissionName}}</a></div>';\n        return [\n            {\n                field: \"permissionName\",\n                name: \"Permission Target\",\n                displayName: \"Permission Target\",\n                cellTemplate: nameCellTemplate,\n                width: '35%'\n            },\n            {\n                field: \"effectivePermission.principal\",\n                name: \"Applied To\",\n                displayName: \"Applied To\",\n                width: '40%'\n            },\n            {\n                field: \"effectivePermission.managed\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.managed'),\n                name: \"Manage\",\n                displayName: \"Manage\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.delete\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.delete'),\n                name: \"Delete\",\n                displayName: \"Delete\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.deploy\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.deploy'),\n                name: \"Deploy\",\n                displayName: \"Deploy\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.annotate\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.annotate'),\n                name: \"Annotate\",\n                displayName: \"Annotate\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.read\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.read'),\n                name: \"Read\",\n                displayName: \"Read\",\n                width:'15%',\n            }\n        ]\n    }\n    _getPermissionCloumns() {\n\n        let nameCellTemplate = '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" href ui-sref=\"admin.security.permissions.edit({permission: row.entity.permissionName})\">{{row.entity.permissionName}}</a></div>';\n\n        return [\n            {\n                field: \"permissionName\",\n                name: \"Permission Target\",\n                displayName: \"Permission Target\",\n                cellTemplate: nameCellTemplate,\n                width:'20%'\n            },\n            {\n                field: \"repoKeys\",\n                name: \"Repositories\",\n                displayName: \"Repositories\",\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.reposList','row.entity.permissionName','row.entity.repoKeysView',true),\n                width:'25%'\n            },\n            {\n                field: \"effectivePermission.managed\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.managed'),\n                name: \"Manage\",\n                displayName: \"Manage\",\n                width:'9%'\n            },\n            {\n                field: \"effectivePermission.delete\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.delete'),\n                name: \"Delete/Overwrite\",\n                displayName: \"Delete/Overwrite\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.deploy\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.deploy'),\n                name: \"Deploy/Cache\",\n                displayName: \"Deploy/Cache\",\n                width:'14%'\n            },\n            {\n                field: \"effectivePermission.annotate\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.annotate'),\n                name: \"Annotate\",\n                displayName: \"Annotate\",\n                width:'9%'\n            },\n            {\n                field: \"effectivePermission.read\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.read'),\n                name: \"Read\",\n                displayName: \"Read\",\n                width:'8%'\n            }\n        ]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/groups/group_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecurityHttpSSoController} from './http_sso.controller';\n\nfunction httpSsoConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.http_sso', {\n                params: {feature: 'HTTPSSO'},\n                url: '/http_sso',\n                templateUrl: 'states/admin/security/http_sso/http_sso.html',\n                controller: 'AdminSecurityHttpSSoController as AdminSecurityHttpSSo'\n            })\n}\n\nexport default angular.module('security.http_sso', [])\n        .config(httpSsoConfig)\n        .controller('AdminSecurityHttpSSoController', AdminSecurityHttpSSoController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/http_sso/http_sso.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminSecurityHttpSSoController {\n\n    constructor(HttpSsoDao, JFrogEventBus, ArtifactoryModelSaver) {\n        this.JFrogEventBus = JFrogEventBus;\n        this.httpSsoDao = HttpSsoDao.getInstance();\n        this.sso = this.getSsoData();\n        this.TOOLTIP = TOOLTIP.admin.security.HTTPSSO;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['sso']);\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n    }\n\n    getSsoData() {\n        this.httpSsoDao.get().$promise.then((sso)=> {\n            this.sso = sso;\n        this.ArtifactoryModelSaver.save();\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n        });\n    }\n\n    reset() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.getSsoData();\n        });\n    }\n    save(sso) {\n        this.httpSsoDao.update(sso).$promise.then(()=>{\n            this.ArtifactoryModelSaver.save();\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/http_sso/http_sso.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecuritySshServerController} from './ssh_server.controller.js';\n\nfunction sshServerConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.ssh_server', {\n                params: {feature: 'SSHSERVER'},\n                url: '/ssh_server',\n                templateUrl: 'states/admin/security/ssh_server/ssh_server.html',\n                controller: 'AdminSecuritySshServerController as AdminSecuritySshServer'\n            })\n}\n\nexport default angular.module('security.ssh_server', [])\n        .config(sshServerConfig)\n        .controller('AdminSecuritySshServerController', AdminSecuritySshServerController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ssh_server/ssh_server.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport API from '../../../../constants/api.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminSecuritySshServerController {\n\n    constructor($timeout, $scope, $state, FileUploader, SshServerDao, JFrogEventBus, ArtifactoryModelSaver, JFrogNotifications, JFrogModal) {\n        this.$timeout = $timeout;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.FileUploader = FileUploader;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.SshServerDao = SshServerDao.getInstance();\n        this.TOOLTIP = TOOLTIP.admin.security.SSHSERVER;\n        this.modal = JFrogModal;\n\n        // Set flags for case added server keys (prior to upload)\n        this.serverKeysStatuses = {\n            addedPublicKeyFile: false,\n            addedPrivateKeyFile: false\n        };\n\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['sshServer','serverKeysStatuses']);\n        this.publicKeyValue = 'No public key installed';\n        this.privateKeyValue = 'No private key installed';\n        this.NO_VALUE_STRING = '** NO VALUE **';\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n        this.getSshData();\n        this.initKeys();\n    }\n\n    initKeys() {\n        this.uploaderPublicKey = new this.FileUploader();\n        this.uploaderPublicKey.onSuccessItem = this.onUploadPublicKeySuccess.bind(this);\n        this.uploaderPublicKey.url = `${API.API_URL}/sshserver/install?public=true`;\n        this.uploaderPublicKey.headers = {'X-Requested-With': 'artUI'};\n        this.uploaderPublicKey.removeAfterUpload = true;\n\n        // Raise flag when adding a public key to input\n        this.uploaderPublicKey.onAfterAddingAll = (addedItems)=>{\n            this.serverKeysStatuses.addedPublicKeyFile = true;\n        };\n\n        this.uploaderPrivateKey = new this.FileUploader();\n        this.uploaderPrivateKey.url = `${API.API_URL}/sshserver/install?public=false`;\n        this.uploaderPrivateKey.headers = {'X-Requested-With': 'artUI'};\n        this.uploaderPrivateKey.onSuccessItem = this.onUploadPrivateKeySuccess.bind(this);\n        this.uploaderPrivateKey.removeAfterUpload = true;\n\n        // Raise flag when adding a private key to input\n        this.uploaderPrivateKey.onAfterAddingAll = (addedItems)=>{\n            this.serverKeysStatuses.addedPrivateKeyFile = true;\n        };\n\n    }\n\n    getSshData(updateKeysStateOnly = false) {\n        this.SshServerDao.get().$promise.then((sshServer)=> {\n            if (!updateKeysStateOnly) this.sshServer = sshServer;\n            this.publicKeyInstalled = sshServer.serverKey && sshServer.serverKey.publicKeyInstalled;\n            this.privateKeyInstalled = sshServer.serverKey && sshServer.serverKey.privateKeyInstalled;\n            this.publicKeyValue = this.publicKeyInstalled ? 'Public key is installed' : 'No public key installed';\n            this.privateKeyValue = this.privateKeyInstalled ? 'Private key is installed' : 'No private key installed';\n            this.publicKeyLink = sshServer.serverKey ? sshServer.serverKey.publicKeyLink : undefined;\n            this.passPhrase = sshServer.serverKey ? sshServer.serverKey.passPhrase : undefined;\n            this.sshServer.customUrlBase = this.sshServer.customUrlBase || this.NO_VALUE_STRING;\n            if (!updateKeysStateOnly) this.ArtifactoryModelSaver.save();\n            this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n        });\n    }\n\n    clearServerKeysInputs(){\n        this.uploaderPrivateKey.clearQueue();\n        this.serverKeysStatuses.addedPrivateKeyFile = false;\n        this.uploaderPublicKey.clearQueue();\n        this.serverKeysStatuses.addedPublicKeyFile = false;\n    }\n\n    reset(){\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.getSshData();\n            this.clearServerKeysInputs();\n        });\n    }\n    save() {\n        if (this.sshServer.enableSshServer && this.sshServer.customUrlBase === this.NO_VALUE_STRING) {\n            this._showUrlBaseAlert().then((gotoGenConf)=>{\n                if (gotoGenConf) {\n                    this.SshServerDao.update(this.sshServer).$promise.then(()=> {\n                        this.ArtifactoryModelSaver.save();\n                        this.$state.go('admin.configuration.general', {focusOnBaseUrl: true});\n                    });\n                }\n                else {\n                    this.SshServerDao.update(this.sshServer).$promise.then(()=>{\n                        this.ArtifactoryModelSaver.save();\n                    });\n                }\n            });\n        }\n        else {\n            this.SshServerDao.update(this.sshServer).$promise.then(()=>{\n                this.ArtifactoryModelSaver.save();\n            });\n        }\n    }\n\n    _showUrlBaseAlert() {\n        let modalScope = this.$scope.$new();\n        modalScope.context='ssh';\n        return this.modal.launchModal('base_url_alert_modal', modalScope, 'md').result;\n    }\n\n    onUploadPublicKeySuccess(fileDetails, response) {\n        this.getSshData(true);\n        this.artifactoryNotifications.create(response.feedbackMsg);\n        this.serverKeysStatuses.addedPublicKeyFile = false;\n    }\n\n    onUploadPrivateKeySuccess(fileDetails, response) {\n        this.getSshData(true);\n        this.artifactoryNotifications.create(response.feedbackMsg);\n        this.serverKeysStatuses.addedPrivateKeyFile = false;\n    }\n\n    upload(type) {\n        if (type === 'public') {\n            this.uploaderPublicKey.queue[0].upload();\n        }\n        if (type === 'private') {\n            this.uploaderPrivateKey.queue[0].upload();\n        }\n    }\n\n    removeKey(isPublic) {\n        this.SshServerDao.delete({public: isPublic}).$promise.then((result) => this.getSshData(true));\n    }\n\n    verifyPhrase(shouldNotify = true) {\n        let method = shouldNotify ? 'post' : 'postWithoutNotifications';\n        if (this.SshServerDao[method])\n            return this.SshServerDao[method]({action: 'verify', passPhrase: this.passPhrase}).$promise;\n    }\n\n    updatePhrase() {\n        let verifyPromise = this.verifyPhrase(false);\n        if (verifyPromise) {\n            verifyPromise\n                    .then(() => {\n                        this.SshServerDao.put({action: 'update', passPhrase: this.passPhrase});\n                    })\n                    .catch((response) => this.artifactoryNotifications.create(response.data));\n            ;\n        }\n    }\n\n    canUploadSshKey(uploader) {\n        return this[uploader].queue.length;\n    }\n\n    canUpdatePhrase() {\n        return this.publicKeyInstalled && this.privateKeyInstalled && this.passPhrase;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ssh_server/ssh_server.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecurityPermissionsController} from './permissions.controller'\nimport {AdminSecurityPermissionsFormController} from './permissons_form.controller'\n\nfunction permissionsConfig($stateProvider) {\n\n    $stateProvider\n        .state('admin.security.permissions', {\n            url: '/permissions',\n            templateUrl: 'states/admin/security/permissions/permissions.html',\n            controller: 'AdminSecurityPermissionsController as Permissions'\n        })\n        .state('admin.security.permissions.edit', {\n            parent: 'admin.security',\n            url: '/permissions/{permission}/edit',\n            templateUrl: 'states/admin/security/permissions/permission_form.html',\n            controller: 'AdminSecurityPermissionsFormController as PermissionForm'\n        })\n        .state('admin.security.permissions.new', {\n            parent: 'admin.security',\n            url: '/permission/new',\n            templateUrl: 'states/admin/security/permissions/permission_form.html',\n            controller: 'AdminSecurityPermissionsFormController as PermissionForm'\n        })\n}\n\nexport default angular.module('security.permissions', [])\n    .config(permissionsConfig)\n    .controller('AdminSecurityPermissionsController', AdminSecurityPermissionsController)\n    .controller('AdminSecurityPermissionsFormController', AdminSecurityPermissionsFormController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/permissions/permissions.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminSecurityPermissionsController {\n    constructor($scope, $state, JFrogGridFactory, PermissionsDao, JFrogModal, uiGridConstants, User, commonGridColumns,\n            JFrogTableViewOptions, $rootScope) {\n        this.$state=$state;\n        this.currentTab = 'repo';\n        this.modal = JFrogModal;\n        this.permissionsDao = PermissionsDao.getInstance();\n        this.$scope = $scope;\n        this.$rootScope = $rootScope;\n        this.commonGridColumns = commonGridColumns;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.uiGridConstants = uiGridConstants;\n        this.JFrogTableViewOptions = JFrogTableViewOptions;\n        this.user = User.getCurrent();\n        this._createGrid();\n        this.initPermission();\n\n\n    }\n\n    initPermission() {\n        this.permissionsDao.getAll().$promise.then((permissions)=> {\n            this.gridOption.setGridData(permissions);\n        });\n    }\n\n    showNew() {\n        return this.user.isAdmin();\n    }\n\n    _createGrid() {\n\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getColumns())\n            .setRowTemplate('default')\n            .setMultiSelect()\n            .setButtons(this._getActions())\n            .setGridData([])\n            .setBatchActions(this._getBatchActions());\n\n        this.gridOption.isRowSelectable = (row) => {\n            return row.entity.name !== this.user.name;\n        }\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this._deletePermission(row),\n                visibleWhen: () => this.user.isAdmin()\n            }\n/*\n            {\n                icon: 'icon icon-builds',\n                tooltip: 'Edit',\n                callback: row => this._editPermission(row)\n            }\n*/\n        ]\n    }\n\n    editPermission(row) {\n        this.$state.go('^.permissions.edit', {permission: row.name})\n    }\n\n    _deletePermission(row) {\n        let json = {permissionTargetNames:[row.name]};\n        this.modal.confirm(`Are you sure you want to delete permission '${row.name}?'`)\n          .then(() => this.permissionsDao.deletePermission(json).$promise.then(()=>this.initPermission()));\n    }\n\n    bulkDelete() {\n        //Get All selected users\n        let selectedRows = this.gridOption.api.selection.getSelectedRows();\n        //Create an array of the selected permission names\n        let names = _.map(selectedRows, (row) => {return row.name;});\n        //Create Json for the bulk request\n        let json = {permissionTargetNames: names};\n        //console.log('Bulk delete....');\n        //Ask for confirmation before delete and if confirmed then delete bulk of users\n        this.modal.confirm(`Are you sure you want to delete ${names.length} permissions?`).\n        then(() => this.permissionsDao.deletePermission(json).$promise.then(() => this.initPermission()));\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Permission Target Name',\n                displayName: 'Permission Target Name',\n                field: 'name',\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a href class=\"jf-link\" ng-click=\"grid.appScope.Permissions.editPermission(row.entity)\">{{row.entity.name}}</a></div>'\n            },\n            {\n                name: 'Resources',\n                displayName: 'Resources',\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    <span ng-if=\"row.entity.repos.length\">Repositories</span><span ng-if=\"row.entity.repos.length && (row.entity.buildExcludePatterns.length || row.entity.buildIncludePatterns.length)\">, </span>\n                                    <span ng-if=\"row.entity.buildExcludePatterns.length || row.entity.buildIncludePatterns.length\">Builds</span>\n                                    <a style=\"float:right\" ng-click=\"grid.appScope.Permissions.showResources(row.entity);\" class=\"show-all-link\" ng-if=\"(row.entity.buildExcludePatterns.length || row.entity.buildIncludePatterns.length) || row.entity.repos\">See All</a></div>\n                               </div>`,\n                field: 'repoKeysView'\n            },\n            {\n                name: 'Groups',\n                displayName: 'Groups',\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.groups','row.entity.name'),\n                field: 'groupsList'\n\n            },\n            {\n                name: 'Users',\n                displayName: 'Users',\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.users','row.entity.name'),\n                field: 'usersList'\n            }\n        ]\n    }\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                visibleWhen: () => this.user.isAdmin(),\n                callback: () => this.bulkDelete()\n            }\n        ]\n    }\n\n    showResources(resource) {\n        this.resourceModalScope = this.$rootScope.$new();\n\n        let selectedRepositories = [];\n        if (resource.repos) {\n            resource.repos.forEach(repo => {\n                selectedRepositories.push(repo);\n            });\n        }\n\n        this.resourceModalScope.permissionName = resource.name;\n        this.resourceModalScope.repos = selectedRepositories;\n\n        this.resourceModalScope.tableData = {};\n        this.resourceModalScope.tableData = new this.JFrogTableViewOptions(this.resourceModalScope);\n        this.resourceModalScope.tableData.setColumns(this._getRepoDataColumns());\n        this.resourceModalScope.tableData.setData(this.resourceModalScope.repos);\n\n\n        this.resourceModalScope.buildExcludePatterns = resource.buildExcludePatterns || [];\n        this.resourceModalScope.buildIncludePatterns = resource.buildIncludePatterns || [];\n\n\n        let tabs = [];\n        if (this.resourceModalScope.repos.length) tabs.push({name: 'Repositories'});\n        if (resource.buildExcludePatterns && resource.buildExcludePatterns.length || resource.buildIncludePatterns && resource.buildIncludePatterns.length) tabs.push({name: 'Builds'});\n        this.resourceModalScope.tabsDict = {\n            Repositories: 'Repositories',\n            Builds: 'Builds'\n        };\n\n\n        this.resourceModalScope.tabs = tabs;\n\n        this.modal.launchModal('show_resources_modal', this.resourceModalScope);\n    }\n\n    _getRepoDataColumns() {\n        return [\n            {\n                header: 'Repository Key',\n                field: 'repoKey',\n                sortable: true,\n                filterable: true,\n                cellTemplate: `<div><i class=\"icon-{{row.entity.type}}-repo\"></i> {{row.entity.repoKey}}</div>`\n            },\n            {\n                header: 'Type',\n                field: 'type',\n                sortable: true,\n                cellTemplate: `<div>{{row.entity.type | capitalize}}</div>`\n            }\n        ];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/permissions/permissions.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\n\nexport class AdminSecurityPermissionsFormController {\n    constructor($scope, $state, $stateParams, $q, JFrogModal, JFrogGridFactory, RepoDataDao,\n            PermissionsDao, User, ArtifactoryModelSaver, JFrogEventBus, BuildsDao, $timeout) {\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$stateParams = $stateParams;\n        this.user = User.getCurrent();\n        this.modal = JFrogModal;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, [\n                                                                                    'permissionName',\n                                                                                    'buildPermission',\n                                                                                    'selectedRepositories',\n                                                                                    'repoPermission',\n                                                                                    'selectedBuilds',\n                                                                                    'selectedUsers',\n                                                                                    'selectedGroups'\n                                                                                ]);\n        this.$state = $state;\n        this.TOOLTIP = TOOLTIP.admin.security.permissionsForm;\n\n        // Daos\n        this.repoDataDao = RepoDataDao;\n        this.BuildsDao = BuildsDao;\n        this.permissionsDao = PermissionsDao.getInstance();\n\n        // Setups\n        this.title = \"New Permission\";\n        this.tabs = ['Add Repositories', 'Add Builds', 'Summary'];\n\n        this.selectedRepositories = [];\n        this.repoPermission = {};\n        this.selectedBuilds = [];\n        this.buildPermission = [];\n        this.selectedUsers = [];\n        this.selectedGroups = [];\n\n        this.buildPermission = {\n            includePatterns: [],\n            excludePatterns: []\n        };\n\n        this.newPermission = false;\n\n\n        // Drag & Drop Repositories columns\n        this.repositoriesColumns = [\n            {\n                header: 'Name',\n                field: 'repoKey',\n                filterable: true,\n                cellTemplate: `<div><i class=\"{{row.entity._iconClass}}\"></i> {{row.entity.repoKey}}</div>`,\n                width: '50%'\n            }\n        ];\n        // Drag & Drop Builds columns\n        this.buildsColumns = [\n            {\n                header: 'Build Name',\n                field: 'buildName',\n                filterable: true,\n                cellTemplate: `<div><i class=\"icon-json\"></i> {{row.entity.buildName}}</div>`,\n                width: '100%'\n            }\n        ];\n\n        let usersAndGroupsTemplate = {\n            field: 'principal',\n            filterable: true,\n            cellTemplate: `<div disable-tooltip-on-overflow ng-if=\"row.entity.admin\">\n                                <span jf-tooltip=\"${this.TOOLTIP.adminIcon.user}\">\n                                    <i class=\"icon-admin-new\"></i> \n                                    {{row.entity.principal}}\n                                </span>\n                               </div><div ng-if=\"!row.entity.admin\">{{row.entity.principal}}</div>`,\n            width: '100%'\n        };\n\n        this.usersColumns =  [Object.assign({header: 'User Name'}, usersAndGroupsTemplate)];\n        this.groupsColumns = [Object.assign({header: 'Group Name'}, usersAndGroupsTemplate)];\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT, () => {\n            console.log('EVENTS.REFRESH_PAGE_CONTENT'); // TODO UPDATE DATA WHEN CREATING NEW REPOS FROM QUICK WIZARD\n        });\n    }\n\n    $onInit() {\n        this.initPermissionForm();\n    }\n\n    initPermissionForm() {\n\n        this.permissionsDao.getBuildGlobalBasicReadAllowed().$promise\n                .then(response => {\n                    this.globalBasicReadAllowed = response.buildGlobalBasicReadAllowed\n                });\n\n        this._getAllRepos().then(() => {\n            this.availableRepositories = _.map(this.allRepos, repo => this.getRepoWithIcon(repo));\n        }).then(() => {\n\n            this.$q.all([this._getAllBuildsNames(),this._getUsersAndGroups()]).then(() => {\n                this.savePending = false;\n                if (this.$stateParams.permission) {\n                    this.newPermission = false;\n                    this.title = \"Edit \" + this.$stateParams.permission + ' Permission';\n                    this.initUpdatePermissionForm(this.$stateParams.permission);\n                } else {\n                    this.newPermission = true;\n                    this._initNewPermissionForm();\n                }\n            })\n\n\n        });\n\n\n    }\n\n    initUpdatePermissionForm(permissionName) {\n        this.permissionName = permissionName;\n        this.permissionsDao.getPermission({name: permissionName}).$promise.then((result) => {\n\n            if (!this.user.isAdmin() && this.user.canManage) {\n                if (!result.repoPermission) {\n                    this.tabs.splice(this.tabs.indexOf('Add Repositories'), 1);\n                    this.switchedValue = 'Add Builds';\n                }\n                if (!result.buildPermission) {\n                    this.tabs.splice(this.tabs.indexOf('Add Builds'), 1);\n                    this.switchedValue = 'Add Repositories';\n                }\n            }\n\n            let setUpUsersAndGroups = (data, context) => {\n                if (!data.length) return;\n\n                // Get array of permissions and return object\n                let formatPermissions = permissions => {\n                    let response = {};\n                    permissions.forEach(perm => Object.assign(response, {[perm]: true}));\n                    return response;\n                };\n\n\n                // sorting data of users and groups with there's permissions\n                let sortItems = (available,selected,target) => {\n                    data.forEach(item => {\n                        let index = _.findIndex(available, i => i.principal === item.principal);\n                        if (index >= 0) {\n                            let entity = available.splice(index, 1);\n                            entity[0][target] = formatPermissions(item.actions);\n                            selected.push(entity[0]);\n                        } else {\n                            index = _.findIndex(selected, i => i.principal === item.principal);\n                            selected[index][target] = formatPermissions(item.actions);\n                        }\n\n                    });\n                };\n\n                if (context[0] === 'repo' && context[1] === 'user') sortItems(this.availableUsers,this.selectedUsers, 'repoPermissions');\n                if (context[0] === 'repo' && context[1] === 'group') sortItems(this.availableGroups,this.selectedGroups, 'repoPermissions');\n                if (context[0] === 'build' && context[1] === 'user') sortItems(this.availableUsers,this.selectedUsers, 'buildsPermissions');\n                if (context[0] === 'build' && context[1] === 'group') sortItems(this.availableGroups,this.selectedGroups, 'buildsPermissions');\n            };\n\n            if (result.buildPermission) {\n                this.buildPermission.includePatterns = result.buildPermission.includePatterns || [];\n                this.buildPermission.excludePatterns = result.buildPermission.excludePatterns || [];\n\n                if (this.buildPermission.includePatterns.includes('**')) this.allBuilds = true;\n                this.updateBuildsList(true);\n\n                if (result.buildPermission.groupPermissionActions) setUpUsersAndGroups(result.buildPermission.userPermissionActions, [\"build\",\"user\"]);\n                if (result.buildPermission.groupPermissionActions) setUpUsersAndGroups(result.buildPermission.groupPermissionActions, [\"build\",\"group\"]);\n            }\n\n            if (result.repoPermission) {\n                this.repoPermission.includePatterns = result.repoPermission.includePatterns || [];\n                this.repoPermission.excludePatterns = result.repoPermission.excludePatterns || [];\n\n                let repoKeys = result.repoPermission.repoKeys || [];\n\n                if (repoKeys[0] === 'ANY') {\n                    repoKeys = ['ANY LOCAL', 'ANY REMOTE', 'ANY DISTRIBUTION'];\n                }\n\n                if (repoKeys.includes('ANY LOCAL') || repoKeys.includes('ANY REMOTE') || repoKeys.includes('ANY DISTRIBUTION')) {\n\n                    // includes any\n                    let anys = _.remove(repoKeys, repoKey => repoKey === 'ANY LOCAL' || repoKey === 'ANY REMOTE' || repoKey === 'ANY DISTRIBUTION');\n                    _.forEach(anys, (any) => {\n                        if (any === 'ANY LOCAL') {\n                            this.anyLocal = true;\n                            this.setAnyRepoOfType('local', this.anyLocal);\n                        }\n                        if (any === 'ANY REMOTE') {\n                            this.anyRemote = true;\n                            this.setAnyRepoOfType('remote', this.anyRemote);\n                        }\n                        if (any === 'ANY DISTRIBUTION') {\n                            this.anyDistribution = true;\n                            this.setAnyRepoOfType('distribution', this.anyDistribution);\n                        }\n                    });\n\n\n                    if (repoKeys.length) {\n                        repoKeys.forEach(repoKey => {\n\n                            let moveToSelected = _.remove(this.availableRepositories, repo => repo.repoKey === repoKey);\n                            this.selectedRepositories.unshift(moveToSelected[0]);\n\n                        });\n                    }\n                } else if (repoKeys.length) {\n                    repoKeys.forEach(repoKey => {\n                        this.selectedRepositories.push(..._.remove(this.availableRepositories, repo => repo.repoKey === repoKey));\n                    })\n                }\n\n\n                if (result.repoPermission.userPermissionActions) setUpUsersAndGroups(result.repoPermission.userPermissionActions, [\"repo\",\"user\"]);\n                if (result.repoPermission.groupPermissionActions) setUpUsersAndGroups(result.repoPermission.groupPermissionActions, [\"repo\",\"group\"]);\n            }\n\n\n\n            this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    _getAllBuildsNames() {\n        let deferred = this.$q.defer();\n        this.BuildsDao.getAllBuildsNames().$promise.then((response) => {\n            this.availableBuilds = [];\n            _.forEach(response, item => this.availableBuilds.push({'buildName':item}))\n            deferred.resolve();\n        });\n        return deferred.promise;\n    }\n\n    markAllBuilds(isChecked) {\n\n        if (isChecked) {\n            this.buildPermission.includePatterns.splice(0);\n            this.buildPermission.includePatterns.push('**');\n            this.buildsChange(true);\n        } else {\n            if (this.buildPermission.includePatterns.includes('**')) this.buildPermission.includePatterns.splice(this.buildPermission.includePatterns.indexOf('**'),1);\n            let buildsToMove = this.selectedBuilds.splice(0);\n            this.availableBuilds.push(...buildsToMove);\n            this.availableBuilds.forEach(build => delete build.draggable);\n        }\n\n    }\n\n    buildsChange(markAll) {\n        this.selectedBuilds.map(i => i.draggable = false);\n\n        if (!markAll) {\n            this.selectedBuilds.forEach(build => {\n                this.buildPermission.includePatterns.push(build.buildName + '/**');\n            });\n        }\n\n        this.buildPermission.includePatterns.splice(0,this.buildPermission.includePatterns.length,..._.uniq(this.buildPermission.includePatterns));\n        this.updateBuildsList();\n    }\n\n    reposChanged() {\n        if (this.selectedRepositories.length === 0) {\n            this.selectedUsers.forEach(user => delete user.repoPermissions);\n            this.selectedGroups.forEach(group => delete group.repoPermissions);\n        }\n    }\n\n    updateBuildsList(saveModel) {\n        let payload = {includePatterns: this.buildPermission.includePatterns, excludePatterns: this.buildPermission.excludePatterns};\n        this.permissionsDao.buildPatterns(payload).$promise.then(response => {\n\n            let selectedBuildsByPatterns = response.builds;\n\n            // reset all items (move all items to available)\n            let itemsToReset = this.selectedBuilds.splice(0);\n            this.availableBuilds.push(...itemsToReset);\n            this.availableBuilds.map(build => delete build.draggable);\n\n            // Itereate all builds list and set them in the selected builds list\n            if (!this.buildPermission.includePatterns.length && !this.buildPermission.excludePatterns.length) {\n                this.selectedUsers.forEach(user => delete user.buildsPermissions);\n                this.selectedGroups.forEach(group => delete group.buildsPermissions);\n                return;\n            }\n\n            selectedBuildsByPatterns.forEach(buildName => {\n                let buildToMove = _.remove(this.availableBuilds, build => build.buildName === buildName);\n                if (buildToMove) this.selectedBuilds.push(...buildToMove);\n                this.selectedBuilds.map(build => build.draggable = false);\n            });\n\n            if (saveModel) this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    _getUsersAndGroups() {\n        let deferred = this.$q.defer();\n        this.permissionsDao.getAllUsersAndGroups().$promise.then((response) => {\n           this.availableUsers = response.allUsers;\n           this.availableGroups = response.allGroups;\n        }).then(() => {\n            _.map(this.availableUsers, i => {\n                if (i.admin) i.draggable = false;\n            });\n            this.availableUsers = _.sortBy(this.availableUsers, user => !user.admin);\n\n\n\n            _.map(this.availableGroups, i => {\n                if (i.admin) i.draggable = false;\n            });\n\n            this.availableGroups = _.sortBy(this.availableGroups, group => !group.admin);\n            deferred.resolve();\n        });\n        return deferred.promise;\n    }\n\n    changeSelections(type) {\n        if (type === 'user') {\n            this.availableUsers.forEach(user => delete user.customClass);\n            if (this.availableUsers.includes(this.activeUser)) {\n                delete this.activeUser;\n            }\n\n            let isAnyUserSelected = _.filter(this.selectedUsers, user => user.customClass);\n            if (this.selectedUsers.length && !isAnyUserSelected.length) {\n                this.selectedUsers[0].customClass = 'active';\n                this.activeUser = this.selectedUsers[0];\n            }\n\n        } else if (type === 'group') {\n            this.availableGroups.forEach(group => delete group.customClass);\n            if (this.availableGroups.includes(this.activeGroup)) {\n                delete this.activeGroup;\n            }\n\n            let isAnyGroupSelected = _.filter(this.selectedGroups, group => group.customClass);\n            if (this.selectedGroups.length && !isAnyGroupSelected.length) {\n                this.selectedGroups[0].customClass = 'active';\n                this.activeGroup = this.selectedGroups[0];\n            }\n        }\n    }\n\n    _getAllRepos() {\n        let deferred = this.$q.defer();\n        this.repoDataDao.getAllForPerms({\"permission\": true}).$promise.then((result) => {\n            this.allRepos = result.repoTypesList;\n            deferred.resolve();\n        });\n        return deferred.promise;\n    }\n\n    getRepoWithIcon(repo) {\n        repo._iconClass = \"icon \" + (repo.type === 'local' ? \"icon-local-repo\" :\n                (repo.type === 'remote' ? \"icon-remote-repo\" : (repo.type === 'virtual' ? \"icon-virtual-repo\" :\n                        (repo.type === 'distribution' ? \"icon-distribution-repo\" :\n                                \"icon-notif-error\"))));\n        return repo;\n    }\n\n    setAnyRepoOfType(type, isAnyRepoOfThisTypeCheckboxIsChecked) {\n        if (isAnyRepoOfThisTypeCheckboxIsChecked) {this.availableRepositories.forEach(repo => {\n                if (type === repo.type) {\n                    repo[\"draggable\"] = false;\n                    if (!_.contains(this.selectedRepositories, repo)) {  // if the repo isn't exist in selected add it\n                        this.selectedRepositories.push(repo);\n                    }\n                }\n            });\n            this.selectedRepositories.forEach(repo => {\n                if (type === repo.type) {\n                    repo[\"draggable\"] = false;\n                }\n            });\n            _.remove(this.availableRepositories, {type});  // remove all this type from the available\n        } else {\n\n            this.selectedRepositories.forEach((repo) => {\n                if (type === repo.type && !_.contains(this.availableRepositories, repo)) {\n                    delete repo[\"draggable\"];\n                    this.availableRepositories.push(repo);\n                }\n            });\n            _.remove(this.selectedRepositories, {type});\n\n        }\n\n        this.reposChanged();\n    }\n\n    save() {\n        if (this.savePending) {\n            return;\n        }\n\n        this.savePending = true;\n\n        // Get selected repo keys\n        let getSelectedRepoKeys = () => {\n            let anyRepositories = _.pick({'ANY LOCAL' : this.anyLocal, 'ANY REMOTE' : this.anyRemote, 'ANY DISTRIBUTION': this.anyDistribution}, _.identity);\n            let selectedRepositories = [...this.selectedRepositories];\n\n            if (!_.isEmpty(anyRepositories)) {\n                if (this.anyLocal && this.anyRemote && this.anyDistribution) return ['ANY'];\n\n                Object.keys(anyRepositories).forEach(i => {\n                    if (i === 'ANY LOCAL') _.remove(selectedRepositories, repo => repo.type === 'local');\n                    if (i === 'ANY REMOTE') _.remove(selectedRepositories, repo => repo.type === 'remote');\n                    if (i === 'ANY DISTRIBUTION') _.remove(selectedRepositories, repo => repo.type === 'distribution');\n                });\n            }\n\n            let selectedRepositoriesRepoKeys = _.map(selectedRepositories, i => i.repoKey);\n            let repoKeys = [...Object.keys(anyRepositories), ...selectedRepositoriesRepoKeys];\n\n            return repoKeys;\n        };\n\n        // Get permissions object and return array\n        let setPermissionsActionsArray = (actions) => {\n            if (!actions) return [];\n\n            let response = [];\n\n            _.forEach(actions, (value,key) => {\n                if (value) response.push(key);\n            });\n\n            return response;\n        };\n\n        // Return permissions objects for user/groups repo/build\n        let getPermissionsActions = (data, context) => {\n            let permissionsData = [];\n\n            if (data.length) {\n                if (context === 'repo') {\n                    data.forEach(item => {\n                        if (item.repoPermissions) permissionsData.push({principal: item.principal, actions: setPermissionsActionsArray(item.repoPermissions)});\n                    });\n                } else if (context === 'build') {\n                    data.forEach(item => {\n                        if (item.buildsPermissions) permissionsData.push({principal: item.principal, actions: setPermissionsActionsArray(item.buildsPermissions)});\n                    });\n                }\n            }\n            return permissionsData;\n        };\n\n\n        let permission = {\n            name: this.permissionName,\n            repoPermission: {\n                repoKeys: getSelectedRepoKeys(),\n                userPermissionActions: getPermissionsActions(this.selectedUsers, 'repo'),\n                groupPermissionActions: getPermissionsActions(this.selectedGroups, 'repo'),\n                includePatterns: this.repoPermission.includePatterns,\n                excludePatterns: this.repoPermission.excludePatterns\n            },\n            buildPermission: {\n                userPermissionActions: getPermissionsActions(this.selectedUsers, 'build'),\n                groupPermissionActions: getPermissionsActions(this.selectedGroups, 'build'),\n                includePatterns: this.buildPermission.includePatterns,\n                excludePatterns: this.buildPermission.excludePatterns\n            }\n        };\n\n        // delete repos/builds objects if non selected\n        if (!this.isBuildsSelected()) delete permission.buildPermission;\n        if (!this.isReposSelected()) delete permission.repoPermission;\n\n        if (this.newPermission) {\n            // SET NEW PERMISSION\n            this.permissionsDao.create(permission).$promise.then(() => {\n                this.savePending = false;\n                this.ArtifactoryModelSaver.save();\n                this.$state.go('^.permissions')\n            }).catch(() => this.savePending = false);\n        }\n        else {\n            // UPDATE EXISTING PERMISSION\n            this.permissionsDao.update(permission).$promise.then(() => {\n                this.savePending = false;\n                this.ArtifactoryModelSaver.save();\n                this.$state.go('^.permissions')\n            }).catch(() => this.savePending = false);\n        }\n    }\n\n    formInvalid() {\n        return this.savePending || this.form.$invalid || !this.permissionName || (!this.isBuildsSelected() && !this.isReposSelected());\n    }\n\n    onRowClick(row,list,context) {\n        if (list === 'selected') {\n            if (context === 'user') {\n                this.selectedUsers.forEach(i => delete i.customClass);\n                this.activeUser = _.find(this.selectedUsers, user => user.principal === row.principal);\n\n\n            } else if (context === 'group') {\n                this.selectedGroups.forEach(i => delete i.customClass);\n                this.activeGroup = _.find(this.selectedGroups, group => group.principal === row.principal);\n            }\n            row.customClass = 'active';\n        }\n    }\n\n    _initNewPermissionForm() {\n        this.anyLocal = this.anyRemote = this.anyDistribution = this.allBuilds = false;\n\n        this.repoPermission.includePatterns = ['**'];\n        this.repoPermission.excludePatterns = [];\n\n        this.buildPermission.includePatterns = [];\n        this.buildPermission.excludePatterns = [];\n    }\n\n    isBuildsSelected() {\n        return this.buildPermission.includePatterns.length >= 1 || this.buildPermission.excludePatterns.length >= 1;\n    }\n\n    isReposSelected() {\n        return this.selectedRepositories.length;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/permissions/permissons_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecurityUserController} from './users.controller';\nimport {AdminSecurityUserFormController} from './user_form.controller';\n\nfunction usersConfig($stateProvider) {\n\n    $stateProvider\n        .state('admin.security.users', {\n            url: '/users',\n            templateUrl: 'states/admin/security/users/users.html',\n            controller: 'AdminSecurityUserController as AdminSecurityUser'\n        })\n        .state('admin.security.users.edit', {\n            parent: 'admin.security',\n            url: '/users/{username}/edit',\n            templateUrl: 'states/admin/security/users/user_form.html',\n            controller: 'AdminSecurityUserFormController as UserForm'\n        })\n        .state('admin.security.users.new', {\n            parent: 'admin.security',\n            url: '/users/new',\n            templateUrl: 'states/admin/security/users/user_form.html',\n            controller: 'AdminSecurityUserFormController as UserForm'\n        })\n\n}\n\nexport default angular.module('security.users', [])\n        .config(usersConfig)\n    .controller('AdminSecurityUserController', AdminSecurityUserController)\n    .controller('AdminSecurityUserFormController', AdminSecurityUserFormController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/users/users.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminSecurityUserController {\n\n    constructor($state, JFrogModal, UserDao, $scope, GroupsDao, JFrogGridFactory, uiGridConstants, AdminSecurityGeneralDao,\n                commonGridColumns) {\n\n        this.userDao = UserDao.getInstance();\n        this.adminSecurityGeneralDao = AdminSecurityGeneralDao;\n        this.uiGridConstants = uiGridConstants;\n        this.groupsDao = GroupsDao.getInstance();\n        this.modal = JFrogModal;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.commonGridColumns = commonGridColumns;\n        this.$scope = $scope;\n        this.$state = $state;\n        this._createGrid();\n        this._initUsers();\n    }\n\n    _initUsers() {\n        this.userDao.getAll().$promise.then((users)=> {\n            //console.log(users);\n            users.forEach((user)=>{\n                user.permissions = _.pluck(user.permissionsList,'permissionName');\n                user.effectiveAdmin = user.admin || user.groupAdmin;\n            });\n            this.gridOption.setGridData(users);\n        });\n    }\n\n    _createGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getColumns())\n                .setMultiSelect()\n                .setButtons(this._getActions())\n                .setRowTemplate('default')\n                .setBatchActions(this._getBatchActions());\n\n        this.gridOption.isRowSelectable = (row) => {\n            return row.entity.name !== 'anonymous';\n        };\n    }\n\n    deleteUser(user) {\n        let json = {userNames:[user.name]};\n        this.modal.confirm(`Are you sure you want to delete user '${user.name}?'`)\n            .then(() => this.userDao.delete(json).$promise.then(()=>this._initUsers()));\n    }\n\n    bulkDelete(){\n        // Get All selected users\n        let selectedRows = this.gridOption.api.selection.getSelectedRows();\n        // Create an array of the selected users names\n        let names = _.map(selectedRows, (user) => {return user.name;});\n        // Create Json for the bulk request\n        let json = {userNames: names};\n        // console.log('Bulk delete....');\n        // Ask for confirmation before delete and if confirmed then delete bulk of users\n        this.modal.confirm(`Are you sure you want to delete ${names.length} users?`)\n            .then(() => this.userDao.delete(json).$promise.then(() => this._initUsers()));\n    }\n\n    updateUser(user) {\n        this.userDao.update(user).$promise.then(()=>this._initUsers());\n    }\n\n    checkExternalStatus(user) {\n        this.userDao.checkExternalStatus(user).$promise.then((dataRes)=>{\n//            console.log(dataRes);\n            user.externalRealmStatus = dataRes.data.externalRealmStatus;\n        });\n\n    }\n\n    getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: \"name\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" ui-sref=\"^.users.edit({username: row.entity.name})\"><a href=\"\" class=\"jf-link\">{{row.entity.name}}</a></div>',\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '33%'\n                //width: '15%'\n            },\n            {\n                name: 'Email',\n                displayName: 'Email',\n                field: \"email\",\n                width: '15%'\n            },\n            {\n                name: \"Realm\",\n                displayName: \"Realm\",\n                field: \"realm\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">{{row.entity.realm}}`+\n                                `<span ng-if=\"row.entity.externalRealmStatus\"> | {{row.entity.externalRealmStatus}}</span>`+\n                                `<span ng-if=\"!row.entity.externalRealmStatus && row.entity.externalRealmLink\"> | <a href=\"\" ng-click=\"grid.appScope.AdminSecurityUser.checkExternalStatus(row.entity)\" class=\"jf-link\">{{row.entity.externalRealmLink}}</a></span></div>`,\n                width: '10%'\n            },\n            {\n                field: \"groups\",\n                name: \"Related Groups\",\n                displayName: \"Related Groups\",\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.groups','row.entity.name'),\n                width: '18%'\n            },/*\n            {\n                field: \"permissions\",\n                name: \"Related Permissions\",\n                displayName: \"Related Permissions\",\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.permissions','row.entity.name'),\n                width: '18%'\n            },*/\n            {\n                name: \"Admin\",\n                displayName: \"Admin\",\n                field: \"admin\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectiveAdmin'),\n                width: '7%'\n            },\n            {\n                name: \"Lock\",\n                displayName: \"Locked\",\n                field: \"locked\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\"><a class=\"grid-column-button icon icon-lock\" ng-if=\"row.entity.locked\" cm-aditional-action=\"Unlock\" ng-click=\"grid.appScope.AdminSecurityUser.unlockUsers(row.entity.name)\" jf-tooltip=\"Unlock\"></a></div>',\n                width: '7%'\n            },\n            {\n                field: \"lastLoggedInMillis\",\n                name: \"Last Login\",\n                displayName: \"Last Login\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.lastLoggedIn}}</div>',\n                width: '10%'\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (row) => this.deleteUser(row),\n                visibleWhen: (row) => row.name != 'anonymous'\n            }\n\n        ];\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.bulkDelete()\n            },\n            {\n                icon: 'unlock',\n                name: 'Unlock',\n                callback: () => this.bulkUnlock(),\n                disabledWhen: () => !this.hasSelectedUnlockedUsers()\n            }\n        ]\n    }\n\n    unlockUsers(users) {\n        if (!_.isArray(users)) users = [users];\n\n        this.adminSecurityGeneralDao.unlockUsers({},users).$promise.then((res)=>{\n            if(res.status === 200) {\n                this._initUsers()\n            }\n        });\n    }\n\n    hasSelectedUnlockedUsers() {\n        let selectedRows = this.gridOption.api.selection.getSelectedRows();\n        return _.findWhere(selectedRows,{locked: true});\n    }\n\n    bulkUnlock() {\n        let selectedRows = this.gridOption.api.selection.getSelectedRows();\n        let locked = _.filter(selectedRows,row=>row.locked);\n        let names = _.pluck(locked,\"name\");\n        this.unlockUsers(names);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/users/users.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport ACTIONS from \"../../../../constants/user_actions.constants\";\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\nimport MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AdminSecurityUserFormController {\n    constructor($scope, $state, $stateParams, $timeout, $q, $http, RESOURCE, JFrogGridFactory, UserDao, GroupsDao, GroupPermissionsDao, AdminSecurityGeneralDao, User,\n                uiGridConstants, commonGridColumns, ArtifactoryModelSaver, RepositoriesDao, UserProfileDao, JFrogModal, JFrogNotifications,ArtifactoryState) {\n\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.$http = $http;\n        this.RESOURCE = RESOURCE;\n        this.User = User;\n        this.repositoriesDao = RepositoriesDao;\n        this.adminSecurityGeneralDao = AdminSecurityGeneralDao;\n        this.modal = JFrogModal;\n        this.userDao = UserDao.getInstance();\n        this.groupsDao = GroupsDao.getInstance();\n        this.groupPermissionsDao = GroupPermissionsDao.getInstance();\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['userdata', 'input'], ['locked']);\n        this.permissionsGridOptions = {};\n        this.buildsPermissionsGridOptions = {};\n        this.userProfileDao = UserProfileDao;\n        this.uiGridConstants = uiGridConstants;\n        this.commonGridColumns = commonGridColumns;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.TOOLTIP = TOOLTIP.admin.security.usersForm;\n        this.MESSAGES = MESSAGES.admin.security.users.userForm;\n        this.input = {};\n        this.artifactoryState = ArtifactoryState;\n        this.emailChanged=false;\n        this.setDisabledChecked = true;\n        this.passwordRank = 0;\n        this.lastSavedUserSettings = {};\n\n        this._getPasswordExpirationState();\n\n        if ($stateParams.username) {\n            this.mode = 'edit';\n            this.username = $stateParams.username;\n            this.title = 'Edit ' + this.username + ' User';\n            this._getUserData();\n\n        }\n        else {\n            this.mode = 'create';\n            this.title = 'Add New User';\n            this.userdata = {\n                groups: [],\n                profileUpdatable: true,\n                disableUIAccess: false,\n                internalPasswordDisabled: false\n            };\n            this.saveCheckboxes();\n        }\n        this._createGrid();\n        this._getAllRepos();\n        this._getAllGroups();\n\n    }\n\n    userIsEffectiveAdmin(){\n        return (this.userdata.admin || this.isInAdminGroup);\n    }\n\n    _getAllRepos() {\n        this.reposData = {};\n        this.repositoriesDao.getRepositories({type:'local'}).$promise\n                .then((data) => {\n                    this.reposData.locals = _.map(data,(r)=>{return r.repoKey;});\n                });\n        this.repositoriesDao.getRepositories({type:'remote'}).$promise\n                .then((data) => {\n                    this.reposData.remotes = _.map(data,(r)=>{return r.repoKey;});\n                });\n        this.repositoriesDao.getRepositories({type:'distribution'}).$promise\n                .then((data) => {\n                    this.reposData.dists = _.map(data,(r)=>{return r.repoKey;});\n                });\n    }\n\n    _createGrid() {\n        this.permissionsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getPermissionCloumns())\n            .setRowTemplate('default');\n\n        this.buildsPermissionsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getBuildPermissionCloumns())\n                .setRowTemplate('default');\n\n    }\n\n    _getAllGroups() {\n        this.userDao.getAllGroups().$promise.then((data)=> {\n            this.groupsData = data;\n            this.groupsList = _.map(this.groupsData, (group)=> {\n                if (group.autoJoin && this.mode === 'create') {\n                    this.userdata.groups.push(group.groupName);\n                    this.ArtifactoryModelSaver.save();\n                }\n                return group.groupName;\n            });\n            if (this.mode === 'create') {\n                this._getGroupsPermissions();\n            }\n\n            this.groupDndTemplate = `<div style=\"min-width:200px\">\n                                        {{getItemInfo().text}}\n                                        <i ng-if=\"userScope.UserForm.groupIsAdmin(getItemInfo().text)\" \n                                           jf-tooltip=\"Admin Privileges\"\n                                           class=\"icon icon-admin-new pull-left\"></i>\n                                        <i ng-if=\"!userScope.UserForm.groupIsAdmin(getItemInfo().text)\" \n                                            class=\"icon icon-blank pull-left\"></i>\n                                    </div>`\n        });\n    }\n\n    _getUserPermissions() {\n        this.userDao.getPermissions({userOnly: true}, {name: this.username}).$promise.then((data)=> {\n            this.userRepoPermissions = data.repoPermissions;\n            this.userBuildPermissions = data.buildPermissions;\n            if (!this.userdata.groups || !this.userdata.groups.length || this.groupsRepoPermissions || this.groupsBuildPermissions) {\n                this._setGridData();\n            }\n        });\n    }\n\n    _getGroupsPermissions() {\n        if (!this.userdata) return;\n        if (!this.userdata.groups || !this.userdata.groups.length) {\n            this.groupsRepoPermissions = [];\n            this.groupsBuildPermissions = [];\n            if (this.mode==='create') {\n                this.permissionsGridOptions.setGridData(this.groupsRepoPermissions);\n                this.buildsPermissionsGridOptions.setGridData(this.groupsBuildPermissions);\n            } else if (this.userRepoPermissions || this.userBuildPermissions) {\n                this._setGridData();\n            }\n        } else {\n            this.groupPermissionsDao.get({groups: this.userdata.groups}).$promise.then((data)=> {\n                this.groupsRepoPermissions = data.repoPermissions;\n                this.groupsBuildPermissions = data.buildPermissions;\n                if (this.mode === 'create') {\n                    this.permissionsGridOptions.setGridData(this.groupsRepoPermissions);\n                    this.buildsPermissionsGridOptions.setGridData(this.groupsBuildPermissions);\n                }\n                else if (this.userRepoPermissions || this.userBuildPermissions) {\n                    this._setGridData();\n                }\n            });\n        }\n    }\n\n    _setGridData() {\n        let groupsRepoPermissions = this.groupsRepoPermissions || [];\n        let groupsBuildPermissions = this.groupsBuildPermissions || [];\n\n        this.buildsPermissionsGridOptions.setGridData(this.userBuildPermissions.concat(groupsBuildPermissions));\n\n        this._fixDataFormat(this.userRepoPermissions).then((fixedData)=>{\n            this.permissionsGridOptions.setGridData(fixedData.concat(groupsRepoPermissions));\n        });\n    }\n\n    _fixDataFormat(data,defer = null) {\n        defer = defer || this.$q.defer();\n        if (this.reposData.locals && this.reposData.remotes) {\n            data.forEach((record)=>{\n                if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY LOCAL') {\n                    record.repoKeysView = 'ANY LOCAL';\n                    record.reposList = angular.copy(this.reposData.locals);\n                }\n                else if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY REMOTE') {\n                    record.repoKeysView = 'ANY REMOTE';\n                    record.reposList = angular.copy(this.reposData.remotes);\n                }\n                else if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY DISTRIBUTION') {\n                    record.repoKeysView = 'ANY DISTRIBUTION';\n                    record.reposList = angular.copy(this.reposData.dists);\n                }\n                else if (record.repoKeys && record.repoKeys.length === 1 && record.repoKeys[0] === 'ANY') {\n                    record.repoKeysView = 'ANY';\n                    record.reposList = angular.copy(this.reposData.remotes).concat(this.reposData.locals).concat(this.reposData.dists);\n                }\n                else if (record.repoKeys) {\n                    record.repoKeysView = record.repoKeys.join(', ');\n                    record.reposList = angular.copy(record.repoKeys);\n                }\n            });\n            defer.resolve(data);\n        }\n        else {\n            this.$timeout(()=>{\n                this._fixDataFormat(data,defer);\n            })\n        }\n        return defer.promise;\n    }\n\n    _getUserData() {\n        this.userDao.getSingle({name: this.username}).$promise.then((data) => {\n            this.userdata = data.data;\n            this._getUserPermissions();\n            this.isInAdminGroup = this.userdata.groupAdmin;\n\n            if (this.userdata.internalPasswordDisabled) {\n                this.passwordOriginalyDisabled = true;\n            }\n            if (!this.userdata.groups) {\n                this.userdata.groups = [];\n            } else {\n                this._getGroupsPermissions();\n            }\n            this.saveCheckboxes();\n            this.ArtifactoryModelSaver.save();\n        });\n        this._getApiKeyState();\n    }\n\n    _getApiKeyState() {\n        this.userProfileDao.hasApiKey({},{username: this.username}).$promise.then((res)=>{\n            this.apiKeyExist = true;\n        }).catch(() => {\n            this.apiKeyExist = false;\n        })\n    }\n\n    _fixGroups(userdata) {\n        let groups = userdata.groups;\n        let groupsObjects = [];\n        groups.forEach((group)=> {\n            let realm = _.findWhere(this.groupsData, {groupName: group}).realm;\n            groupsObjects.push({groupName: group, realm: realm});\n        });\n        delete(userdata.groups);\n        userdata.userGroups = groupsObjects;\n    }\n\n    onEmailChanged() {\n        this.emailChanged = true;\n    }\n\n    updateUser() {\n        let payload = angular.copy(this.userdata);\n        _.extend(payload, this.input);\n        this._fixGroups(payload);\n        this.userDao.update({name: this.userdata.name}, payload).$promise.then((data) => {\n            this.savePending = false;\n            if (this.userdata.name === this.User.currentUser.name) {\n                if(this.emailChanged) {\n                    this.artifactoryState.removeState('setMeUpUserData');\n                }\n                this.User.reload();\n            }\n            this.ArtifactoryModelSaver.save();\n            this.$state.go('^.users');\n        }).catch(()=>this.savePending = false);\n    }\n\n    createNewUser() {\n        let payload = angular.copy(this.userdata);\n        _.extend(payload, this.input);\n        this._fixGroups(payload);\n        this.userDao.create(payload).$promise.then((data) => {\n            this.savePending = false;\n            this.ArtifactoryModelSaver.save();\n            this.$state.go('^.users');\n        }).catch(()=>this.savePending = false);\n    }\n\n    save() {\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        if (this.mode == 'edit')\n            this.updateUser();\n        if (this.mode == 'create')\n            this.createNewUser();\n    }\n\n    cancel() {\n        this.$state.go('^.users');\n    }\n\n    deleteUser() {\n        let json = {userNames:[this.username]};\n        this.modal.confirm(`Are you sure you want to delete user '${this.username}?'`)\n            .then(() => this.userDao.delete(json).$promise.then(()=>this.cancel()));\n    }\n\n    userIsInAdminGroup(){\n        let groups = this.userdata.groups;\n        let groupsData = this.groupsData;\n        for(let i in groups){\n            for(let j = 0; j < groupsData.length; j ++){\n                 if(groupsData[j].name === groups[i]\n                         && groupsData[j].adminPrivileges){\n                    return true;\n                 }\n            }\n        }\n        return false;\n    }\n\n    groupIsAdmin(group){\n        return _.find(this.groupsData, {groupName: group, adminPrivileges:true});\n    }\n\n    onCheckboxChanged(){\n        this.saveCheckboxes();\n    }\n\n    saveCheckboxes(){\n        this.lastSavedUserSettings = {\n            disableUIAccess: this.userdata.disableUIAccess,\n            profileUpdatable: this.userdata.profileUpdatable,\n            internalPasswordDisabled: this.userdata.internalPasswordDisabled,\n        };\n    }\n    onChangeGroups() {\n        this._getGroupsPermissions();\n        if (this.mode === 'edit') this._getUserPermissions();\n        this.$timeout(()=>{\n            this.isInAdminGroup = this.userIsInAdminGroup();\n            // Save last user settings before making changes\n            if(this.isInAdminGroup || this.userdata.admin){\n                this.userdata.disableUIAccess = false;\n                this.userdata.profileUpdatable = true;\n                this.userdata.internalPasswordDisabled = false;\n            } else {\n                this.userdata.disableUIAccess = this.lastSavedUserSettings.disableUIAccess;\n                this.userdata.profileUpdatable = this.lastSavedUserSettings.profileUpdatable;\n                this.userdata.internalPasswordDisabled = this.lastSavedUserSettings.internalPasswordDisabled;\n            }\n        });\n    }\n\n    onClickAdmin() {\n        if (this.userdata.admin) {\n            this.userdata.profileUpdatable = true;\n            this.userdata.internalPasswordDisabled = false;\n            this.userdata.disableUIAccess = false;\n        }\n    }\n    _getBuildPermissionCloumns() {\n        let nameCellTemplate = '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" href ui-sref=\"admin.security.permissions.edit({permission: row.entity.permissionName})\">{{row.entity.permissionName}}</a></div>';\n\n        return [\n            {\n                field: \"permissionName\",\n                name: \"Permission Target\",\n                displayName: \"Permission Target\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: nameCellTemplate,\n                width:'35%'\n            },\n            {\n                field: \"effectivePermission.principal\",\n                name: \"Applied To\",\n                displayName: \"Applied To\",\n                width: '40%'\n            },\n            {\n                field: \"effectivePermission.managed\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.managed'),\n                name: \"Manage\",\n                displayName: \"Manage\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.delete\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.delete'),\n                name: \"Delete\",\n                displayName: \"Delete\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.deploy\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.deploy'),\n                name: \"Deploy\",\n                displayName: \"Deploy\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.annotate\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.annotate'),\n                name: \"Annotate\",\n                displayName: \"Annotate\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.read\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.read'),\n                name: \"Read\",\n                displayName: \"Read\",\n                width:'15%',\n            }\n        ];\n    }\n    _getPermissionCloumns() {\n\n        let nameCellTemplate = '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" href ui-sref=\"admin.security.permissions.edit({permission: row.entity.permissionName})\">{{row.entity.permissionName}}</a></div>';\n\n        return [\n            {\n                field: \"permissionName\",\n                name: \"Permission Target\",\n                displayName: \"Permission Target\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: nameCellTemplate,\n                width:'16%'\n            },\n            {\n                field: \"repoKeys\",\n                name: \"Repositories\",\n                displayName: \"Repositories\",\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.reposList','row.entity.permissionName','row.entity.repoKeysView',true),\n                width:'16%'\n\n            },\n            {\n                field: \"effectivePermission.managed\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.managed'),\n                name: \"Manage\",\n                displayName: \"Manage\",\n                width:'9%'\n            },\n            {\n                field: \"effectivePermission.delete\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.delete'),\n                name: \"Delete/Overwrite\",\n                displayName: \"Delete/Overwrite\",\n                width:'15%'\n            },\n            {\n                field: \"effectivePermission.deploy\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.deploy'),\n                name: \"Deploy/Cache\",\n                displayName: \"Deploy/Cache\",\n                width:'14%'\n            },\n            {\n                field: \"effectivePermission.annotate\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.annotate'),\n                name: \"Annotate\",\n                displayName: \"Annotate\",\n                width:'9%'\n            },\n            {\n                field: \"effectivePermission.read\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.effectivePermission.read'),\n                name: \"Read\",\n                displayName: \"Read\",\n                width:'8%'\n            }\n        ]\n\n    }\n\n    isSaveDisabled() {\n        return this.savePending || !this.userForm || this.userForm.$invalid || ((this.input.password || this.input.retypePassword) && (this.input.password !== this.input.retypePassword));\n    }\n\n    checkPwdMatch(retypeVal) {\n        return !retypeVal || (retypeVal && this.input.password === retypeVal);\n    }\n\n    isAnonymous() {\n        return this.userdata.name === 'anonymous';\n    }\n\n    revokeApiKey() {\n        this.modal.confirm(`Are you sure you want to revoke API key for this user ?`)\n                .then(() => {\n                    this.userProfileDao.revokeApiKey({}, {username: this.username}).$promise.then(()=>{\n                        this.apiKeyExist = false;\n                    });\n\n                });\n    }\n\n    unlockUser() {\n        this.adminSecurityGeneralDao.unlockUsers({},[this.username]).$promise.then((res)=>{\n            if(res.status === 200) {\n                this.userdata.locked = false;\n            }\n        });\n    }\n\n\n    expirePassword() {\n        this.modal.confirm(`Are you sure you want to expire this user's password?`)\n            .then(() => {\n                this.userDao.expirePassword({}, {username: this.username}).$promise.then(()=> {\n                    this._getUserData();\n                })\n            });\n    }\n\n    unexpirePassword() {\n        this.userDao.unExpirePassword({}, {username: this.username}).$promise.then(()=> {\n            this._getUserData();\n        })\n    }\n\n    _getPasswordExpirationState() {\n        this.adminSecurityGeneralDao.get().$promise.then((data) => {\n            this.passwordExpirationEnabled = data.passwordSettings.expirationPolicy.enabled;\n            this.userLockEnabled = data.userLockPolicy.enabled;\n        });\n    }\n\n    revokeApiKey() {\n        this.modal.confirm(`Are you sure you want to revoke API key for user '${this.username}'?`)\n            .then(() => {\n                this.userProfileDao.revokeApiKey({}, {username: this.username}).$promise.then(()=>{\n                    this._getApiKeyState();\n                });\n            });\n    }\n\n    clearPasswordFields() {\n        delete this.input.password;\n        delete this.input.retypePassword;\n    }\n\n    onChangePasswordDisabled() {\n        if (this.userdata.internalPasswordDisabled) {\n            this.changePassword = false;\n            this.clearPasswordFields();\n            this.passwordReEnabled = false;\n        }\n        else {\n            if (this.passwordOriginalyDisabled) {\n                this.passwordReEnabled = true;\n            }\n        }\n        this.onCheckboxChanged();\n    }\n\n    initActions(actionsController) {\n\n        this.actionsController = actionsController;\n        actionsController.setActionsDictionary(ACTIONS);\n        actionsController.setActions([\n            {\n                name:'RevokeApiKey',\n                visibleWhen: () => this.userdata && this.apiKeyExist && this.userdata.name !== 'anonymous',\n                action: ()=>this.revokeApiKey()\n            },\n            {\n                name:'UnlockUser',\n                visibleWhen: () => this.userdata && this.userdata.locked && this.userdata.name !== 'anonymous',\n                action: ()=>this.unlockUser()\n            },\n            {\n                name:'ExpirePassword',\n                visibleWhen: () => this.userdata && this.passwordExpirationEnabled && this.mode==='edit' && !this.userdata.credentialsExpired && (this.userdata.realm === 'internal' || !this.userdata.realm)  && this.userdata.name !== 'anonymous',\n                action: ()=>this.expirePassword()\n            },\n            {\n                name:'UnexpirePassword',\n                visibleWhen: () => this.userdata && this.userdata.credentialsExpired && !this.userdata.locked  && this.userdata.name !== 'anonymous',\n                action: ()=>this.unexpirePassword()\n            },\n            {\n                name:'DeleteUser',\n                visibleWhen: () => this.mode === 'edit' && this.userdata && this.userdata.name !== 'anonymous',\n                action: ()=>this.deleteUser()\n            }\n        ]);\n\n    }\n\n    // Validations\n    checkUserName(value) {\n        return !(/[A-Z]/.test(value));\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/users/user_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    'RevokeApiKey': {title: 'Revoke Api Key', icon: 'icon-revoke-api'},\n    'UnlockUser': {title: 'Unlock User', icon: 'icon-unlock'},\n    'ExpirePassword': {title: 'Expire Password', icon: 'icon-expire'},\n    'UnexpirePassword': {title: 'Unexpire Password', icon: 'icon-unexpire'},\n    'DeleteUser': {title: 'Delete User', icon: 'icon-clear'}\n};\n\n\n// WEBPACK FOOTER //\n// ./constants/user_actions.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecuritySamlIntegrationController} from './saml_integration.controller';\n\nfunction samlIntegrationConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.saml_integration', {\n                params: {feature: 'samlsso'},\n                url: '/saml_integration',\n                templateUrl: 'states/admin/security/saml_integration/saml_integration.html',\n                controller: 'AdminSecuritySamlIntegrationController as AdminSecuritySamlIntegration'\n            })\n}\n\nexport default angular.module('security.saml_integration', [])\n        .config(samlIntegrationConfig)\n        .controller('AdminSecuritySamlIntegrationController', AdminSecuritySamlIntegrationController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/saml_integration/saml_integration.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminSecuritySamlIntegrationController {\n\n    constructor(SamlDao, ArtifactoryModelSaver, JFrogEventBus) {\n        this.samlDao = SamlDao.getInstance();\n        this.TOOLTIP = TOOLTIP.admin.security.SAMLSSOSettings;\n        this.artifactoryModelSaver = ArtifactoryModelSaver.createInstance(this,['saml']);\n        this.artifactoryEventBus = JFrogEventBus;\n        this._init();\n    }\n\n    _init() {\n        this.samlDao.get().$promise.then((data) => {\n            this.saml = data;\n            if (!angular.isDefined(this.saml.noAutoUserCreation)) {\n                this.saml.noAutoUserCreation = true;\n            }\n            this.artifactoryModelSaver.save();\n        });\n    }\n\n    save() {\n        this.samlDao.update(this.saml).$promise.then(()=>{\n            this.artifactoryModelSaver.save();\n            this.artifactoryEventBus.dispatch(EVENTS.FOOTER_DATA_UPDATED);\n        });\n    }\n\n    cancel() {\n        this.artifactoryModelSaver.ask(true).then(()=>{\n            this._init();\n        });\n    }\n    canSave() {\n        return this.samlForm.$valid;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/saml_integration/saml_integration.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {CrowdIntegrationController} from './crowd_integration.controller';\n\nfunction crowdIntegrationConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.crowd_integration', {\n                params: {feature: 'crowd'},\n                url: '/crowd_integration',\n                templateUrl: 'states/admin/security/crowd_integration/crowd_integration.html',\n                controller: 'CrowdIntegrationController as Crowd'\n            })\n}\n\nexport default angular.module('security.crowd_integration', [])\n        .config(crowdIntegrationConfig)\n        .controller('CrowdIntegrationController', CrowdIntegrationController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/crowd_integration/crowd_integration.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class CrowdIntegrationController {\n    constructor($scope, CrowdIntegrationDao, JFrogGridFactory, commonGridColumns, uiGridConstants, ArtifactoryModelSaver) {\n        this.crowdIntegrationDao = CrowdIntegrationDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.$scope = $scope;\n        this.crowdGroupsOptions = null;\n        this.crowd = {};\n        this.groupsData = [];\n        this.commonGridColumns = commonGridColumns;\n        this.uiGridConstants = uiGridConstants;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['crowd']);\n        this._createGrid();\n        this.crowdGroupsError = null;\n        this.batchActions = this._getBatchActions();\n        this.initCrowd();\n        this.usernameFilter = '';\n        this.filterType = 'User Name';\n        this.TOOLTIP = TOOLTIP.admin.security.crowd_integration;\n        this.connectionMethod = 'Crowd';\n    }\n\n    importCrowd(row) {\n        row.importIntoArtifactory = true;\n        this.crowdIntegrationDao.import({\n            action: 'import'\n        }, [row]).$promise.then((data)=> {\n            this.getCrowdGroups();\n                });\n    }\n\n    importCrowds() {\n        let selectedCrowds = this.crowdGroupsOptions.api.selection.getSelectedRows();\n        selectedCrowds.forEach(row=> {\n            row.importIntoArtifactory = true\n        });\n        this.crowdIntegrationDao.import({\n            action: 'import'\n        }, selectedCrowds).$promise\n            .then((data)=> {\n                this.getCrowdGroups();\n        });\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'import',\n                name: 'Import',\n                callback: () => this.importCrowds()\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-import',\n                tooltip: 'Import',\n                callback: row => this.importCrowd(row)\n            }\n        ]\n    }\n\n\n    initCrowd() {\n        this.loadFromServer().then(() => {\n            if (!this.initialized) {\n                this.initialized = true;\n            }\n            else this.getCrowdGroups()\n\n        });\n    }\n\n    loadFromServer(retainEnabled = false) {\n        return this.crowdIntegrationDao.get().$promise.then((data)=> {\n            // Keep enabled\n            if (retainEnabled && this.crowd) data.enableIntegration = this.crowd.enableIntegration;\n            this.connectionMethod = data.directAuthentication ? 'JIRA' : 'Crowd';\n            this.crowd = data;\n        if (!retainEnabled) this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    getCrowdGroups() {\n        if (this.crowd.enableIntegration && this.crowd.serverUrl && this.crowd.applicationName) {\n            this.crowdIntegrationDao.refresh({name: this.usernameFilter}, {\n                serverUrl: this.crowd.serverUrl,\n                applicationName: this.crowd.applicationName,\n                enableIntegration: this.crowd.enableIntegration,\n                noAutoUserCreation: this.crowd.noAutoUserCreation,\n                useDefaultProxy: this.crowd.useDefaultProxy,\n                directAuthentication: this.crowd.directAuthentication,\n                sessionValidationInterval: this.crowd.sessionValidationInterval,\n                password: this.crowd.password\n            }).$promise\n                .then((result)=> {\n                        this.groupsData = result.data.crowdGroupModels;\n                        this.crowdGroupsOptions.setGridData(this.groupsData);\n                })\n                .catch((result)=> {\n                        console.log(\"exception\")\n                    this.crowdGroupsError = result.data.error;\n                    this.crowdGroupsOptions.setGridData([]);\n                })\n        }\n        else {\n            this.crowdGroupsError = null;\n            if (this.crowdGroupsOptions) this.crowdGroupsOptions.setGridData([]);\n        }\n    }\n    changeFilter() {\n        this.usernameFilter = '';\n        this.getCrowdGroups();\n    }\n    isFilteringBy(filterType) {\n        return this.filterType == filterType;\n    }\n\n    _createGrid() {\n        this.crowdGroupsOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getColumns())\n            .setRowTemplate('default')\n            .setMultiSelect()\n            .setBatchActions(this._getBatchActions())\n            .setButtons(this._getActions())\n            .setGridData(this.groupsData)\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Group Name',\n                displayName: 'Group Name',\n                field: 'groupName',\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '45%'\n            },\n            {\n                name: 'Description',\n                displayName: 'Description',\n                field: 'description',\n                width: '45%'\n            },\n            {\n                name: 'Synced',\n                displayName: 'Synced',\n                field: 'existsInArtifactory',\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.existsInArtifactory'),\n                width: '10%'\n            }/*,\n            {\n                name: 'Import',\n                field: 'importIntoArtifactory'\n            }*/\n        ]\n    }\n\n    saveCrowd() {\n        this.crowd.directAuthentication = this.connectionMethod === 'JIRA';\n        this.crowdIntegrationDao.update(this.crowd)\n                .$promise.then(() => {\n            this.ArtifactoryModelSaver.save();\n                    this.getCrowdGroups()\n                });\n    }\n\n    reset() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.initCrowd();\n        });\n    }\n    testCrowd() {\n        this.crowd.directAuthentication = this.connectionMethod === 'JIRA';\n        this.crowd.action = 'test';\n        this.crowdIntegrationDao.test({\n            action: 'test',\n            serverUrl: this.crowd.serverUrl,\n            applicationName: this.crowd.applicationName,\n            enableIntegration: this.crowd.enableIntegration,\n            noAutoUserCreation: this.crowd.noAutoUserCreation,\n            useDefaultProxy: this.crowd.useDefaultProxy,\n            directAuthentication: this.directAuthentication,\n            sessionValidationInterval: this.crowd.sessionValidationInterval,\n            password: this.crowd.password\n\n        }).$promise.then((data)=>{});\n    }\n    onChangeNoAutoUserCreation() {\n        if (!this.crowd.noAutoUserCreation) this.crowd.allowUserToAccessProfile = false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/crowd_integration/crowd_integration.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminSecurityOAuthController} from './oauth.controller';\nimport {AdminSecurityOAuthProviderFormController} from './oauth_provider_form.controller';\n\nfunction oauthConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.oauth', {\n                params: {feature: 'oauthsso'},\n                url: '/oauth',\n                templateUrl: 'states/admin/security/oauth/oauth.html',\n                controller: 'AdminSecurityOAuthController as AdminSecurityOAuth'\n            })\n            .state('admin.security.oauth.edit', {\n                params: {feature: 'oauthsso'},\n                parent: 'admin.security',\n                url: '/oauth/{providerName}/edit',\n                templateUrl: 'states/admin/security/oauth/oauth_provider_form.html',\n                controller: 'AdminSecurityOAuthProviderFormController as ProviderForm'\n            })\n            .state('admin.security.oauth.new', {\n                params: {feature: 'oauthsso'},\n                parent: 'admin.security',\n                url: '/oauth/newprovider',\n                templateUrl: 'states/admin/security/oauth/oauth_provider_form.html',\n                controller: 'AdminSecurityOAuthProviderFormController as ProviderForm'\n            })\n\n}\n\nexport default angular.module('security.oauth', [])\n        .config(oauthConfig)\n        .controller('AdminSecurityOAuthController', AdminSecurityOAuthController)\n        .controller('AdminSecurityOAuthProviderFormController', AdminSecurityOAuthProviderFormController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/oauth/oauth.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminSecurityOAuthController {\n\n    constructor($scope, ArtifactoryModelSaver, JFrogModal, OAuthDao, JFrogGridFactory, commonGridColumns, uiGridConstants) {\n        this.$scope = $scope;\n        this.OAuthDao = OAuthDao;\n        this.modal = JFrogModal;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.commonGridColumns = commonGridColumns;\n        this.uiGridConstants = uiGridConstants;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['oauthData']);\n        this.providersGridOptions = null;\n        this.TOOLTIP = TOOLTIP.admin.security.OAuthSSO;\n        this.selectizeConfig = {\n            sortField: 'text',\n            create: false,\n            maxItems: 1\n        };\n        this._createGrid();\n        this._init();\n    }\n\n    _init() {\n        this.OAuthDao.get().$promise.then((data)=>{\n            this.oauthData = data;\n            this.selectizeOptions = [{text:' ',value: '*'}];\n            let githubProviders = _.filter(data.providers,(p)=>{return p.providerType === 'github'});\n            this.selectizeOptions = this.selectizeOptions.concat(_.map(githubProviders, (p)=>Object({text:p.name,value:p.name})));\n            if (!_.findWhere(githubProviders,{name: data.defaultNpm})) {\n                this.selectizeOptions.push({text: data.defaultNpm,value:data.defaultNpm});\n            }\n            data.providers.forEach((provider) => {\n                provider.typeDisplayName = _.findWhere(data.availableTypes, {type: provider.providerType}).displayName;\n            });\n            this.providersGridOptions.setGridData(data.providers);\n        this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    _createGrid() {\n        this.providersGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setSingleSelect()\n                .setButtons(this._getActions())\n                .setRowTemplate('default');\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: \"name\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\" ui-sref=\"^.oauth.edit({providerName: row.entity.name})\"><a href=\"\" class=\"jf-link\">{{row.entity.name}}</a></div>',\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '20%'\n            },\n            {\n                name: 'Type',\n                displayName: 'Type',\n                field: \"typeDisplayName\",\n                width: '15%'\n            },\n            {\n                name: 'ID',\n                displayName: 'ID',\n                field: \"id\",\n                width: '20%'\n            },\n            {\n                name: 'Auth Url',\n                displayName: 'Auth Url',\n                field: \"authUrl\",\n                width: '35%'\n            },\n            {\n                name: \"Enabled\",\n                displayName: \"Enabled\",\n                field: \"enabled\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.enabled'),\n                width: '10%'\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (row) => this.deleteProvider(row)\n            }\n\n        ];\n    }\n\n    deleteProvider(row) {\n        this.modal.confirm(`Are you sure you want to delete provider '${row.name}?'`)\n                .then(() => {\n                    this.OAuthDao.deleteProvider({},{provider: row.name}).$promise.then(()=>{\n                        this._init();\n                    });\n                });\n    }\n\n    save() {\n\n        let payload = _.cloneDeep(this.oauthData);\n\n        if (payload.defaultNpm === '*') delete payload.defaultNpm;\n        delete payload.providers;\n        delete payload.availableTypes;\n\n        this.OAuthDao.update(payload).$promise.then(()=>{\n            this.ArtifactoryModelSaver.save();\n        });\n\n    }\n\n    cancel() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this._init();\n        });\n    }\n    canSave() {\n        return this.oauthForm.$valid;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/oauth/oauth.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class AdminSecurityOAuthProviderFormController {\n\n    constructor($state, $stateParams, ArtifactoryModelSaver, OAuthDao) {\n        this.OAuthDao = OAuthDao;\n        this.$state = $state;\n        this.TOOLTIP = TOOLTIP.admin.security.OAuthSSO;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['providerData']);\n\n        this.selectizeConfig = {\n            sortField: 'text',\n            create: false,\n            maxItems: 1\n        };\n\n\n        if ($stateParams.providerName) {\n            this.mode = 'edit';\n            this.providerName = $stateParams.providerName;\n            this.title = 'Edit ' + this.providerName + ' Provider';\n        }\n        else {\n            this.mode = 'create';\n            this.providerData = {\n                enabled: true\n            };\n            this.title = 'Add New Provider';\n        }\n\n        this._getData();\n\n    }\n\n    _getData() {\n        this.OAuthDao.get().$promise.then((data) => {\n            this._setMandatoryFieldsData(data.availableTypes);\n\n            this.selectizeOptions = _.map(data.availableTypes, (t)=>Object({text:t.displayName,value:t.type}));\n            if (this.mode === 'create') {\n                this.providerData.providerType = data.availableTypes[0].type;\n                this._setDefaultValues();\n            }\n            else if (this.mode === 'edit') {\n                this.providerData = _.findWhere(data.providers,{name: this.providerName});\n            }\n        this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    _setMandatoryFieldsData(typesData) {\n        this.mandatoryFields = {};\n        this.fieldHolders = {};\n        typesData.forEach((typeRec) => {\n            this.mandatoryFields[typeRec.type] = {};\n            this.fieldHolders[typeRec.type] = {};\n            typeRec.mandatoryFields.forEach((field) => {\n                this.fieldHolders[typeRec.type][field] = typeRec.fieldHolders[typeRec.mandatoryFields.indexOf(field)] || '';\n                this.mandatoryFields[typeRec.type][field] = typeRec.fieldsValues[typeRec.mandatoryFields.indexOf(field)] || '';\n            });\n        });\n    }\n\n    _setDefaultValues() {\n        this.providerData.apiUrl = this.providerData.authUrl = this.providerData.tokenUrl = this.providerData.basicUrl =\n        this.providerData.apiUrlHolder = this.providerData.authUrlHolder = this.providerData.tokenUrlHolder = this.providerData.basicUrlHolder = '';\n        for (let key in this.mandatoryFields[this.providerData.providerType]) {\n            this.providerData[key] = this.mandatoryFields[this.providerData.providerType][key];\n            this.providerData[key + 'Holder'] = this.fieldHolders[this.providerData.providerType][key];\n        };\n    }\n\n    onChangeProviderType() {\n        this._setDefaultValues()\n    }\n\n    save() {\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        if (this.mode === 'edit') {\n            this.OAuthDao.updateProvider(this.providerData).$promise.then(()=>{\n                this.savePending = false;\n                this.ArtifactoryModelSaver.save();\n                this.$state.go('^.oauth');\n            }).catch(()=>this.savePending = false);\n        }\n        else if (this.mode === 'create') {\n            this.OAuthDao.createProvider(this.providerData).$promise.then(()=>{\n                this.savePending = false;\n                this.ArtifactoryModelSaver.save();\n                this.$state.go('^.oauth');\n            }).catch(()=>this.savePending = false);\n        }\n    }\n\n    cancel() {\n        this.$state.go('^.oauth');\n    }\n\n    isSaveDisabled() {\n        return this.savePending || !this.providerForm.$valid;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/oauth/oauth_provider_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {LdapSettingsController} from './ldap_settings.controller.js'\nimport {LdapSettingFormController} from './ldap_setting_form.controller.js'\nimport {LdapGroupFormController} from './ldap_group_form.controller.js'\n\nfunction ldapSettingConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.ldap_settings', {\n                url: '/ldap_settings',\n                templateUrl: 'states/admin/security/ldap_settings/ldap_settings.html',\n                controller: 'LdapSettingsController as Ldap'\n            })\n            .state('admin.security.ldap_settings.new', {\n                parent: 'admin.security',\n                url: '/ldap_settings/new',\n                templateUrl: 'states/admin/security/ldap_settings/ldap_setting_form.html',\n                controller: 'LdapSettingFormController as LdapSettingForm'\n            })\n            .state('admin.security.ldap_settings.edit', {\n                parent: 'admin.security',\n                url: '/ldap_settings/:ldapSettingKey/edit',\n                templateUrl: 'states/admin/security/ldap_settings/ldap_setting_form.html',\n                controller: 'LdapSettingFormController as LdapSettingForm'\n            })\n            .state('admin.security.ldap_settings.new_ldap_group', {\n                parent: 'admin.security',\n                url: '/ldap_groups/new',\n                templateUrl: 'states/admin/security/ldap_settings/ldap_group_form.html',\n                controller: 'LdapGroupFormController as LdapGroupForm'\n            })\n            .state('admin.security.ldap_settings.edit_ldap_group', {\n                parent: 'admin.security',\n                url: '/ldap_groups/:ldapGroupName/edit',\n                templateUrl: 'states/admin/security/ldap_settings/ldap_group_form.html',\n                controller: 'LdapGroupFormController as LdapGroupForm'\n            })\n}\n\nexport default angular.module('security.ldap_settings', [])\n        .config(ldapSettingConfig)\n        .controller('LdapSettingsController', LdapSettingsController)\n        .controller('LdapSettingFormController', LdapSettingFormController)\n        .controller('LdapGroupFormController', LdapGroupFormController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ldap_settings/ldap_settings.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class LdapSettingsController {\n    /*\n     z-index: 999;\n     background-color: red;\n     height: 100%;\n     width: 97%;\n     opacity: tr;\n     position: absolute;\n     */\n\n\n    constructor(JFrogModal, ArtifactoryFeatures, LdapDao, LdapGroupsDao, $timeout, $scope, JFrogGridFactory,\n                uiGridConstants) {\n        this.ldapDao = LdapDao;\n        this.ldapGroupsDao = LdapGroupsDao;\n        this.modal = JFrogModal;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.settingsGridOption = {};\n        this.uiGridConstants = uiGridConstants;\n        this.groupsGridOption = {};\n        this.ldapSettingsData = {};\n        this.ldapGroupsData = {};\n        this.$timeout = $timeout;\n        this.artifactoryFeatures = ArtifactoryFeatures;\n        this.$scope = $scope;\n        this.noLdapConfigurationMessage = CONFIG_MESSAGES.admin.security.ldap.noLdapConfigurationMessage;\n        this._initLdap();\n\n    }\n\n    resetLdapSettings() {\n        this._getLdapSettingsView();\n    }\n\n    //Call REST API for deletion of ldap settings\n    deleteLdapSetting(key) {\n        this.modal.confirm(\"Are you sure you want to delete LDAP: '\" + key + \"'?\")\n                .then(() => this._doDeleteLdapSetting(key));\n    }\n\n    _doDeleteLdapSetting(key) {\n        this.ldapDao.delete({key: key}).$promise.then((data) => {\n            this._getLdapSettingsView();\n        })\n    }\n\n    /***************************\n     ** Delete\n     ****************************/\n\n    //Call REST API for deletion of ldap group\n    deleteLdapGroup(name) {\n        this.modal.confirm(\"Are you sure you want to delete LDAP group: '\" + name + \"'?\")\n                .then(() => this._doDeleteLdapGroup(name));\n    }\n\n    _doDeleteLdapGroup(name) {\n        this.ldapGroupsDao.delete({name: name}).$promise.then((data) => {\n            this._getLdapGroupsView();\n        })\n    }\n\n    deleteSelectedLdapSettings() {\n        let selectedRows = this.settingsGridOption.api.selection.getSelectedGridRows();\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} LDAP settings?`)\n                .then(() => {\n                    selectedRows.forEach((row) => this._doDeleteLdapSetting(row.entity.key));\n                });\n    }\n\n    deleteSelectedLdapGroups() {\n        let selectedRows = this.groupsGridOption.api.selection.getSelectedGridRows();\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} LDAP groups?`)\n                .then(() => {\n                    selectedRows.forEach((row) => this._doDeleteLdapGroup(row.entity.name));\n                });\n    }\n\n    /***************************\n     ** Move up / down\n     ****************************/\n    //check if a row (in the settings grid) can move up or down\n    canMove(key, dir) {\n        var data = this.ldapSettingsData;\n        var index = this._indexOf(key);\n        return ((dir === 'up' && index > 0) || (dir === 'down' && index < data.length - 1));\n    }\n\n    //move a row (in the settings grid) up or down\n    moveLdapSetting(key, dir) {\n        var data = this.ldapSettingsData;\n        var index = this._indexOf(key);\n        if (dir === 'up' && index > 0) {\n            this._swapSettings(index, index - 1);\n        }\n        else if (dir === 'down' && index < data.length - 1) {\n            this._swapSettings(index, index + 1);\n        }\n    }\n\n    /***************************\n     ** Initialization\n     ****************************/\n\n    //initialize everything...\n    _initLdap() {\n\n        this._createGrids();\n        this._getLdapSettingsView();\n        this._getLdapGroupsView().then(()=>this._disableAsOss());\n\n    }\n\n    //get settings ('view') data from the REST API\n    _getLdapSettingsView() {\n        this.ldapDao.query().$promise.then((data) => {\n            this.ldapSettingsData = data;\n            this.settingsGridOption.setGridData(this.ldapSettingsData);\n        })\n    }\n\n    //get ldap groups ('view') data from the REST API\n    _getLdapGroupsView() {\n        return this.ldapGroupsDao.query().$promise.then((data) => {\n            this.ldapGroupsData = data;\n            this.groupsGridOption.setGridData(this.ldapGroupsData);\n        })\n    }\n\n    _disableAsOss() {\n\n    }\n\n    //create both ldap settings grid and ldap groups grid\n    _createGrids() {\n        this.settingsGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getSettingsColumns())\n                .setSingleSelect()\n                .setDraggable(this.reorderLdap.bind(this))\n                .setButtons(this._getSettingsActions());\n        //.setBatchActions(this._getSettingsBatchActions());\n\n        this.groupsGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getGroupsColumns())\n                .setSingleSelect()\n                .setRowTemplate('default')\n                .setButtons(this._getGroupsActions());\n        //.setBatchActions(this._getGroupsBatchActions());\n    }\n\n    reorderLdap() {\n        return this.ldapDao.reorder(this.getLdapOrder()).$promise;\n    }\n\n    getLdapOrder() {\n        let ldapOrderList = [];\n        this.settingsGridOption.data.forEach((data)=> {\n            ldapOrderList.push(data.key);\n        });\n        return ldapOrderList;\n    }\n\n    noData(){\n        return ((!this.ldapSettingsData) || this.ldapSettingsData.length === 0) &&\n                ((!this.ldapGroupsData) || this.ldapGroupsData.length === 0);\n    }\n\n    /***************************\n     ** Settings Grid\n     ****************************/\n    //get the columns for the settings grid\n    _getSettingsColumns() {\n\n        return [\n            {\n                name: \"Settings Name\",\n                displayName: \"Settings Name\",\n                field: \"key\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ui-sref=\"^.ldap_settings.edit({ldapSettingKey: row.entity.key})\" class=\"jf-link\" >{{ COL_FIELD }}</a></div>',\n                enableSorting: false\n            },\n            {\n                name: \"LDAP URL\",\n                displayName: \"LDAP URL\",\n                field: \"ldapUrl\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ng-href=\"{{ COL_FIELD }}\" class=\"jf-link\">{{ COL_FIELD }}</a></div>',\n                enableSorting: false\n            }\n\n        ]\n    }\n\n    //get the actions for the settings grid\n    _getSettingsActions() {\n        return [\n            /*{\n             icon: 'icon icon-angle-double-up',\n             tooltip: 'Move Up',\n             visibleWhen: row => this.canMove(row.key,'up'),\n             callback: row => this.moveLdapSetting(row.key,'up')\n             },\n             {\n             icon: 'icon icon-angle-double-down',\n             tooltip: 'Move Down',\n             visibleWhen: row => this.canMove(row.key,'down'),\n             callback: row => this.moveLdapSetting(row.key,'down')\n             },*/\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this.deleteLdapSetting(row.key)\n            }\n\n        ];\n    }\n\n    //\n    //_getSettingsBatchActions() {\n    //    return [\n    //        {\n    //            icon: 'clear',\n    //            name: 'Delete',\n    //            callback: () => this.deleteSelectedLdapSettings()\n    //        },\n    //    ]\n    //}\n    /***************************\n     ** Groups Grid\n     ****************************/\n    _getGroupsColumns() {\n        return [\n            {\n                name: \"Settings Name\",\n                displayName: \"Settings Name\",\n                field: \"name\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ui-sref=\"^.ldap_settings.edit_ldap_group({ldapGroupName: row.entity.name})\" class=\"jf-link\">{{ COL_FIELD }}</a></div>'\n            },\n            {\n                name: \"LDAP Settings\",\n                displayName: \"LDAP Settings\",\n                field: \"enabledLdap\"\n            },\n            {\n                name: \"Strategy\",\n                displayName: \"Strategy\",\n                field: \"strategy\"\n            }\n        ]\n    }\n\n    _getGroupsActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this.deleteLdapGroup(row.name)\n            }\n\n        ];\n    }\n\n\n    _getGroupsBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedLdapGroups()\n            },\n        ]\n    }\n\n    //get the index of the ldap settings (key) in this.ldapSettingsData\n    _indexOf(key) {\n        var data = this.ldapSettingsData;\n\n        var index = -1;\n\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].key === key) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    //swap the order of two ldap settings\n    _swapSettings(index1, index2) {\n        var data = this.ldapSettingsData;\n\n        var temp = data[index2];\n        data[index2] = data[index1];\n        data[index1] = temp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ldap_settings/ldap_settings.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nlet $stateParams, LdapDao, $state, JFrogGridFactory;\n\nexport class LdapSettingFormController {\n    constructor(_$stateParams_, _$state_, _LdapDao_, _JFrogGridFactory_, JFrogNotifications, ArtifactoryModelSaver, ArtifactoryFeatures) {\n        $state = _$state_;\n        $stateParams = _$stateParams_;\n        LdapDao = _LdapDao_;\n        JFrogGridFactory = _JFrogGridFactory_;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.testConnection = {};\n        this.isNew = !$stateParams.ldapSettingKey;\n        this.TOOLTIP = TOOLTIP.admin.security.LDAPSettingsForm;\n        this.features = ArtifactoryFeatures;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['ldap']);\n        this._initLdapSetting();\n    }\n\n    _initLdapSetting() {\n        if (this.isNew) {\n            this.ldap = {\n                enabled: true,\n                autoCreateUser: true,\n                search: {searchSubTree: true},\n                emailAttribute: 'mail',\n                ldapPoisoningProtection: true\n            };\n        }\n        else {\n            LdapDao.get({key: $stateParams.ldapSettingKey}).$promise\n                    .then((ldapSetting) => {\n                        this.ldap = ldapSetting\n            this.ArtifactoryModelSaver.save();\n                    });\n        }\n    }\n\n    save() {\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        if (this.ldapEditForm.$valid) {\n            if (!this.ldap.userDnPattern && !this.ldap.search.searchFilter) {\n                this.messageUserOrSearch();\n            }\n            else {\n                if (this.ldap.search && this._isSearchFieldsNull(this.ldap.search)) {\n                    this.ldap.search = undefined;\n                }\n                let whenSaved = this.isNew ? LdapDao.save(this.ldap) : LdapDao.update(this.ldap);\n                whenSaved.$promise.then(() => {\n                    this.savePending = false;\n                    this.ArtifactoryModelSaver.save();\n                    this._end()\n                }).catch(()=>this.savePending = false);\n            }\n        }\n    }\n\n    _isSearchFieldsNull(search) {\n        return (!search.managerDn && !search.managerPassword && !search.searchBase && !search.searchFilter);\n    }\n\n    cancel() {\n        this._end();\n    }\n\n    _end() {\n        $state.go('^.ldap_settings');\n    }\n\n    doTestConnection() {\n        if (this.ldapEditForm.$valid) {\n            if (!this.ldap.userDnPattern && !this.ldap.search.searchFilter) {\n                this.messageUserOrSearch();\n            }\n            else {\n                var testData = {};\n                _.extend(testData, this.ldap);\n                _.extend(testData, this.testConnection);\n\n                LdapDao.test(testData);\n            }\n        }\n    }\n\n    messageUserOrSearch() {\n        this.artifactoryNotifications.create({error: 'LDAP settings should provide a userDnPattern or a searchFilter (or both)'});\n        this.savePending = undefined;\n    }\n\n    testConnectionOnEnterPress($event) {\n        $event.preventDefault();\n        if (!!this.testConnection.testUsername && !!this.testConnection.testPassword) {\n            this.doTestConnection();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ldap_settings/ldap_setting_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\n// Injectables:\nlet $q, $scope, $state, $stateParams, JFrogGridFactory, LdapGroupsDao, LdapDao, ArtifactoryModelSaver;\nexport class LdapGroupFormController {\n\n    constructor(_$q_, _$scope_, _$state_, _$stateParams_, _JFrogGridFactory_, _LdapGroupsDao_, _LdapDao_, _ArtifactoryModelSaver_) {\n        $q = _$q_;\n        $scope = _$scope_;\n        $state = _$state_;\n        $stateParams = _$stateParams_;\n        JFrogGridFactory = _JFrogGridFactory_;\n        ArtifactoryModelSaver = _ArtifactoryModelSaver_.createInstance(this,['ldapGroup']);\n        LdapGroupsDao = _LdapGroupsDao_;\n        LdapDao = _LdapDao_;\n\n        this.isNew = !$stateParams.ldapGroupName;\n        this._initLdapSetting();\n        this._initGroupLabels();\n        this._initSelectizeConfig();\n        this._initGroupSyncGrid();\n        this._initStrategyOptions();\n        this.isImportDisabled = true;\n        this.TOOLTIP = TOOLTIP.admin.security.LDAPGroupsForm;\n    }\n\n    /***************************\n    ** Initialization\n    ****************************/\n    _initLdapSetting() {\n        if (this.isNew) {\n            this.ldapGroup = {\n                enabledLdap: ' ',\n                strategy: \"STATIC\",\n                subTree: true\n            };\n            this.ldapGroupPromise = $q.when(this.ldapGroup);\n        }\n        else {\n            this.ldapGroupPromise = LdapGroupsDao.get({name: $stateParams.ldapGroupName}).$promise\n                .then((ldapGroup) => {\n                        this.ldapGroup = ldapGroup;\n                        ArtifactoryModelSaver.save();\n                    });\n        }\n    }\n\n    _initGroupLabels() {\n        if (this.isNew) this.onStrategyChange();\n        else {\n            this.ldapGroupPromise.then(() => {            \n                this._setGroupLabels(this.ldapGroup.strategy);\n            })\n        }\n    }\n\n    _initSelectizeConfig() {\n        LdapDao.query().$promise.then((ldapSettingsData) => {\n            this.selectizeConfig = {\n                sortField: 'text',\n                create: true,\n                maxItems: 1\n            };\n\n            this.selectizeOptions = ldapSettingsData.map((ldapSetting) => ldapSetting.key);\n            this.selectizeOptions.push(' ');\n        });\n    }\n\n    _initGroupSyncGrid() {\n        this.syncGroupsGridOptions = JFrogGridFactory.getGridInstance($scope)\n                .setColumns(this._getSyncGroupsGridColumns())\n                .setRowTemplate('default')\n                .setBatchActions(this._getBatchActions())\n                .setMultiSelect()\n                .setGridData([]);\n\n        this.syncGroupsGridOptions.onSelectionChange =\n        this.syncGroupsGridOptions.onSelectionChangeBatch = () => {\n            var selectedRows = this.syncGroupsGridOptions.api.selection.getSelectedRows();\n            this.isImportDisabled = !selectedRows.length;\n        };\n    }\n\n    _initStrategyOptions() {\n        this.strategyOptions = [\n            {value: 'STATIC', text: 'Static'},\n            {value: 'DYNAMIC', text: 'Dynamic'},\n            {value: 'HIERARCHICAL', text: 'Hierarchy'}\n        ];\n    }\n\n    save() {\n        let whenSaved = this.isNew ? LdapGroupsDao.save(this.ldapGroup) : LdapGroupsDao.update(this.ldapGroup);\n        whenSaved.$promise.then(() => {\n            ArtifactoryModelSaver.save();\n            this._end()\n        });\n    }\n\n    cancel() {\n        this._end();\n    }\n\n    _end() {\n        $state.go('^.ldap_settings');\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'import',\n                name: 'Import',\n                callback: () => this.importSyncGroups()\n            }\n        ]\n    }\n\n    importSyncGroups() {\n        if (this.isImportDisabled) return;\n\n        var importData = {};\n        var selectedRows = this.syncGroupsGridOptions.api.selection.getSelectedRows();\n        _.extend(importData, {importGroups: selectedRows, ldapGroupSettings: this.ldapGroup});\n        _.extend(importData, {name: this.ldapGroup.name});\n\n        LdapGroupsDao.import(importData).$promise.then((data) => {\n            this.refreshSyncGroups(this.ldapGroup.usernameFilter);\n        })\n    }\n\n    importSyncGroup(row) {\n        var importData = {};\n        _.extend(importData, {importGroups: [row], ldapGroupSettings: this.ldapGroup});\n        _.extend(importData, {name: this.ldapGroup.name});\n\n        LdapGroupsDao.import(importData).$promise.then((data) => {\n            this.refreshSyncGroups(this.ldapGroup.usernameFilter);\n        })\n    }\n\n    refreshSyncGroups(username) {\n        if (!this.ldapGroupsEditForm.$valid) return;\n\n        var refreshData = {};\n        _.extend(refreshData,this.ldapGroup);\n        _.extend(refreshData,{name: refreshData.name, username: username});\n\n        LdapGroupsDao.refresh(refreshData).$promise.then((result) => {\n            result.data.forEach((group)=>{\n                group.syncState = group.requiredUpdate === 'IN_ARTIFACTORY';\n            });\n            this.syncGroupsGridOptions.setGridData(result.data);\n        }).catch(() => {\n            this.syncGroupsGridOptions.setGridData([]);\n        }).finally(() => {\n            if (this) this.isImportDisabled = true;\n        });\n    }\n\n    /***************************\n    ** Strategy\n    ****************************/    \n    _setGroupLabels(strategy) {\n        switch(strategy.toLowerCase()) {\n            case 'static':\n            case 'dynamic':\n                this.labels = {groupKeyMember: 'Group Member Attribute'};\n                break;\n            case 'hierarchical':\n                this.labels = {groupKeyMember: 'User DN Group Key'};\n                break;\n        }\n    }\n\n    onStrategyChange() {\n        var strategy = this.ldapGroup.strategy;\n        this._getStrategy(strategy).then((data) => {\n            this.ldapGroup.groupMemberAttribute = data.groupKeyMember;\n            this.ldapGroup.groupNameAttribute = data.groupNameAttribute;\n            this.ldapGroup.descriptionAttribute = data.description;\n            this.ldapGroup.filter = data.filter;\n        });\n\n        this._setGroupLabels(strategy);\n    }\n\n    _getStrategy(strategy) {\n        return LdapGroupsDao.getstrategy({name:'dummy', strategy: strategy.toLowerCase()}).$promise;\n    }\n\n    /***************************\n    ** Grid\n    ****************************/\n    //get the columns for the synchronize groups grid (inside the ldap groups' modal)\n    _getSyncGroupsGridColumns() {\n\n        return [\n            {\n                name: \"Group Name\",\n                displayName: \"Group Name\",\n                field: \"groupName\",\n                width: '30%'\n            },\n            {\n                name: \"Description\",\n                displayName: \"Description\",\n                field: \"description\",\n                width: '60%'\n            },\n            {\n                name: \"Sync State\",\n                displayName: \"Sync State\",\n                field: \"syncState\",\n                cellTemplate: '<div ng-if=\"row.entity.syncState\" class=\"grid-checkbox\"><input class=\"text-center\" ' +\n                'ng-model=\"row.entity.syncState\" type=\"checkbox\" disabled/><span class=\"icon icon-v\"></span></div>',\n                width: '10%',\n                customActions: [{\n                    icon: 'icon icon-import',\n                    tooltip: 'Import',\n                    name: 'Import',\n                    callback: row => this.importSyncGroup(row)\n                }]\n            }\n        ]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ldap_settings/ldap_group_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {SigningKeysController} from './signing_keys.controller';\n\nfunction signingKeysConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.signing_keys', {\n                params: {feature: 'signingkeys'},\n                url: '/signing_keys',\n                templateUrl: 'states/admin/security/signing_keys/signing_keys.html',\n                controller: 'SigningKeysController as SigningKeys'\n            })\n}\n\nexport default angular.module('security.signing_keys', [])\n        .config(signingKeysConfig)\n        .controller('SigningKeysController', SigningKeysController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/signing_keys/signing_keys.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport API from '../../../../constants/api.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nexport class SigningKeysController {\n\n    constructor($timeout, FileUploader, JFrogEventBus, SigningKeysDao, KeystoreDao, JFrogNotifications) {\n        this.$timeout = $timeout;\n        this.signingKeysDao = SigningKeysDao;\n        this.keystoreDao = KeystoreDao;\n        this.keyStore = {};\n        this.FileUploader = FileUploader;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.JFrogEventBus = JFrogEventBus;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n        this.TOOLTIP = TOOLTIP.admin.security.signingKeys;\n        this.publicKeyValue = 'No public key installed';\n        this.privateKeyValue = 'No private key installed';\n        this.initSigningKeys();\n    }\n\n    initSigningKeys() {\n\n        this.getSigningKeysData();\n        this.keyPairNames = [];\n        this.keystoreFileUploaded = false;\n        this.getKeyStoreData();\n        //-----public key-----//\n        this.uploaderPublicKey = new this.FileUploader();\n        this.uploaderPublicKey.onSuccessItem = this.onUploadPublicKeySuccess.bind(this);\n        this.uploaderPublicKey.onErrorItem = this.onUploadPublicKeyFail.bind(this);\n        this.uploaderPublicKey.url = `${API.API_URL}/signingkeys/install?public=true`;\n        this.uploaderPublicKey.headers = {'X-Requested-With': 'artUI'};\n        this.uploaderPublicKey.removeAfterUpload = true;\n        //-----private key-----//\n        this.uploaderPrivateKey = new this.FileUploader();\n        this.uploaderPrivateKey.url = `${API.API_URL}/signingkeys/install?public=false`;\n        this.uploaderPrivateKey.headers = {'X-Requested-With': 'artUI'};\n        this.uploaderPrivateKey.onSuccessItem = this.onUploadPrivateKeySuccess.bind(this);\n        this.uploaderPrivateKey.onErrorItem = this.onUploadPrivateKeyFail.bind(this);\n        this.uploaderPrivateKey.removeAfterUpload = true;\n        //------key pair-----//\n        this.uploaderKeyStore = new this.FileUploader();\n        this.uploaderKeyStore.onSuccessItem = this.onUploadKeyStoreSuccess.bind(this);\n        this.uploaderKeyStore.onErrorItem = this.onUploadKeyStoreFail.bind(this);\n        this.uploaderKeyStore.onAfterAddingAll = this.onUploadKeyFileAdded.bind(this);\n        this.uploaderKeyStore.url = `${API.API_URL}/keystore/upload?pass=`;\n        this.uploaderKeyStore.headers = {'X-Requested-With': 'artUI'};\n        this.uploaderKeyStore.removeAfterUpload = true;\n    }\n\n    getSigningKeysData() {\n        this.signingKeysDao.get().$promise.then((result) => {\n            this.publicKeyInstalled = result.publicKeyInstalled;\n            this.privateKeyInstalled = result.privateKeyInstalled;\n            this.publicKeyValue = result.publicKeyInstalled ? 'Public key is installed' : 'No public key installed';\n            this.privateKeyValue = result.privateKeyInstalled ? 'Private key is installed' : 'No private key installed';\n            this.publicKeyLink = result.publicKeyLink;\n            this.passPhrase = result.passPhrase;\n        });\n    }\n\n    getKeyStoreData() {\n        this.keystoreDao.get().$promise.then((keyStore) => {\n            this.keyStoreExist = keyStore.keyStoreExist;\n            _.map(keyStore.keyStorePairNames, (keypairName) => {\n                this.keyPairNames.push(keypairName);\n            })\n        });\n    }\n\n    onUploadPublicKeySuccess(fileDetails, response) {\n        this.getSigningKeysData();\n        this.artifactoryNotifications.create(response.feedbackMsg);\n    }\n\n    onUploadPrivateKeySuccess(fileDetails, response) {\n        this.getSigningKeysData();\n        this.artifactoryNotifications.create(response.feedbackMsg);\n    }\n\n    onUploadPublicKeyFail(fileDetails, response) {\n        this.artifactoryNotifications.create(response);\n    }\n    onUploadPrivateKeyFail(fileDetails, response) {\n        this.artifactoryNotifications.create(response);\n    }\n\n    upload(type) {\n        if (type === 'public') {\n            this.uploaderPublicKey.queue[0].upload();\n        }\n        if (type === 'private') {\n            this.uploaderPrivateKey.queue[0].upload();\n        }\n        if (type === 'keyStore') {\n            this.uploaderKeyStore.queue[0].url = `${API.API_URL}/keystore/upload?pass=${this.keyPair.keyStorePassword}`;\n            this.uploaderKeyStore.queue[0].upload();\n        }\n    }\n\n    removeKey(isPublic) {\n        this.signingKeysDao.delete({public: isPublic}).$promise.then((result) => this.getSigningKeysData());\n    }\n\n    verifyPhrase(shouldNotify = true) {\n        //this.signingKeysDao.setNotification('post', shouldNotify);\n        let method = shouldNotify ? 'post' : 'postWithoutNotifications';\n        if (this.signingKeysDao[method])\n            return this.signingKeysDao[method]({action: 'verify', passPhrase: this.passPhrase}).$promise;\n    }\n\n    updatePhrase() {\n        let verifyPromise = this.verifyPhrase(false);\n        if (verifyPromise) {\n            verifyPromise\n                .then(() => {\n                    this.signingKeysDao.put({action: 'update', passPhrase: this.passPhrase});\n                })\n                .catch((response) => this.artifactoryNotifications.create(response.data));\n            ;\n        }\n    }\n\n    checkMatchingPasswords() {\n        this.$timeout(() => {\n            if (this.signingKeysForm.password.$valid && this.signingKeysForm.repeatPassword.$valid) {\n            this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION);\n            }\n        });\n    }\n\n    updatePassword() {\n        this.keystoreDao.updatePassword({action: 'updatePass'}, {password: this.user.password}).$promise\n            .then(() => {\n                this.keyStoreExist = true;\n            });\n    }\n\n    removeKeyStore() {\n        this.keystoreDao.removeKeystore({action: 'password'}).$promise\n            .then(() => {\n                //_.forEach(this.keyPairNames, this.removeKeypair, this);\n                this.keyStoreExist = false;\n                this.keyPairNames = [];\n                this.keyPairName = '';\n                this.user.password = '';\n                this.repeatPassword = '';\n            })\n    }\n\n    onUploadKeyFileAdded() {\n        this.keyStorePassRequired = true;\n    }\n    onUploadKeyStoreSuccess(fileDetails, keyStore) {\n        this.keyStorePassRequired = false;\n        this.keystoreFileUploaded = true;\n        this.keyStore = keyStore;\n        this.aliases = keyStore.availableAliases;\n        this.alias = this.aliases[0];\n        this.keyPair.keyStorePassword = '';\n        this.artifactoryNotifications.create(keyStore.feedbackMsg);\n    }\n\n    onUploadKeyStoreFail(fileDetails, response) {\n        this.keyStorePassRequired = false;\n        this.artifactoryNotifications.create(response);\n    }\n\n    saveKeypair() {\n        let payload = _.cloneDeep(this.keyStore);\n        delete payload.feedbackMsg;\n        delete payload.availableAliases;\n        payload.alias = this.alias;\n\n        this.keystoreDao.save({action: 'add'}, payload).$promise\n            .then((response) => {\n                this.keyPairNames.push(this.keyStore.keyPairName);\n                this.keyStore.keyPairName = '';\n                this.keyStore.privateKeyPassword = '';\n                this.alias = '';\n                this.aliases = [];\n            });\n        //.finally(() => this.keystoreFileUploaded = false);\n    }\n\n    removeKeypair() {\n        this.keystoreDao.removeKeypair({name: this.keyPairName}).$promise.then((response) => {\n            _.pull(this.keyPairNames, this.keyPairName);\n            this.keyPairName = '';\n        }).catch((response) => {\n            if (response.error) {\n                let keyPairNames = _.words(response.error);\n                _.pull(this.keyPairNames, keyPairNames.pop());\n            }\n        });\n    }\n\n    cancelKeypairUpload() {\n        //this.keystoreFileUploaded = false;\n        this.keyStore.keyPairName = '';\n        this.keyStore.privateKeyPassword = '';\n    }\n\n    canUpdatePassword() {\n        return this.signingKeysForm.password.$valid && this.signingKeysForm.repeatPassword.$valid;\n    }\n\n    canUploadKeystore() {\n        return this.keyStoreExist &&\n            this.signingKeysForm.keyStorePassword.$valid &&\n            this.uploaderKeyStore.queue.length;\n    }\n\n    canUploadDebianKey(uploader) {\n        return this[uploader].queue.length;\n    }\n\n    canRemoveKeyPairs() {\n        return this.keyStoreExist && this.keyPairNames.length && this.keyPairName;\n    }\n\n    canUpdatePhrase() {\n        return this.publicKeyInstalled && this.privateKeyInstalled && this.passPhrase;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/signing_keys/signing_keys.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {TrustedKeysController} from './trusted_keys.controller';\n\nfunction trustedKeysConfig($stateProvider) {\n\n\t$stateProvider\n\t\t.state('admin.security.trusted_keys', {\n\t\t\tparams: {feature: 'trustedkeys'},\n\t\t\turl: '/trusted_keys',\n\t\t\ttemplateUrl: 'states/admin/security/trusted_keys/trusted_keys.html',\n\t\t\tcontroller: 'TrustedKeysController as TrustedKeys'\n\t\t})\n}\n\nexport default angular.module('security.trusted_keys', [])\n                      .config(trustedKeysConfig)\n                      .controller('TrustedKeysController', TrustedKeysController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/trusted_keys/trusted_keys.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class TrustedKeysController {\n\n\tconstructor($scope, $rootScope, TrustedKeysDao, JFrogTableViewOptions, JFrogModal, JFrogNotifications) {\n\t\tthis.$scope = $scope;\n\t\tthis.$rootScope = $rootScope;\n\t\tthis.TrustedKeysDao = TrustedKeysDao;\n\t\tthis.JFrogTableViewOptions = JFrogTableViewOptions;\n\t\tthis.artifactoryNotifications = JFrogNotifications;\n\t\tthis.modal = JFrogModal;\n\n\t\tthis.modalScope = null;\n\n\n\t\tthis._createGrid();\n\t\tthis._getTrustedKeysData();\n\n\t}\n\n\t_getTrustedKeysData() {\n\t\tthis.TrustedKeysDao.getTrustedKeys().$promise.then((response) => {\n\t\t\tthis.trustedKeys = response;\n\t\t\tthis.tableViewOptions.setData(this.trustedKeys)\n\n\t\t});\n\t}\n\n\t_createGrid() {\n\t\tthis.tableViewOptions = new this.JFrogTableViewOptions(this.$scope);\n\t\tthis.tableViewOptions.setColumns(this._getColumns())\n\t\t    .setRowsPerPage(20)\n\t\t    .setObjectName('Key/Keys')\n\t\t    .setEmptyTableText('No Trusted Keys')\n\t\t\t.setActions(this.getActions())\n\t\t    .setBatchActions(this.getBatchActions())\n\t\t    .setNewEntityAction(() => {\n\t\t    \tthis._addNewLicense();\n\t\t    });\n\t}\n\n\t_addNewLicense() {\n\t\tthis.modalScope = this.$rootScope.$new();\n\t\tthis.modalScope.modalTitle = \"Add new trusted key\";\n\t\tthis.modalScope.ctrl = {\n\t\t\taliasName: '',\n\t\t\tcretificateKey: ''\n\t\t};\n\t\tthis.modalScope.dndStyle = {'width':\"100%\",'height':\"200px\"}; // the primitive should be wrapped with some object\n\t\tthis.modalScope.dndOnError = (errorMessage) => {\n\t\t\tthis.artifactoryNotifications.create({\n\t\t\t\terror: errorMessage\n\t\t\t});\n\t\t};\n\n\t\tthis.modalScope.saveKey = () => {\n\t\t\tlet certificateJson = {\n\t\t\t\talias: this.modalScope.ctrl.aliasName,\n\t\t\t\tpublic_key: this.modalScope.ctrl.cretificateKey.replace(/(?:\\r\\n|\\r)/g, '\\n')\n\t\t\t}\n\n\t\t\tthis.TrustedKeysDao.AddTrustedKey(certificateJson).$promise.then((response) => {\n\t\t\t\tif (response.status === 201) {\n\t\t\t\t\tthis._getTrustedKeysData();\n\t\t\t\t\tthis.modalInstance.close();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthis.modalScope.canSave = () =>{\n\t\t\treturn !this.modalScope.ctrl.aliasName && !this.modalScope.ctrl.aliasName.length\n\t\t\t\t|| !this.modalScope.ctrl.cretificateKey && !this.modalScope.ctrl.cretificateKey.length;\n\t\t};\n\n\t\tthis.modalScope.closeModal = () => this.modalInstance.close();\n\n\t\tthis.modalInstance = this.modal.launchModal('ssh_key_modal', this.modalScope);\n\t}\n\n\t_getColumns() {\n\t\treturn [\n\t\t\t{\n\t\t\t\theader: \"Alias\",\n\t\t\t\tfield: \"alias\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.alias}}</div>',\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: \"Key ID\",\n\t\t\t\tfield: \"kid\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.kid}}</div>',\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: \"Issued By\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.issuedBy}}</div>',\n\t\t\t\tfield: \"issuedBy\",\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: \"Issued On\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.issued | date: \"yyyy-MM-dd HH:mm:ss Z\"}}</div>',\n\t\t\t\tfield: \"issued\",\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: \"Valid Until\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.expiry || \"\"}}</div>',\n\t\t\t\tfield: \"expiry\",\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: \"Fingerprint\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.fingerprint}}</div>',\n\t\t\t\tfield: \"fingerprint\",\n\t\t\t\twidth: '20%'\n\t\t\t}\n\t\t]\n\t}\n\n\tgetBatchActions() {\n\t\treturn [\n\t\t\t{\n\t\t\t\ticon: 'clear',\n\t\t\t\tname: 'Delete',\n\t\t\t\tcallback: (selected) => {\n\t\t\t\t\tlet keysToRemove = _.map(selected, (val) => {\n\t\t\t\t\t\treturn {'kid': val.kid}\n\t\t\t\t\t});\n\t\t\t\t\tlet message = 'Are you sure you want to delete ';\n\t\t\t\t        message += (keysToRemove.length > 1) ? keysToRemove.length + ' trusted keys?' : selected[0].alias + ' trusted key?';\n\n\t\t\t\t\tthis.modal.confirm(message).then(() => {\n\t\t\t\t\t\tthis.TrustedKeysDao.deleteTrustedKey(keysToRemove).$promise.then((response) => {\n\t\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\t\tthis.trustedKeys = _.difference(this.trustedKeys,selected);\n\t\t\t\t\t\t\t\tthis.tableViewOptions.clearSelection();\n\t\t\t\t\t\t\t\tthis.tableViewOptions.setData(this.trustedKeys)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n    getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (row) => {\n                    let message = `Are you sure you want to delete ${row.alias} trusted key?`;\n\n                    this.modal.confirm(message).then(() => {\n                        this.TrustedKeysDao.deleteTrustedKey([{'kid' : row.kid}]).$promise.then((response) => {\n                            if (response.status === 200) {\n                                this.trustedKeys = _.difference(this.trustedKeys,[row]);\n                                this.tableViewOptions.setData(this.trustedKeys)\n                            }\n                        });\n                    });\n                }\n            }\n\t\t]\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/trusted_keys/trusted_keys.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AccessTokensController} from './access_tokens.controller';\n\nfunction accessTokensConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.access_tokens', {\n                params: {feature: 'accesstokens'},\n                url: '/access_tokens',\n                templateUrl: 'states/admin/security/access_tokens/access_tokens.html',\n                controller: 'AccessTokensController as AccessTokens'\n            })\n}\n\nexport default angular.module('security.access_tokens', [])\n        .config(accessTokensConfig)\n        .controller('AccessTokensController', AccessTokensController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/access_tokens/access_tokens.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AccessTokensController {\n    constructor($scope, $timeout, AccessTokensDao, uiGridConstants, commonGridColumns, JFrogGridFactory, JFrogModal) {\n\n        this.gridOption = {};\n        this.uiGridConstants = uiGridConstants;\n        this.commonGridColumns = commonGridColumns;\n        this.AccessTokensDao = AccessTokensDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.modal = JFrogModal;\n        this.noTokensMessage = CONFIG_MESSAGES.admin.security.accessTokens.noTokensMessage;\n\n        this.showExpirable = false;\n\n        this._createGrid();\n        this._getData();\n\n        this.$timeout(() => $('.counter-and-filter').after($('#expireableTokens')), 100);\n\n    }\n\n    filterGrid() {\n        let filteredData;\n\n        if (this.showExpirable) {\n            filteredData = this.allTokens;\n        }\n        else {\n            filteredData = _.filter(this.allTokens,(token) => {\n                return !this.isRowExpirable(token);\n            })\n        }\n\n\n        this.gridOption.setGridData(filteredData);\n    }\n\n    _getData() {\n        // get all tokens\n        this.AccessTokensDao.getTokens().$promise.then((tokens)=> {\n            this.allTokens = [].concat(tokens); //shallow copy\n            this.filterGrid();\n        });\n    }\n\n    _createGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getColumns())\n                .setButtons(this._getActions())\n                .setMultiSelect()\n                .setRowTemplate('default')\n                .setBatchActions(this._getBatchActions());\n\n        this.gridOption.isRowSelectable = (row) => {\n            return !this.isRowExpirable(row.entity);\n        };\n    }\n\n\n    getColumns() {\n\n        return [\n            {\n                field: \"subject\",\n                name: \"Subject\",\n                displayName: \"Subject\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.subject}}</div>',\n                width: '28%'\n            },\n            {\n                field: 'tokenId',\n                name: 'Token ID',\n                displayName: 'Token ID',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.tokenId}}</div>',\n                width: '24%'\n            },\n            {\n                field: \"issuedAt\",\n                name: \"Issued At\",\n                displayName: \"Issued At\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.issuedAt}}</div>',\n                sort: {\n                    direction: this.uiGridConstants.DESC\n                },\n                width: '18%'\n            },\n            {\n                field: \"expiryDate\",\n                name: \"Expiry Date\",\n                displayName: \"Expiry Date\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.expiry}}</div>',\n                width: '18%'\n            },\n            {\n                field: \"refreshable\",\n                name: \"Refreshable\",\n                displayName: \"Refreshable\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.refreshable'),\n                width: '12%'\n            }\n        ]\n\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Revoke',\n                visibleWhen: (row) => !this.isRowExpirable(row),\n                callback: (row) => this.revokeToken(row)\n            }\n\n        ];\n    }\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Revoke',\n                callback: () => this.bulkRevoke()\n            }\n        ]\n    }\n\n    revokeToken(token) {\n        // Create array with single token ID to revoke\n        let json = [token.tokenId];\n        this.modal.confirm(`Are you sure you want to revoke this access token? Once revoked,\n                            it can not be used again.`, 'Revoke access token', {confirm: 'Revoke'})\n                .then(() => this.AccessTokensDao.revokeTokens(json).$promise.then(()=>this._getData()));\n    }\n\n\n    bulkRevoke() {\n        // Get All selected users\n        let selectedRows = this.gridOption.api.selection.getSelectedRows();\n        // Create an array of the selected tokens\n        let tokenIds = _.map(selectedRows, (token) => {return token.tokenId;});\n\n        //Ask for confirmation before revoke and if confirmed then revoke bulk of tokens\n        this.modal.confirm(`Are you sure you want to revoke these access tokens? Once revoked, \n                            they can not be used again.`, 'Revoke access tokens', {confirm: 'Revoke'})\n                            .then(() => this.AccessTokensDao.revokeTokens(tokenIds).$promise.then(() => this._getData()));\n    }\n\n    isRowExpirable(row) {\n        return (row.expiry && !row.refreshable);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/access_tokens/access_tokens.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by tomere on 07/06/2017.\n */\nimport {SslCertificatesController} from './ssl_certificates.controller';\n\nfunction sslCertificatesConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.security.ssl_certificates', {\n                params: {feature: 'sslcertificates'},\n                url: '/ssl_certificates',\n                templateUrl: 'states/admin/security/ssl_certificates/ssl_certificates.html',\n                controller: 'SslCertificatesController as SslCertificates'\n            });\n}\n\nexport default angular.module('security.ssl_certificates', [])\n        .config(sslCertificatesConfig)\n        .controller('SslCertificatesController', SslCertificatesController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ssl_certificates/ssl_certificates.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by tomere on 07/06/2017.\n */\nimport DICTIONARY from '../../../../constants/field_options.constats';\n\nexport class SslCertificatesController {\n\n    constructor(JFrogNotifications, JFrogGridFactory, uiGridConstants,\n            $timeout,$state, $scope, $rootScope, JFrogModal,SslCertificateDao) {\n        this.artifactoryNotifications = JFrogNotifications;\n\n        this.$state = $state;\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.$rootScope = $rootScope;\n        this.modal = JFrogModal;\n        this.sslCertificateDao = SslCertificateDao;\n        this.DICTIONARY = DICTIONARY.sslCertificate;\n\n        this.gridOption = {};\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.uiGridConstants = uiGridConstants;\n\n        this.createSslCertificatesGrid();\n        this.initSiginingKeysGrid();\n    }\n\n    initSiginingKeysGrid() {\n        this.sslCertificateDao.getAllCertificates().$promise.then((results)=> {\n            this.sslCertificates = results.data;\n            this.gridOption.setGridData(this.sslCertificates);\n        });\n    }\n\n    createSslCertificatesGrid() {\n        this.gridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getCloumns())\n                .setRowTemplate('default')\n                .setMultiSelect()\n                .setButtons(this._getActions())\n                .setBatchActions(this._getBatchActions());\n    }\n\n    /**\n    * Data grid actions\n    * */\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (certificate) => {\n                    this.deleteCertificate(certificate);\n                }\n            }\n        ];\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => {\n                    this.deleteSelectedCertificates()\n                }\n            }\n        ]\n    }\n\n    deleteCertificate(certificate) {\n        let alias = certificate.alias;\n        this.modal.confirm(`Are you sure you want to delete '${alias}' certificate?`)\n            .then(() => {\n                let certificatesJson = {\n                    'certificates': [alias]\n                };\n                this.sslCertificateDao.delete(certificatesJson).$promise.then(()=>this.updateListTable());\n            });\n    }\n\n    deleteSelectedCertificates() {\n        //Get All selected licenses\n        let selectedRows = this.gridOption.api.selection.getSelectedGridRows();\n        //Create an array of the selected licenses keys\n        let certificates = _.map(selectedRows, (row) => {\n            return row.entity.alias;\n        });\n\n        //Create Json for the bulk request\n        let certificatesJson = {\n            'certificates': certificates\n        };\n\n        //Ask for confirmation before delete and if confirmed then delete bulk of licenses\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} certificates?`)\n            .then(()=> {\n                this.sslCertificateDao.delete(certificatesJson).$promise.then(() => {\n                    this.refreshTable();\n                });\n            })\n    }\n\n    refreshTable(){\n        this.updateListTable().finally(()=>{\n            this.clearSelectAllButton();\n        });\n    }\n\n    clearSelectAllButton(){\n        this.$timeout(()=>{\n            let selectAllButton = $('.ui-grid-header-cell-row .ui-grid-selection-row-header-buttons');\n            let selectAllButtonIsOn = selectAllButton.is('.ui-grid-all-selected');\n            if(selectAllButtonIsOn){\n                selectAllButton.trigger('click');\n            }\n        });\n    }\n\n    updateListTable() {\n        return this.sslCertificateDao.getAllCertificates().$promise.then((certificates)=> {\n            this.sslCertificates = certificates.data;\n            this.gridOption.setGridData(this.sslCertificates);\n        });\n    }\n\n    /**\n     * Data grid columns template\n     * */\n    showCertificateDetails(entity) {\n        this.getCertificateData(entity.alias)\n    }\n\n    getCloumns() {\n        return [\n            {\n                name: \"Certificate Alias\",\n                displayName: \"Certificate Alias\",\n                field: \"alias\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate:\n                    `<div class=\"ui-grid-cell-contents\">\n                            <a href \n                               ng-click=\"grid.appScope.SslCertificates.showCertificateDetails(row.entity)\">\n                               {{row.entity.alias}}\n                            </a>\n                      </div>`,\n                width: '15%'\n            },\n            {\n                name: \"Issued By\",\n                displayName: \"Issued By\",\n                field: \"issued_by\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    {{row.entity.issued_by}}\n                               </div>`,\n                width: '15%'\n            },\n            {\n                name: \"Issued To\",\n                displayName: \"Issued To\",\n                field: \"issued_to\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    {{row.entity.issued_to}}\n                               </div>`,\n                width: '15%'\n            },\n            {\n                name: \"Valid Until\",\n                displayName: \"Valid Until\",\n                field: \"valid_until\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    {{row.entity.valid_until}}\n                               </div>`,\n                width: '15%'\n            },\n            {\n                name: \"Fingerprint\",\n                displayName: \"Fingerprint\",\n                field: \"fingerprint\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    {{row.entity.fingerprint}}\n                               </div>`,\n                width: '40%'\n            }\n        ]\n    }\n\n    /**\n     * Add certificate modal\n     * */\n    launchCertificateKeyModal(){\n        this.modalScope = this.$rootScope.$new();\n        this.modalScope.modalTitle = 'Add New Certificate';\n        this.modalScope.newCertificate = {text: ''}; // Whenever two-way binding a primitive (i.e. string) on a scope\n        this.modalScope.aliasName = {text: ''};\n        this.modalScope.dndStyle = {'width':\"100%\",'height':\"200px\"};// the primitive should be wrapped with some object\n        this.modalScope.dndOnError = (errorMessage) =>{\n            this.artifactoryNotifications.create({\n                error: errorMessage\n            });\n        };\n\n        this.modalScope.saveCertificate = () => {\n\n            let certificateJson = {\n                certificateName : this.modalScope.aliasName.text,\n                certificatePEM : this.modalScope.newCertificate.text.replace(/(?:\\r\\n|\\r)/g, '\\n')\n            };\n            this.sslCertificateDao.add({$suppress_toaster: false}, certificateJson).$promise\n                    .then((data)=> {\n                        if(data.status === 200) {\n                            this.updateListTable().finally(()=> this.closeModalIfOpen());\n                        }\n                    });\n        };\n\n        this.modalScope.canSave = () =>{\n            return !this.modalScope.aliasName.text\n                    || !this.modalScope.newCertificate.text\n                    || !this.modalScope.aliasName.text.length\n                    || !this.modalScope.newCertificate.text.length;\n        }\n\n        this.modalScope.closeModal = () => {\n            return this.modalInstance.close();\n        };\n\n        this.modalInstance = this.modal.launchModal(\"add_ssl_certificate_modal\", this.modalScope, 'lg');\n    }\n\n    /**\n     * View certificate details modal\n     * */\n    getCertificateData(certificateAlias){\n        this.sslCertificateDao.getDetails({certificate_alias: certificateAlias}).$promise.then((data)=>{\n            if(data.status === 200) {\n                console.log(data);\n                this.launchViewCertificateDetailsModal(data.data,certificateAlias);\n            }\n        });\n    }\n\n    launchViewCertificateDetailsModal(certificate,certificateAlias){\n        this.modalScope = this.$rootScope.$new();\n        this.modalScope.modalTitle = certificateAlias + ' Certificate Details ';\n        this.modalScope.certificateDetails = certificate;\n        this.modalScope.DICTIONARY = this.DICTIONARY;\n\n        this.modalScope.closeModal = () => {\n            return this.modalInstance.close();\n        };\n\n        this.modalInstance = this.modal.launchModal(\"ssl_certificate_details_modal\", this.modalScope, 'lg');\n    }\n\n    closeModalIfOpen(){\n        if (this.modalInstance) {\n            this.modalScope.closeModal();\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/ssl_certificates/ssl_certificates.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminSecurityController {\n  constructor ($modal) {\n   this.userData=this.getUserGridData();\n      this.modal= $modal;\n  }\n\n    getUserGridData(){\n\n        return[\n            {\"User Name\": \"System Info\", \"Realm\": \"admin.advanced.system_info\", \"Admin\":true,\"Last Login\":\"12/12/2015\",\"Extrenal Realm Status\":\"bla bla\"},\n            {\"User Name\": \"System Info\", \"Realm\": \"admin.advanced.system_info\", \"Admin\":true,\"Last Login\":\"12/12/2015\",\"Extrenal Realm Status\":\"bla bla\"},\n            {\"User Name\": \"System Info\", \"Realm\": \"admin.advanced.system_info\", \"Admin\":true,\"Last Login\":\"12/12/2015\",\"Extrenal Realm Status\":\"bla bla\"},\n            {\"User Name\": \"System Info\", \"Realm\": \"admin.advanced.system_info\", \"Admin\":true,\"Last Login\":\"12/12/2015\",\"Extrenal Realm Status\":\"bla bla\"}\n\n        ]\n    }\n    addUser() {\n    this.modal.open({template:\"<div>test test</div>\"})\n        this.userData.push({});\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/security/security.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Backups from './backups/backups.module';\nimport Indexer from './indexer/indexer.module';\n\nimport {AdminServicesController} from './services.controller';\n\nfunction adminServicesConfig($stateProvider) {\n    $stateProvider\n            .state('admin.services', {\n                url: '/services',\n                template: '<ui-view></ui-view>',\n                controller: 'AdminServicesController as AdminServices'\n            })\n}\n\nexport default angular.module('admin.services', [\n    Backups.name,\n    Indexer.name\n])\n        .config(adminServicesConfig)\n        .controller('AdminServicesController', AdminServicesController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/admin.services.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminServicesBackupsController} from './backups.controller';\nimport {AdminServicesBackupFormController} from './backup_form.controller';\n\nfunction backupsConfig($stateProvider) {\n\n    $stateProvider\n            .state('admin.services.backups', {\n                params: {feature: 'backups'},\n                url: '/backups',\n                templateUrl: 'states/admin/services/backups/backups.html',\n                controller: 'AdminServicesBackupsController as AdminServicesBackups'\n            })\n            .state('admin.services.backups.new', {\n                params: {feature: 'backups'},\n                parent: 'admin.services',\n                url: '/backups/new',\n                templateUrl: 'states/admin/services/backups/backup_form.html',\n                controller: 'AdminServicesBackupFormController as BackupForm'\n            })\n            .state('admin.services.backups.edit', {\n                params: {feature: 'backups'},\n                parent: 'admin.services',\n                url: '/backups/:backupKey/edit',\n                templateUrl: 'states/admin/services/backups/backup_form.html',\n                controller: 'AdminServicesBackupFormController as BackupForm'\n            })\n}\n\nexport default angular.module('backups', [])\n        .config(backupsConfig)\n        .controller('AdminServicesBackupsController', AdminServicesBackupsController)\n        .controller('AdminServicesBackupFormController', AdminServicesBackupFormController)\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/backups/backups.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from \"../../../../constants/configuration_messages.constants\";\n\nexport class AdminServicesBackupsController {\n    constructor($scope, BackupDao, JFrogGridFactory, JFrogModal, RepoDataDao, $q, commonGridColumns) {\n        this.backupDao = BackupDao;\n        this.repoDataDao = RepoDataDao;\n        this.modal = JFrogModal;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.$scope = $scope;\n        this.commonGridColumns = commonGridColumns;\n        this.noBackupsMessage = CONFIG_MESSAGES.admin.services.backups.noBackupsMessage;\n        this._createGrid();\n        this._initBackups();\n        this.$q = $q;\n    }\n\n    _initBackups() {\n        this.backupDao.query().$promise.then((backups)=> {\n            this.gridBackupsOptions.setGridData(backups)\n        });\n    }\n\n    _createGrid() {\n        this.gridBackupsOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setSingleSelect()\n                .setButtons(this._getActions())\n                .setRowTemplate('default');\n                //.setMultiSelect()\n                //.setBatchActions(this._getBatchActions());\n    }\n\n    _doDeleteBackup(key) {\n        return this.backupDao.delete({key: key}).$promise;\n    }\n\n   /* deleteSelectedBackups() {\n        let selectedRows = this.gridBackupsOptions.api.selection.getSelectedGridRows();\n        this.modal.confirm(`Are you sure you want to delete ${selectedRows.length} backups?`)\n            .then(() => {\n                return this.$q.all(selectedRows.map((row) => this._doDeleteBackup(row.entity.key)))\n            })\n            .then(() => this._initBackups())\n    }*/\n\n    deleteBackup(key) {\n        this.modal.confirm(`Are you sure you want to delete the backup '${key}'?`)\n            .then(() => this._doDeleteBackup(key))\n            .then(() => this._initBackups())\n    }\n\n    _getColumns() {\n        return [\n            {\n                field: \"key\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><a ui-sref=\"^.backups.edit({backupKey: row.entity.key})\" class=\"jf-link\" >{{ COL_FIELD }}</a></div>',\n                width: \"15%\"\n            },\n            {\n                name: \"Repositories\",\n                displayName: \"Repositories\",\n                field: \"includeRepos\",\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.includeRepos','row.entity.key'),\n                width: \"30%\"\n            },\n            {\n                name: \"Cron Expression\",\n                displayName: \"Cron Expression\",\n                field: \"cronExp\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{ COL_FIELD }}</div>',\n                width: \"15%\"\n            },\n            {\n                name: \"Next Schedule Backup\",\n                displayName: \"Next Schedule Backup\",\n                field: \"cronExp\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\"><input class=\"not-like-input\" type=\"text\" jf-cron-formatter ng-model=\"row.entity.cronExp\" disabled></div>',\n                width: \"20%\"\n            },\n            {\n                field: \"enabled\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.enabled'),\n                width: \"10%\"\n            },\n            {\n                name: 'Run Now',\n                displayName: 'Run Now',\n                field: 'runnow',\n                cellTemplate: '<div class=\"ui-grid-cell-contents text-center\"><a class=\"grid-column-button icon icon-run\" ng-click=\"grid.appScope.AdminServicesBackups.runNow(row.entity)\" ng-disabled=\"!row.entity.enabled\"></a></div>',\n                width: '10%',\n                enableSorting: false\n            }\n        ]\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: entity => this.deleteBackup(entity.key)\n            }\n        ];\n    }\n\n    runNow(row) {\n        if (row.enabled) {\n            this.backupDao.get({key: row.key}).$promise\n                    .then((backup) => {\n                        this.backupDao.runNow({},backup).$promise.then((res)=>{\n                            //console.log(res);\n                        });\n                    });\n        }\n    }\n/*    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedBackups()\n            },\n        ]\n    }*/\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/backups/backups.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\n\nlet $state, $stateParams, RepoDataDao, BackupDao;\n\nexport class AdminServicesBackupFormController {\n    constructor($scope,_$state_, _$stateParams_, _RepoDataDao_, _BackupDao_, BrowseFilesDao,\n            ArtifactoryModelSaver,JFrogEventBus) {\n        $state = _$state_;\n        this.$scope = $scope;\n        $stateParams = _$stateParams_;\n        RepoDataDao = _RepoDataDao_;\n        BackupDao = _BackupDao_;\n        this.JFrogEventBus = JFrogEventBus;\n        this.browseFilesDao = BrowseFilesDao.getInstance();\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['backup']);\n\n        this.isNew = !$stateParams.backupKey;\n        this.TOOLTIP = TOOLTIP.admin.services.backupsForm;\n        this.formTitle = `${this.isNew ? 'New' : 'Edit ' + $stateParams.backupKey} Backup`;\n        this._initBackup();\n\n        this.fileBrowserOptions = {\n            canSelectFiles: false,\n            selectionLabel: 'Directory To Export Backup',\n            pathLabel: 'Path to Export Backup',\n            confirmButtonLabel: 'Select',\n            showSelectedItem: true,\n            enableSelectedItem: true\n        }\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            RepoDataDao.getForBackup().$promise.then((repoData) => {\n                this.addRepos(repoData.repoList);\n            });\n        });\n    }\n\n    addRepos(repoList){\n        repoList.forEach((repo)=> {\n            if (this.backup.excludeRepos.indexOf(repo) == -1\n                    && this.backup.includeRepos.indexOf(repo) == -1) {\n                this.backup.includeRepos.push(repo);\n            }\n        });\n\n        this.ArtifactoryModelSaver.save();\n    }\n\n    _initBackup() {\n        if (this.isNew) {\n            RepoDataDao.getForBackup().$promise.then((repoData) => {\n                this.backup = {\n                    enabled: true,\n                    sendMailOnError: true,\n                    retentionPeriodHours: 168,\n                    includeRepos: repoData.repoList,\n                    excludeRepos: [],\n                    precalculate: false\n                };\n\n                this.ArtifactoryModelSaver.save();\n            });\n        }\n        else {\n            BackupDao.get({key: $stateParams.backupKey}).$promise\n            .then((backup) => {\n                this.backup = backup;\n                this.ArtifactoryModelSaver.save();\n            });\n        }\n    }\n\n    changeIncremental() {\n        if (this.backup.precalculate) {\n            this.backup.precalculate = !this.backup.precalculate;\n        }\n    }\n\n    updateFolderPath(directory) {\n        this.backup.dir = directory;\n    }\n\n    save() {\n        if (this.savePending) return;\n\n        this.savePending = true;\n\n        let whenSaved = this.isNew ? BackupDao.save(this.backup) : BackupDao.update(this.backup);\n        whenSaved.$promise.then(() => {\n            this.savePending = false;\n            this.ArtifactoryModelSaver.save();\n            this._end()\n        }).catch(()=>this.savePending = false);\n    }\n\n    cancel() {\n        this._end();\n    }\n\n    _end() {\n        $state.go('^.backups');\n    }\n\n    onClickIncremental() {\n        if (this.backup.incremental) {\n            this.backup.retentionPeriodHours = 0;\n            this.backup.createArchive=false;\n        }\n    }\n    onClickZip() {\n        if (this.backup.createArchive) {\n            this.backup.incremental = false;\n        }\n    }\n/*\n    MOVED TO MAIN BACKUPS GRID\n    runNow() {\n        BackupDao.runNow({},this.backup).$promise.then((res)=>{\n           //console.log(res);\n        });\n    }\n*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/backups/backup_form.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AdminServicesIndexerController} from './indexer.controller';\n\nfunction indexerConfig($stateProvider) {\n    $stateProvider\n            .state('admin.services.indexer', {\n                params: {feature: 'indexer'},\n                url: '/indexer',\n                templateUrl: 'states/admin/services/indexer/indexer.html',\n                controller: 'AdminServicesIndexerController as AdminServicesIndexer'\n            })\n}\n\nexport default angular.module('indexer', [])\n        .config(indexerConfig)\n        .controller('AdminServicesIndexerController', AdminServicesIndexerController);\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/indexer/indexer.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\n\nexport class AdminServicesIndexerController {\n    constructor($scope,IndexerDao, RepositoriesDao, ArtifactoryModelSaver,JFrogEventBus) {\n        this.$scope = $scope;\n        this.indexerDao = IndexerDao.getInstance();\n        this.repositoriesDao = RepositoriesDao;\n        this.indexer = {};\n        this.TOOLTIP = TOOLTIP.admin.services.mavenIndexer;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['indexer']);\n        this.JFrogEventBus = JFrogEventBus;\n        this.getIndexerObject();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this.repositoriesDao.indexerAvailableRepositories({type: 'Maven', layout: 'maven-2-default'}).$promise.then((repoData) => {\n                let repoList = repoData.availableLocalRepos.concat(repoData.availableRemoteRepos).concat(repoData.availableVirtualRepos);\n                this.addRepos(repoList);\n            });\n        });\n    }\n\n    getIndexerObject() {\n        this.indexerDao.get().$promise.then((result) => {\n            this.indexer = result;\n            this.ArtifactoryModelSaver.save();\n            this.getRepoData();\n        });\n    }\n\n    addRepos(repoList){\n        repoList.forEach((repo)=> {\n            if (this.indexer.excludedRepos.indexOf(repo) == -1\n                    && this.indexer.includedRepos.indexOf(repo) == -1) {\n                this.indexer.includedRepos.push(repo);\n            }\n        });\n\n        this.ArtifactoryModelSaver.save();\n    }\n\n    getRepoData() {\n        if (!this.indexer.includedRepos) {\n            this.repositoriesDao.indexerAvailableRepositories({type: 'Maven', layout: 'maven-2-default'}).$promise.then((repos) => {\n                this.indexer.includedRepos = [];\n                this.indexer.excludedRepos = [];\n                this.indexer.includedRepos = repos.availableLocalRepos.concat(repos.availableRemoteRepos).concat(repos.availableVirtualRepos);\n            });\n        }\n    }\n\n    runIndexer() {\n        this.indexerDao.run(this.indexer);\n    }\n\n    save(indexer) {\n        this.indexerDao.save(indexer).$promise.then(()=>{\n            this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    cancel() {\n        this.ArtifactoryModelSaver.ask(true).then(() => {\n            this.getIndexerObject();\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/indexer/indexer.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminServicesController {\n  constructor () {\n    var AdminServices = this;\n    AdminServices.stateUrl = '/services';\n    AdminServices.controllerName = 'AdminServicesController'\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/services/services.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminController {\n\n    constructor($state, AdminMenuItems, ArtifactoryState, User, ArtifactoryFeatures) {\n        this.items = AdminMenuItems;\n        this.state = $state;\n        this.user = User.getCurrent();\n        this.artifactoryState = ArtifactoryState;\n        this.features = ArtifactoryFeatures;\n        this._goToSpecificAdminState();\n    }\n\n    _goToSpecificAdminState() {\n        if (this.state.current.name !== 'admin') {\n            if (!this.state.current.name.match(/(?:.new|.edit)\\b/)) {\n                this.artifactoryState.setState('lastAdminState', this.state.current);\n                this.artifactoryState.setState('lastAdminStateParams', this.state.params);\n            }\n            return;\n        }\n        \n        let state = this.artifactoryState.getState('lastAdminState');\n        let stateParams = this.artifactoryState.getState('lastAdminStateParams');\n        let feature = state && state.params && state.params.feature;\n        if (!state ||\n            !this.user.canView(state.name) ||\n            this.features.isDisabled(feature) ||\n            this.features.isHidden(feature)) {\n            state = this.user.isAdmin() ? 'admin.repositories.list' : 'admin.security.permissions';\n            stateParams = this.user.isAdmin() ? {repoType: 'local'} : {};\n        }\n        this.state.go(state, stateParams);\n    }\n\n    isDashboard() {\n        return this.state.$current.includes['admin.dashboard']\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/admin/admin.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactsController} from './artifacts/artifacts.controller';\nimport {BrowsersController} from './browsers/browsers.controller';\nimport {jfTreeSearch} from './jf_tree_search/jf_tree_search';\nimport {jfTreeBrowser} from './jf_tree_browser/jf_tree_browser';\nimport {jfTrashPin} from './jf_tree_browser/jf_trash_pin';\nimport {jfStashBrowser} from './jf_stash_browser/jf_stash_browser';\nimport {selectTargetPathFactory} from './services/select_target_path';\nimport {commonGridColumns} from './services/common_grid_columns';\nimport {selectDeleteVersionsFactory} from './services/select_delete_versions';\nimport {jfArtifactInfo} from './jf_artifact_info/jf_artifact_info';\nimport infoTabs from './jf_artifact_info/info_tabs/info_tabs.module';\n\nfunction artifactsConfig($stateProvider, $urlMatcherFactoryProvider) {\n\n    $urlMatcherFactoryProvider.type('pathParam', {\n        encode: function (item) {\n            return item;\n        },\n        decode: function (item) {\n            return item;\n        },\n        is: function (item) {\n            return true;\n        }\n    });\n    $stateProvider\n            .state('artifacts', {\n                url: '/artifacts',\n                parent: 'app-layout',\n                abstract: true,\n                templateUrl: 'states/artifacts/artifacts.html',\n                controller: 'ArtifactsController as Artifact',\n                onExit: (ArtifactoryState, TreeBrowserDao) => {\n                    // Stop saving last state of tree\n                    ArtifactoryState.removeState('lastTreeState');\n                    // Invalidate the tree node cache\n//                    TreeBrowserDao.invalidateRoots();\n                },\n                onEnter: (ArtifactoryState) => {\n                    // This should be true only when going from tree to simple before selecting any node in the tree\n                    ArtifactoryState.setState('tree_touched', false);\n                }\n            })\n            .state('artifacts.browsers', {\n                url: '/browse/{browser}',\n                templateUrl: 'states/artifacts/browsers/browsers.html',\n                controller: 'BrowsersController as Browsers',\n                onEnter: (ArtifactoryStorage, $stateParams) => {\n                    if ($stateParams.browser !== 'stash') ArtifactoryStorage.setItem('BROWSER', $stateParams.browser);\n                }\n            })\n            .state('artifacts.browsers.path', {\n                url: '/{tab}/{artifact:pathParam}',\n                onEnter: (JFrogEventBus, $stateParams, ArtifactoryState) => {\n                    // Save state of tree\n                    ArtifactoryState.setState('lastTreeState', {name: 'artifacts.browsers.path', params: $stateParams});\n                    JFrogEventBus.dispatch(JFrogEventBus.getEventsDefinition().TABS_URL_CHANGED, $stateParams);\n                },\n                params: {\n//                    forceLoad: false // used to force reload of state even if it's the same artifact\n                }\n            })\n}\n\nexport default angular.module('artifacts', ['infoTabs'])\n        .config(artifactsConfig)\n        .controller('ArtifactsController', ArtifactsController)\n        .controller('BrowsersController', BrowsersController)\n        .directive('jfTreeSearch', jfTreeSearch)\n        .directive('jfTreeBrowser', jfTreeBrowser)\n        .directive('jfTrashPin', jfTrashPin)\n        .directive('jfStashBrowser', jfStashBrowser)\n        .directive('jfArtifactInfo', jfArtifactInfo)\n        .factory('selectTargetPath', selectTargetPathFactory)\n        .factory('commonGridColumns', commonGridColumns)\n        .factory('selectDeleteVersions', selectDeleteVersionsFactory)\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/artifacts.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../constants/artifacts_events.constants';\nimport TOOLTIPS from '../../../constants/artifact_tooltip.constant';\nimport ICONS from '../constants/artifact_browser_icons.constant';\nimport ACTIONS from '../../../constants/artifacts_actions.constants';\n\nexport class ArtifactsController {\n    constructor($rootScope,$scope, $state, JFrogEventBus, ArtifactoryState, SetMeUpModal, ArtifactoryDeployModal, User,\n                ArtifactActions,JFrogModal, GoogleAnalytics, ArtifactoryFeatures) {\n\n        this.JFrogEventBus = JFrogEventBus;\n        this.$state = $state;\n        this.$scope = $scope;\n        this.$rootScope = $rootScope;\n        this.node = null;\n        this.ArtifactoryFeatures = ArtifactoryFeatures;\n        this.deployModal = ArtifactoryDeployModal;\n        this.setMeUpModal = SetMeUpModal;\n        this.artifactoryState = ArtifactoryState;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.tooltips = TOOLTIPS;\n        this.icons = ICONS;\n        this.artifactActions = ArtifactActions;\n\n        this.user = User.getCurrent();\n\n        this.initEvents();\n        this.modal = JFrogModal;\n        this.initNoPermissionsModalScope();\n    }\n\n    initNoPermissionsModalScope(){\n        this.noPermissionsModalScope = this.$rootScope.$new();\n        this.noPermissionsModalScope.close = ()=>{\n            // Close and go home...\n            this.modalInstance.close();\n            this.$state.go('home');\n        };\n        this.noPermissionsModalScope.modalTitle = \"No Access Privileges\";\n        this.noPermissionsModalScope.modalText = \"You do not have permissions defined for any repository.<br/>\"+\n                                                 \"To gain access, make sure you are logged in, or contact your Artifactory administrator.\";\n    }\n\n    launchNoPermissionsModal(){\n        this.modalInstance = this.modal.launchModal('no_permissions_modal', this.noPermissionsModalScope);\n        this.modalInstance.result.finally(()=>{\n            this.modalInstance.close();\n            this.$state.go('home');\n        })\n    }\n\n    getNodeIcon() {\n        if (this.node && this.node.data) {\n            let type = this.icons[this.node.data.iconType];\n            if (!type) type = this.icons['default'];\n            return type && type.icon;\n        }\n    }\n\n    isFavorite() {\n        if (this.node && this.node.data) {\n            return this.node.data.isFavorite();\n        };\n    }\n\n    initNoPermissionsModalScope(){\n        this.noPermissionsModalScope = this.$rootScope.$new();\n        this.noPermissionsModalScope.modalTitle = \"No Access Privileges\";\n        this.noPermissionsModalScope.modalText = \"You do not have permissions defined for any repository.<br/>\"+\n                                                 \"To gain access, make sure you are logged in, or contact your Artifactory administrator.\";\n    }\n\n    openSetMeUp() {\n        this.GoogleAnalytics.trackEvent('Artifacts' , 'Set me up - Open' , this.node.data.repoPkgType, null , this.node.data.repoType);\n        this.setMeUpModal.launch(this.node);\n    }\n\n    openDeploy() {\n        if (this.node && this.node.data) this.GoogleAnalytics.trackEvent('Artifacts' , 'Open deploy' , this.node.data.repoPkgType , null , this.node.data.repoType);\n        this.deployModal.launch(this.node);\n    }\n\n    initEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TREE_NODE_SELECT, node => {\n            this.selectNode(node)\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, [EVENTS.ACTION_WATCH, EVENTS.ACTION_UNWATCH], () => {\n            this.actionsController.setActions(this.node.data.actions);\n            this.JFrogEventBus.dispatch(EVENTS.TREE_NODE_CM_REFRESH, this.node);\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.ACTION_FAVORITES, () => {\n            if (!localStorage.favoritesRepos) return;\n            let favoritesRepos = JSON.parse(localStorage.favoritesRepos);\n            let isMarked = _.contains(favoritesRepos.favoritesRepos, this.node.data.repoKey);\n\n            let item = _.find(this.node.data.actions, {name: 'Favorites'});\n            if (!item) return;\n            ACTIONS['Favorites'].icon = item.icon = isMarked ? 'icon-star-full' : 'icon-star';\n            ACTIONS['Favorites'].title = item.title = isMarked ? 'Remove from Favorites' : 'Add to Favorites';\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TREE_DATA_IS_SET, (treeHasData)=> {\n            this.treeDataIsSet = true;\n            if(!treeHasData) {\n                this.launchNoPermissionsModal();\n            }\n        });\n    }\n\n    selectNode(node) {\n        let previousNode = this.node;\n        this.node = node;\n\n        if (node && node.data) {\n            this.artifactoryState.setState('repoKey', this.node.data.repoKey);\n\n            if (this.$state.params.artifact !== node.data.fullpath) {\n                let location = true;\n                if (this.$state.current.name === 'artifacts.browsers.path' && (!previousNode || !this.$state.params.artifact)) {\n                    // If no artifact and selecting artifact - replace the location (fix back button bug)\n                    location = 'replace';\n                }\n                this.$state.go(this.$state.current, {artifact: node.data.fullpath}, {location: location, notify: false, reload: this.$state.current});\n            } \n\n            this.actionsController.setCurrentEntity(node);\n            this.node.data.getDownloadPath()\n                .then(() => {\n                    let downloadAction = _.findWhere(node.data.actions,{name: 'Download'});\n                    if (downloadAction) {\n                        downloadAction.href = node.data.actualDownloadPath;\n                        if (node.data.xrayShouldValidate) downloadAction.xrayShouldValidate = node.data.xrayShouldValidate;\n                    }\n                    this.actionsController.setActions(node.data.actions)\n                });\n\n            this.JFrogEventBus.dispatch(EVENTS.ACTION_FAVORITES);\n        }\n        else {\n            this.artifactoryState.removeState('repoKey');\n            this.$state.go(this.$state.current, {artifact: ''});\n            this.actionsController.setActions([]);\n        }\n    }\n\n    exitStashState() {\n        this.JFrogEventBus.dispatch(EVENTS.ACTION_EXIT_STASH);\n    }\n\n    hasData() {\n        return this.artifactoryState.getState('hasArtifactsData') !== false;\n    }\n\n    initActions(actionsController) {\n        this.actionsController = actionsController;\n        actionsController.setActionsHandler(this.artifactActions);\n        actionsController.setActionsDictionary(ACTIONS);\n    }\n\n\n    deployIsDisabled () {\n        if (!this.user.getCanDeploy()) {\n            this.disabledTooltip = this.tooltips.artifacts.deploy.noDeployPermission;\n            return true;\n        }\n        return false;\n    }\n\n    deployIsAllowedOnEdge() {\n        return this.node.data.getRoot().repoPkgType === 'Generic' &&\n                this.node.data.repoType === 'local' &&\n                this.node.data.repoKey === 'artifactory-edge-uploads';\n    }\n\n    toggleFavorites(node) {\n        let repoKey = node.data.text;\n\n        if (!localStorage.favoritesRepos) {\n            localStorage.setItem('favoritesRepos', JSON.stringify({favoritesRepos: [repoKey]}));\n        }\n        else {\n            let favoritesRepos = JSON.parse(localStorage.favoritesRepos);\n\n            let isRepoInFavorites = _.contains(favoritesRepos.favoritesRepos, repoKey);\n\n            if (isRepoInFavorites) {\n                favoritesRepos.favoritesRepos = _.remove(favoritesRepos.favoritesRepos, (i) => i !== repoKey); // Remove from favorites\n            } else {\n                favoritesRepos.favoritesRepos.push(repoKey); // Add to favorites\n            }\n            localStorage.setItem('favoritesRepos', JSON.stringify({favoritesRepos: favoritesRepos.favoritesRepos}));\n        }\n        this.JFrogEventBus.dispatch(EVENTS.ACTION_FAVORITES);\n\n        if (localStorage.filterFavorites) this.JFrogEventBus.dispatch(EVENTS.TREE_REFRESH_FILTER);\n\n        delete node.$cachedCMItems;\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/artifacts/artifacts.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    \"file\": {\n        \"icon\": \"icon icon-general\"\n    },\n    \"default\": {\n        \"icon\": \"icon icon-general\"\n    },\n    \"virtualRemoteFile\": {\n        \"icon\": \"icon icon-general\"\n    },\n    \"go_up\": {\n        \"icon\": \"icon icon-folder go-up\"\n    },\n    \"localRepository\": {\n        \"icon\": \"icon icon-local-repo\"\n    },\n    \"buildInfoRepository\": {\n        \"icon\": \"icon icon-builds-new\"\n    },\n    \"cachedRepository\": {\n        \"icon\": \"icon icon-cached-repo\"\n    },\n    \"virtualRepository\": {\n        \"icon\": \"icon icon-virtual-repo\"\n    },\n    \"distributionRepository\": {\n        \"icon\": \"icon icon-distribution-repo\"\n    },\n    \"remoteRepository\": {\n        \"icon\": \"icon icon-remote-repo\"\n    },\n    \"stash\": {\n        \"icon\": \"icon icon-search\"\n    },\n    \"trashcan\": {\n        \"icon\": \"icon icon-trash\"\n    },\n    \"folder\": {\n        \"icon\": \"icon icon-folder\"\n    },\n    \"virtualRemoteFolder\": {\n        \"icon\": \"icon icon-folder\"\n    },\n    \"compactedFolder\": {\n        \"icon\": \"icon icon-folder\"\n    },\n    \"application/x-maven-pom+xml\": {\n        \"icon\": \"icon icon-pom\"\n    },\n    \"application/xml\": {\n        \"icon\": \"icon icon-xml\"\n    },\n    \"application/pdf\": {\n        \"icon\": \"icon icon-pdf\"\n    },\n    \"text/html\": {\n        \"icon\": \"icon icon-html\"\n    },\n    \"text/plain\": {\n        \"icon\": \"icon icon-txt\"\n    },\n    \"text/css\": {\n        \"icon\": \"icon icon-css\"\n    },\n    \"application/json\": {\n        \"icon\": \"icon icon-json\"\n    },\n    \"application/x-debian-package\": {\n        \"icon\": \"icon icon-deb\"\n    },\n    \"application/javascript\": {\n        \"icon\": \"icon icon-js\"\n    },\n    \"application/x-rubygems\": {\n        \"icon\": \"icon icon-gems\"\n    },\n    \"text/x-java-source\": {\n        \"icon\": \"icon icon-java\"\n    },\n    \"x-groovy-source\": {\n        \"icon\": \"icon icon-groovy\"\n    },\n    \"text/x-c\": {\n        \"icon\": \"icon icon-c\"\n    },\n    \"text/x-csharp\": {\n        \"icon\": \"icon icon-c-2\"\n    },\n    \"application/zip\": {\n        \"icon\": \"icon icon-zip\"\n    },\n    \"application/x-gzip\": {\n        \"icon\": \"icon icon-gz\"\n    },\n    \"application/x-gtar\": {\n        \"icon\": \"icon icon-gz\"\n    },\n    \"application/x-tar\": {\n        \"icon\": \"icon icon-tar\"\n    },\n    \"application/x-nupkg\": {\n        \"icon\": \"icon icon-nuget\"\n    },\n    \"application/x-rpm\": {\n        \"icon\": \"icon icon-rpm\"\n    },\n    \"text/x-scala-source\": {\n        \"icon\": \"icon icon-scala\"\n    },\n    \"application/java-archive\": {\n        \"icon\": \"icon icon-jar\"\n    },\n    \"application/octet-stream\": {\n        \"icon\": \"icon icon-general\"\n    },\n    \"docker\": {\n        \"icon\": \"icon icon-docker\"\n    },\n    \"bower\": {\n        \"icon\": \"icon icon-bower\"\n    },\n    \"npm\": {\n        \"icon\": \"icon icon-npm\"\n    },\n    \"cocoapods\": {\n        \"icon\": \"icon icon-cocoapods\"\n    },\n    \"gitlfs\": {\n        \"icon\": \"icon icon-git-lfs\"\n    },\n    \"opkg\": {\n        \"icon\": \"icon icon-opkg\"\n    },\n    \"composer\": {\n        \"icon\": \"icon icon-composer\"\n    },\n    \"conan\": {\n        \"icon\": \"icon icon-conan\"\n    },\n    \"puppet\": {\n        \"icon\": \"icon icon-puppet\"\n    },\n    \"pypi\": {\n        \"icon\": \"icon icon-pypi\"\n    },\n    \"gradle\": {\n        \"icon\": \"icon icon-gradle\"\n    },\n    \"vagrant\":{\n        \"icon\": \"icon icon-vagrant\"\n    },\n    \"helm\":{\n        \"icon\": \"icon icon-helm\"\n    },\n    \"chef\":{\n        \"icon\": \"icon icon-chef\"\n    },\n    \"go\":{\n        \"icon\": \"icon icon-golang\"\n    },\n    \"cran\":{\n        \"icon\": \"icon icon-cran\"\n    },\n    \"conda\": {\n        \"icon\": \"icon icon-conda\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/constants/artifact_browser_icons.constant.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../constants/artifacts_events.constants';\nimport FIELD_OPTIONS from '../../../constants/field_options.constats';\n\nexport class BrowsersController {\n    constructor($timeout, $scope, $stateParams, $state, TreeBrowserDao, JFrogEventBus, hotkeys, ArtifactoryState,\n                ArtifactoryStorage, ArtifactoryFeatures) {\n        this.JFrogEventBus = JFrogEventBus;\n        this.stateParams = $stateParams;\n        this.state = $state;\n        this.treeBrowserDao = TreeBrowserDao;\n        this.artifactoryState = ArtifactoryState;\n        this.ArtifactoryStorage = ArtifactoryStorage;\n        this.features = ArtifactoryFeatures;\n        this.compactFolders = TreeBrowserDao.getCompactFolders();\n        this.$scope = $scope;\n        this.EVENTS = EVENTS;\n        this.$timeout = $timeout;\n        this.hotkeys = hotkeys;\n        this.activeSortingMenu = false;\n        this._setupKeyHints();\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TREE_NODE_SELECT, node => this.selectedNode = node);\n\n        let activeFilter = this.artifactoryState.getState('activeFilter');\n        this.activeFilter = activeFilter ? true : false;\n        this.searchText = activeFilter || '';\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TREE_SEARCH_RUNNING, (running) => {\n            this.searchInAction = running;\n        });\n\n        this.sortMethod = localStorage.treeSortingMethod || 'repo_type'; // sort from local storage or default if not exist\n\n        let savedFilter = localStorage.treeFiltering ? JSON.parse(localStorage.treeFiltering) : {};\n        let savedPkgFilter = savedFilter.pkg || [];\n        let savedRepoFilter = savedFilter.repo || [];\n\n        this.selectionRepoPkgList = _.map(FIELD_OPTIONS.repoPackageTypes, (repo) => {\n            return {\n                text: repo.text,\n                serverEnumName: repo.serverEnumName,\n                iconClass: 'icon-' + repo.icon,\n                isSelected: savedPkgFilter.indexOf(repo.serverEnumName) !== -1\n            }\n        });\n\n        // Filter only Aritfactory Community Edition for C/C++ supported packages\n        if (this.features.isConanCE()) {\n            this.selectionRepoPkgList = _.filter(this.selectionRepoPkgList, (pkg) => {\n                return pkg.serverEnumName === 'Conan' || pkg.serverEnumName === 'Generic';\n            });\n        }\n\n        // Filter only Aritfactory OSS supported packages\n        if (this.features.isOss()) {\n            this.selectionRepoPkgList = _.filter(this.selectionRepoPkgList, (pkg) => {\n                return _.includes(['Maven', 'Gradle', 'Ivy', 'SBT', 'Generic', 'BuildInfo'], pkg.serverEnumName)\n            });\n        }\n\n        //this.selectionTypeList = _.values(FIELD_OPTIONS.REPO_TYPE).toObject();\n\n        this.selectionRepoTypeList = _.map(_.extend({},FIELD_OPTIONS.REPO_TYPE,{CACHE: 'cache'}), (value) => {\n            let repoType = value.charAt(0).toUpperCase() + value.slice(1);\n            return {\n                text: repoType,\n                iconClass: 'icon-' + value,\n                isSelected: savedRepoFilter.indexOf(repoType) !== -1\n            }\n        });\n\n        if (this.features.isConanCE()) {\n            this.selectionRepoTypeList = _.filter(this.selectionRepoTypeList, (type) => {\n                return type.text != 'Remote';\n            })\n        }\n\n        if (this.features.isEdgeNode()) {\n\t        this.selectionRepoTypeList = _.filter(this.selectionRepoTypeList, (type)=> {\n\t            return type.text != 'Distribution' && type.text != 'Remote';\n            })\n        }\n\n        this.sendWindowResizeEvent();\n    }\n\n    get dropDownOpened() {\n        return !!(this.repoDropDownOpened || this.packageDropDownOpened);\n    }\n\n    toggleCompactFolders() {\n        this.treeBrowserDao.setCompactFolders(this.compactFolders);\n        this.JFrogEventBus.dispatch(EVENTS.TREE_COMPACT, this.compactFolders);\n    }\n    toggleSortAndFilterMenu() {\n        if (!this.dropDownOpened) {\n            this.activeSortingMenu = !this.activeSortingMenu;\n        }\n    }\n\n    changeSortingMethod() {\n        localStorage.setItem(\"treeSortingMethod\", this.sortMethod);\n        this.JFrogEventBus.dispatch(EVENTS.TREE_REFRESH_SORTING);\n    }\n\n    changeFilter() {\n        let filter = {\n            pkg: _.map(_.filter(this.selectionRepoPkgList, {isSelected: true}),'serverEnumName'),\n            repo: _.map(_.filter(this.selectionRepoTypeList, {isSelected: true}),'text')\n        };\n\n        if (!filter.pkg.length && !filter.repo.length) {\n            localStorage.removeItem('treeFiltering');\n        }\n        else {\n            localStorage.setItem(\"treeFiltering\", JSON.stringify(filter));\n        }\n\n        this.JFrogEventBus.dispatch(EVENTS.TREE_REFRESH_FILTER);\n    }\n\n    filterFavorites() {\n        if (localStorage.filterFavorites) {\n            localStorage.removeItem('filterFavorites');\n        }\n        else {\n            localStorage.setItem('filterFavorites', true);\n        }\n        this.JFrogEventBus.dispatch(EVENTS.TREE_REFRESH_FILTER);\n    }\n\n    isFiltersOn() {\n        return localStorage.treeFiltering ? true : false;\n    }\n\n    isFavoritesOn() {\n        return localStorage.filterFavorites ? true : false;\n    }\n\n    isFavoritesEnabled() {\n        let favRepos = this.ArtifactoryStorage.getItem('favoritesRepos');\n        return !!((favRepos && favRepos.favoritesRepos && favRepos.favoritesRepos.length) || localStorage.filterFavorites);\n    }\n\n    resetFilters() {\n        _.filter(this.selectionRepoTypeList,{isSelected: true}).forEach(i=>i.isSelected = false);\n        _.filter(this.selectionRepoPkgList,{isSelected: true}).forEach(i=>i.isSelected = false);\n        localStorage.removeItem(\"treeFiltering\");\n        this.JFrogEventBus.dispatch(EVENTS.TREE_REFRESH_SORTING);\n    }\n\n    resetAllFilters() {\n        localStorage.removeItem(\"filterFavorites\");\n        this.resetFilters();\n        this.filterHasNoMatches = false;\n    }\n\n    showTreeSearch() {\n        this.JFrogEventBus.dispatch(EVENTS.ACTIVATE_TREE_SEARCH);\n    }\n\n    switchBrowser(browser) {\n        this.artifactoryState.setState('activeFilter', this.activeFilter ? this.searchText : undefined);\n\n        // Reclicking simple browser when we are already in simple browser - go to root\n        if (browser === 'simple' && this.state.params.browser === 'simple') {\n/*\n            let repo = this.selectedNode.data.getRoot();\n            // Make sure roots are visible:\n            this.artifactoryState.setState('tree_touched', false);\n            // Use forceLoad as a Date to ensure state transition even if it's the same as before\n            this.state.go(this.state.current.name, {browser: browser, artifact: repo.fullpath, forceLoad: new Date()});\n*/\n        }\n        else if (browser === 'tree' && this.state.params.browser === 'tree') {\n//            this.JFrogEventBus.dispatch(EVENTS.TREE_COLLAPSE_ALL);\n        }\n        else if (browser != this.state.params.browser) {\n//            this.state.transitionTo(this.state.current.name, _.extend({}, this.state.params, {browser: browser}), {reload: true, notify: false});\n            this.state.go(this.state.current, _.extend({}, this.state.params, {browser: browser}), {notify: false, reload: this.state.current});\n//            this.treeBrowserDao.invalidateRoots();\n            // console.log(\" from \"+this.stateParams.browser+\" to \"+browser);\n        }\n    }\n\n    _setupKeyHints() {\n        this.hotkeys.bindTo(this.$scope).add({\n            combo: 'Enter',\n            description: 'Select node'\n        }).add({\n            combo: 'Esc',\n            description: 'Cancel search / deselect node'\n        }).add({\n            combo: 'Down',\n            description: 'Navigate down in tree / in search results'\n        }).add({\n            combo: 'Up',\n            description: 'Navigate up in tree / in search results'\n        }).add({\n            combo: 'Right',\n            description: 'Expand folder'\n        }).add({\n            combo: 'Left',\n            description: 'Collapse folder'\n        });\n    }\n\n    clearFilter() {\n        this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_CANCEL);\n    }\n\n    editFilter() {\n        this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_EDIT);\n    }\n\n    sendWindowResizeEvent() {\n        let resizeEvent = document.createEvent(\"Event\");\n        resizeEvent.initEvent(\"resize\", false, true);\n        let doSafeResize = () => {\n            try {\n                window.dispatchEvent(new Event('resize'));\n            }\n            catch (e) {\n                window.dispatchEvent(resizeEvent);\n            }\n        }\n\n        this.$timeout(()=>{\n            this.$timeout(()=>{\n                doSafeResize();\n            })\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/browsers/browsers.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../constants/artifacts_events.constants';\nimport KEYS from '../../../constants/keys.constants';\n\nexport function jfTreeSearch() {\n    return {\n        restrict: 'E',\n        controller: TreeSearchController,\n        controllerAs: 'TreeSearch',\n        templateUrl: 'states/artifacts/jf_tree_search/jf_tree_search.html',\n        replace:true,\n        bindToController: true\n    }\n}\n\nclass TreeSearchController {\n    constructor(JFrogEventBus, $element, hotkeys, $scope, $timeout) {\n        this.$scope = $scope;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$element = $element;\n        this.$timeout = $timeout;\n        this.term = '';\n        this.showSearch = false;\n        this.hotkeys = hotkeys;\n        this._setupHotkeys();\n\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.ACTIVATE_TREE_SEARCH, (key) => {\n            $timeout(()=>{\n                this._activateSearch(key);\n            });\n        });\n    }\n\n    onChange() {\n        this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_CHANGE, this.term);\n    }\n    onKeydown($event) {\n        // Send events to tree on key down / up / enter\n        if (_.include([KEYS.ENTER, KEYS.DOWN_ARROW, KEYS.UP_ARROW, KEYS.ESC], $event.keyCode)) {\n            $event.preventDefault();\n            // Deactivate on enter press\n            if (_.include([KEYS.ENTER, KEYS.ESC], $event.keyCode)) {\n                this._deactivateSearch();\n            }\n        }\n        this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_KEYDOWN, $event);\n    }\n    _deactivateSearch() {\n        this.term = '';\n        this.showSearch = false;\n        this.$searchInput().blur();\n        $('body').off('click.outsideTreeSearch');\n    }\n\n    _activateSearch(key) {\n        this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_CANCEL);\n        this.showSearch = true;\n        this.$timeout(()=>{\n            if (!this.term) { //fix for firefox not showing the first key\n                this.term = key;\n            this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_CHANGE, this.term);\n            }\n        });\n        this.$searchInput().focus();\n        $('body').on('click.outsideTreeSearch', (e) => {\n            if (!$(this.$element).has(e.target).length) {\n            this.JFrogEventBus.dispatch(EVENTS.TREE_SEARCH_CANCEL);\n                this._deactivateSearch();\n                if (!this.$scope.$$phase) this.$scope.$digest();\n            }\n        });\n\n    }\n\n    $searchInput() {\n        return this.$element.find('input')[0];\n    }\n\n    _setupHotkeys() {\n        this.hotkeys.bindTo(this.$scope).add({\n            combo: KEYS.HOTKEYS.ALPHANUMERIC.split(''),\n            description: 'Any alphanumeric key to search the tree',\n            callback: (event, hotkey) => {\n                if (_.contains(event.target.classList, 'jstree-anchor')) {\n//                    var key = hotkey.format()[0];\n                    var key = String.fromCharCode(event.which);\n                    this._activateSearch(key);\n                }\n            }\n        });\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_tree_search/jf_tree_search.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    ENTER:          13,\n    ESC:            27,\n    SPACE:          32,\n    UP_ARROW:       38,\n    DOWN_ARROW:     40,\n    HOTKEYS: {\n        ALPHANUMERIC: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890-_'\n    },\n    PROPERTY_TYPE:{\n        MULTI_SELECT:null,\n        SINGLE_SELECT:1,\n        ANY_VALUE: 0\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./constants/keys.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport JFCommonBrowser from \"../jf_common_browser/jf_common_browser\";\nimport types from '../constants/artifact_browser_icons.constant';\n\nexport function jfTreeBrowser() {\n    return {\n        scope: {\n            browserController: '=',\n            simpleMode: '=?'\n        },\n        restrict: 'E',\n        controller: JFTreeBrowserController,\n        controllerAs: 'jfTreeBrowser',\n        templateUrl: 'states/artifacts/jf_tree_browser/jf_tree_browser.html',\n        bindToController: true\n    }\n}\n\nclass JFTreeBrowserController extends JFCommonBrowser {\n    constructor($state,$timeout, JFrogEventBus, $scope, TreeBrowserDao, $stateParams, $q,\n                ArtifactoryState, ArtifactActions, JFrogNotifications, NativeBrowser, User,\n                JFrogUIUtils, JFTreeApi) {\n\n        super(JFTreeApi, $scope, ArtifactActions, ArtifactoryState, JFrogUIUtils);\n\n        this.$state = $state;\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.$stateParams = $stateParams;\n        this.$q = $q;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.JFrogEventBus = JFrogEventBus;\n        this.JFrogUIUtils = JFrogUIUtils;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n        this.treeBrowserDao = TreeBrowserDao;\n        this.artifactoryState = ArtifactoryState;\n        this.user = User.currentUser;\n        this.nativeBrowser = NativeBrowser;\n        this.types = types;\n\n    }\n\n    $onInit() {\n\n        this._registerEvents();\n\n        this._setUpTree();\n\n        this._watchModeChange();\n    }\n\n    _setUpTree() {\n        let driver = {\n            uniqueId: node => {\n                if (!node.data) console.log(node);\n                return node.data.fullpath\n            },\n            nodeById: this.nodeByPathGetter.bind(this),\n            text: node => node.text,\n            childrenChecker: this.childrenChecker.bind(this),\n            children: this.childrenGetter.bind(this),\n            parent: this.parentGetter.bind(this),\n            classes: node => {\n                let classes = [];\n                if (node.data.isTrashcan()) classes.push('trashcan');\n                else if (node.data.isInTrashcan()) classes.push('in-trashcan');\n                if (node.data.isFavorite()) classes.push('favorite');\n                return classes;\n            },\n            pane: node => {\n                if (!this.simpleMode && this.user.isAdmin() && this.isTrashPinned() && node.data.isTrashcan()) return 'trash';\n                else return 'default';\n            },\n            contextMenuItems: this._getContextMenuItems.bind(this)\n        }\n\n        this.treeApi\n                .setNodeTemplate(node => this.getNodeTemplate(node))\n                .setFilterCallback(node => this.filterCallback(node))\n                .setDataDriver(driver)\n                .on('item.selected', item => {\n                    item.data.load().then(() => {\n                        this.JFrogEventBus.dispatch(this.EVENTS.TREE_NODE_SELECT, item)\n                    });\n                })\n                .on('keydown', e => {\n                    this.JFrogEventBus.dispatch(this.EVENTS.ACTIVATE_TREE_SEARCH, e.key);\n                })\n                .on('ready', () => this.onTreeReady());\n\n        this.mainViewPane = this.treeApi.createViewPane()\n                .setItemHeight('30px')\n                .setItemsPerPage('auto');\n\n        this.trashViewPane = this.treeApi.createViewPane('trash')\n                .setItemHeight('30px')\n                .setItemsPerPage(5);\n\n        this.treeApi.freeze();\n\n    }\n\n    _watchModeChange() {\n        let firstTimeSwitch = true;\n        this.$scope.$watch('jfTreeBrowser.simpleMode', simpleMode => {\n            this.type = simpleMode ? 'simple' : 'tree';\n            this.treeApi.freeze();\n            this.treeApi.refreshPaneSelection();\n            this.treeApi.refreshFilter();\n            this.treeApi.setDrillDownMode(simpleMode).then(() => {\n                if (!firstTimeSwitch) this.treeApi.unFreeze();\n                firstTimeSwitch = false;\n            })\n        })\n    }\n\n    getNodeTemplate(node) {\n\t    return `<div>\n                    <i class=\"tree-node-icon ${this.types[node.type] ? this.types[node.type].icon : this.types['default'].icon}\"></i>\n                    <span class=\"node-text\" style=\"margin-left: 5px\">${node.text}</span>\n                </div>`\n    }\n\n    onTreeReady() {\n        this._checkIfFilterHasNoMatches();\n\n        if (!this.$state.params.artifact) {\n            this.treeApi.unFreeze();\n            this.treeApi.selectFirst();\n        }\n        else {\n            this.spinnerTimeout = this.$timeout(()=>{\n                if (this.$state.current.name === 'artifacts.browsers.path') {\n                    this.JFrogEventBus.dispatch(this.EVENTS.SHOW_SPINNER);\n                }\n            },600);\n            this.treeBrowserDao.findNodeByFullPath(this.$state.params.artifact).then(node => {\n                if (node === this.treeBrowserDao) {\n                    this.$timeout.cancel(this.spinnerTimeout);\n                    this.JFrogEventBus.dispatch(this.EVENTS.HIDE_SPINNER);\n                    this.treeApi.unFreeze();\n                    this.treeApi.selectFirst();\n                }\n                else {\n                    node = this._transformData([node])[0];\n                    let repo = this.treeApi.findNodeByUniqueId(node.data.repoKey);\n                    let openDeepNode = () => {\n                        this.treeApi.openDeepNode(node).then(() => {\n                            this.treeApi.centerOnSelected();\n                            this.treeApi.unFreeze();\n                            this.$timeout.cancel(this.spinnerTimeout);\n                            this.JFrogEventBus.dispatch(this.EVENTS.HIDE_SPINNER);\n                        })\n                    }\n                    if (!this.treeApi.isNodeFiltered(repo)) {\n                        this.afterNextFilterRefresh = () => openDeepNode();\n                        this.browserController.resetAllFilters();\n                    }\n                    else openDeepNode();\n                }\n            });\n        }\n        this.mainViewPane.focus();\n\n    }\n\n    childrenGetter(parent) {\n        let defer = this.$q.defer();\n        if (!parent) {\n            this.treeBrowserDao.getRoots().then(roots => {\n                let hasArtifactsData = roots.length > 0;\n                this.artifactoryState.setState(\"hasArtifactsData\",hasArtifactsData);\n                this.JFrogEventBus.dispatch(this.EVENTS.TREE_DATA_IS_SET,hasArtifactsData);\n\n                defer.resolve(this._transformData(roots));\n            }).catch(() => defer.resolve([]));\n        }\n        else {\n            parent.data.getChildren().then(children => {\n                defer.resolve(this._transformData(children));\n            }).catch(() => defer.resolve([]));\n        }\n        return defer.promise;\n    }\n\n    childrenChecker(parent) {\n        return parent.children;\n    }\n\n    parentGetter(node) {\n        return node.data.parent ? this._transformData([node.data.parent])[0] : undefined;\n    }\n\n    nodeByPathGetter(path) {\n        let defer = this.$q.defer();\n        this.treeBrowserDao.findNodeByFullPath(path).then(node => {\n            if (node !== this.treeBrowserDao) {\n                defer.resolve(this._transformData([node])[0]);\n            }\n            else defer.reject();\n        });\n\n        return defer.promise;\n    }\n\n    _transformData(data) {\n        data = data || [];\n        return data.map((node) => {\n            let item = {};\n            item.children = node.hasChild;\n            item.text = node.isTrashcan() ? '<span class=\"trashcan-node\">Trash Can<jf-trash-pin ng-if=\"appScope.jfTreeBrowser.type === \\'tree\\'\" tree-browser=\"appScope.jfTreeBrowser\"></jf-trash-pin></span>'\n                    : this.JFrogUIUtils.getSafeHtml(node.text);\n            item.data = node;\n            item.type = node.iconType;\n            if (node.isTrashcan())\n                item.li_attr={class:\"-the-trashcan\"};\n\n            let type = (typeof node.fileType != 'undefined' ? node.fileType : node.type);\n            // replace the node icon type to the package type if necessary\n            if(this._iconsShouldBeReplacedWithRepoPkgTypeIcon(type,node.repoPkgType,node.fullpath)){\n                item.type = node.iconType = node.repoPkgType.toLocaleLowerCase();\n            }\n\n            return item;\n        });\n    }\n\n    _registerEvents() {\n\n        this.JFrogEventBus.registerOnScope(this.$scope, [this.EVENTS.ACTION_WATCH, this.EVENTS.ACTION_UNWATCH], node => this._refreshContextMenu(node))\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_FAVORITES, () => {\n            this.JFrogEventBus.dispatch(this.EVENTS.TREE_REFRESH_FAVORITES);\n        })\n\n        this.treeApi.registerEventOnNode(this.EVENTS.TREE_REFRESH_FAVORITES, (node, params) => {\n            if (node.data) node.data.updateFavoriteState()\n        })\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_SEARCH_CHANGE, text => this._searchTree(text)\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_SEARCH_CANCEL, text => this._clear_search()\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_SEARCH_KEYDOWN, e => {\n            this.treeApi.handleKeyEvent(e);\n            this._searchTreeKeyDown(e.keyCode)\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_DEPLOY, (eventArgs) => {\n            this._refreshAfterDeploy(eventArgs);\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_REFRESH, node => this._refreshFolder(node)\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_NODE_CM_REFRESH, node => this._refreshContextMenu(node)\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_REFRESH, (node) => node ? this._refreshFolder(node) : this._refreshTree()\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_DELETE, (node) => {\n            if (this.simpleMode) {\n                this._refreshParentFolder(node).then(() => {\n                    let parentNode = node.data.parent ? this.treeApi.findNodeByUniqueId(node.data.parent.fullpath) : null;\n                    if (parentNode && !parentNode.$childrenCache.length) {\n                        this.treeApi.selectNode(parentNode);\n                        this.treeApi.drillUp();\n                    }\n                })\n            }\n            else {\n                this._refreshParentFolder(node).then(() => {\n                    let selected = this.treeApi.getSelectedNode();\n                    if (selected === node) {\n                        let parent = this.treeApi.findNodeByUniqueId(node.data.parent.fullpath);\n                        this.treeApi.selectNode(parent)\n                    }\n                    else {\n                        let updated = this.treeApi.findNodeByUniqueId(selected.data.fullpath);\n                        this.treeApi.selectNode(updated)\n                    }\n                })\n                if ((!node.data || !node.data.isInTrashcan || !node.data.isTrashcan) || (!node.data.isInTrashcan() && !node.data.isTrashcan())) {\n                    this.refreshTrashCan();\n                }\n            }\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_DELETE_CONTENT, (node) => {\n            node.data.invalidateParent();\n            this._refreshFolder(node);\n            this.refreshTrashCan();\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_MOVE, (options) => {\n            if (!this.simpleMode) {\n                this._refreshParentFolder(options.node).then(() => {\n                    this._refreshFolderPath(options);\n                })\n            }\n            else {\n                this._refreshFolderPath(options);\n            }\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_COPY, (options) => {\n            this._refreshFolderPath(options);\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_NODE_OPEN, path => {\n            this._openTreeNode(path)\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_COLLAPSE_ALL, () => {\n            this._collapseAll();\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_COMPACT, () => {\n            this._toggleCompactFolders();\n        });\n\n        // URL changed (like back button / forward button / someone input a URL)\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TABS_URL_CHANGED, (stateParams) => {\n            // Check if it's already the current selected node (to prevent opening the same tree node twice)\n            let selectedNode = this.treeApi.getSelectedNode();\n            selectedNode = selectedNode ? selectedNode.data : null;\n            if (selectedNode && selectedNode.fullpath === stateParams.artifact) return;\n            this.treeBrowserDao.findNodeByFullPath(stateParams.artifact)\n                    .then(node => {\n                        if (node && node !== this.treeBrowserDao) {\n                            node = this._transformData([node])[0];\n                            this.treeApi.openDeepNode(node);\n                        }\n                    });\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this._refreshTree();\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_REFRESH_SORTING, ()=>this._refreshTreeSorting());\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_REFRESH_FILTER, ()=>this._refreshTreeSorting());\n\n    }\n\n    _refreshAfterDeploy(eventArgs) {\n        if (this.refreshingAfterDeploy) {\n            this.$timeout(() => this._refreshAfterDeploy(eventArgs), 100);\n            return;\n        }\n        let repoKey = eventArgs[0];\n        let repoNode = this.treeApi.findNodeByUniqueId(repoKey);\n        this.refreshingAfterDeploy = true;\n        this._refreshFolder(repoNode).then(() => {\n            this.refreshingAfterDeploy = false;\n            this.treeApi.openNode(repoNode);\n        })\n    }\n\n    _toggleCompactFolders() {\n        this.treeBrowserDao.invalidateRoots();\n\n        this.spinnerTimeout = this.$timeout(()=>{\n            this.JFrogEventBus.dispatch(this.EVENTS.SHOW_SPINNER);\n        },600);\n\n        this.treeApi.refreshTree(true, false).then(() => {\n            this.$timeout.cancel(this.spinnerTimeout);\n            this.JFrogEventBus.dispatch(this.EVENTS.HIDE_SPINNER);\n        })\n    }\n\n    _refreshTreeSorting() {\n        this.treeApi.freeze();\n        this.treeApi.refreshFilter();\n        this.treeApi.refreshTree(true, false).then(() => {\n            this._checkIfFilterHasNoMatches().then(() => {\n                let selected = this.treeApi.getSelectedNode();\n                if (selected) {\n                    if (!this.treeApi.isNodeFiltered(selected)) {\n                        this.$timeout(() => this.treeApi.selectFirst());\n                    }\n                }\n                else {\n                    this.treeApi.selectFirst();\n                }\n                this.treeApi.centerOnSelected();\n                this.treeApi.unFreeze();\n                if (this.afterNextFilterRefresh) {\n                    this.afterNextFilterRefresh();\n                    delete this.afterNextFilterRefresh;\n                }\n            })\n        })\n    }\n\n    _checkIfFilterHasNoMatches() {\n        let defer = this.$q.defer();\n\n        if (this.mainViewPane.getFilteredNodesCount() === 0 && this.mainViewPane.getNodesCount() !== 0) {\n            if (this.simpleMode && this.treeApi.getCurrentParent()) {\n                this.treeApi.drillUpToRoot();\n                this.$timeout(() => {\n                    this._checkIfFilterHasNoMatches().then(() => {\n                        defer.resolve();\n                    })\n                });\n            }\n            else {\n                this.browserController.filterHasNoMatches = true;\n                defer.resolve();\n            }\n        }\n        else {\n            this.browserController.filterHasNoMatches = false;\n            defer.resolve();\n        }\n\n        return defer.promise;\n    }\n\n    toggleTrashPin(e) {\n        e.stopImmediatePropagation()\n        e.preventDefault();\n\n        if (this.isTrashPinned()) {\n            this.unpinTrash();\n        }\n        else {\n            this.pinTrash();\n        }\n    }\n\n    pinTrash() {\n        localStorage.pinnedTrash = true;\n        this.treeApi.refreshPaneSelection();\n        this._checkIfFilterHasNoMatches();\n    }\n\n    unpinTrash() {\n        localStorage.pinnedTrash = false;\n        this.treeApi.refreshPaneSelection();\n        let trashCanNode = this.treeApi.findNode(n => n.data.isTrashcan());\n        this.$timeout(() => this.treeApi.bringNodeToView(trashCanNode));\n        this._checkIfFilterHasNoMatches();\n    }\n\n    isTrashPinned() {\n        return localStorage.pinnedTrash === \"true\";\n    }\n\n    _refreshFolder(node) {\n        if (node.data) {\n            node.data.invalidateChildren();\n            if (node.data.isRepo()) {\n                this.treeBrowserDao.invalidateRoots();\n            }\n        }\n        else this.treeBrowserDao.invalidateRoots();\n        return this.treeApi.refreshNode(node);\n    }\n\n    _refreshTree(node) {\n        this.treeBrowserDao.invalidateRoots();\n        return this.treeApi.refreshTree();\n    }\n\n    _refreshContextMenu(node) {\n        this.treeApi.refreshNodeContextMenu(node);\n    }\n\n    _refreshParentFolder(node) {\n        node.data.invalidateParent();\n        let parentNode = this.treeApi.getParentNode(node);\n        if (parentNode) return this._refreshFolder(parentNode);\n        else {\n            if (node.data && node.data.isRepo()) {\n                return this._refreshFolder(node);\n            }\n            else {\n                return this.$q.when();\n            }\n        }\n    }\n\n    refreshTrashCan() {\n        let trashNode = this.treeApi.findNode(node => node.data.repoType === 'trash' && node.data.repoKey === 'auto-trashcan');\n        if (trashNode) this.JFrogEventBus.dispatch(this.EVENTS.TREE_REFRESH, trashNode);\n    }\n\n    _refreshFolderPath(option) {\n        let targetPath = _.compact(option.target.targetPath.split('/'));\n        let path = [option.target.targetRepoKey].concat(targetPath).join('/');\n        this.treeApi.freeze();\n        if (this.simpleMode) this.treeApi.drillUpToRoot();\n        let repo = this.treeApi.findNodeByUniqueId(option.target.targetRepoKey);\n        this._refreshFolder(repo).then(() => {\n            this.treeApi.openDeepNodeByUniqueId(path).then(() => {\n                this.treeApi.centerOnSelected();\n                this.treeApi.unFreeze();\n            })\n        })\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_tree_browser/jf_tree_browser.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport KEYS from \"../../../constants/keys.constants\";\nimport ACTIONS from \"../../../constants/artifacts_actions.constants\";\nimport {REPO_FORM_CONSTANTS} from '../../admin/repositories/repository_form.constants';\n\nconst REGEXP = /(pkg|repo)\\:\\ *([^;]+)(?:;|$)\\ */g;\n\nexport default class JFCommonBrowser {\n    constructor(JFTreeApi, $scope, ArtifactActions, ArtifactoryState, JFrogUIUtils) {\n\n        this.ArtifactoryState = ArtifactoryState;\n        this.artifactActions = ArtifactActions;\n        this.activeFilter = false;\n\n        this.utils = JFrogUIUtils;\n        this.treeApi = new JFTreeApi($scope);\n        this.treeApi.showLines();\n        this.treeApi.on('item.dblClicked', node => {\n            this.treeApi.toggleExpansion(node);\n        })\n\n        if (this.browserController) {\n            this.activeFilter = this.browserController.activeFilter || false;\n            this.searchText = this.browserController.searchText || '';\n            if (this.searchText.endsWith('*')) this.searchText = this.searchText.substr(0,this.searchText.length-1);\n        }\n\n        if (!localStorage.favoritesRepos) localStorage.setItem('favoritesRepos', '{\"favoritesRepos\" : []}');\n\n        this._initTreeSorting();\n\n        this.packageTypesReplacingArchives = ['bower','npm','cocoapods','gitlfs','opkg','composer','pypi','vagrant', 'helm', 'chef', 'go', 'cran', 'conda'];\n    }\n\n    /****************************\n     * Context menu items\n     ****************************/\n\n    _getContextMenuItems(obj, cb) {\n        let actionItems = {};\n        if (obj.data) {\n            let node = obj.data;\n            node.load()\n                    .then(() => node.refreshWatchActions())\n                    .then(() => node.getDownloadPath())\n                    .then(() => {\n                        if (node.actions) {\n                            node.actions.forEach((actionObj) => {\n                                let name = actionObj.name;\n                                let action = angular.copy(ACTIONS[name]);\n\n                                if (name == 'Favorites' && localStorage.favoritesRepos) {\n                                    let favoritesRepos = JSON.parse(localStorage.favoritesRepos);\n                                    action.icon = _.contains(favoritesRepos.favoritesRepos, node.text) ? 'icon-star-full' : 'icon-star';\n                                    action.title = _.contains(favoritesRepos.favoritesRepos, node.repoKey) ? 'Remove from Favorites' : 'Add to Favorites';\n                                }\n\n                                if (!action) {\n                                    console.log(\"Unrecognized action\", name);\n                                    return true;\n                                }\n                                action._class = 'menu-item-' + action.icon;\n                                action.icon = 'action-icon icon ' + action.icon;\n                                action.name = action.title;\n\n                                if (actionObj.name === 'Download') {\n                                    action.link = node.actualDownloadPath;\n                                }\n                                else {\n                                    action.callback = () => {\n                                        this.artifactActions.perform(actionObj, obj, true);\n                                    }\n                                }\n                                if (actionObj.name === 'Distribute' && node.repoType === 'distribution') {\n                                    action = angular.copy(ACTIONS['Redistribute']);\n                                    ;\n                                }\n                                actionItems[name] = action;\n                            });\n\n                            cb(actionItems);\n                        }\n                        else {\n                            cb([]);\n                        }\n                    });\n        }\n        else {\n            cb([]);\n        }\n    }\n\n    _focusOnTree() {\n        this.treeApi.focus();\n    }\n\n    _getScoreObjectFromOrderArray(order) {\n        let repoScore = {};\n        let score = 100000;\n\n        order.forEach((repoType) => {\n            repoScore[repoType.toLowerCase()] = score;\n            if (repoType === 'REMOTE') {\n                repoScore['cached'] = score;\n                score = score / 10;\n            }\n            score = score / 10;\n        });\n        return repoScore;\n    }\n\n    _initTreeSorting() {\n\n        let repoScore, repoOrder;\n        this.treeApi.setSortingFunction((a,b) => {\n            if (!repoOrder) {\n                repoOrder = this.ArtifactoryState.getState('repoOrder');\n                repoScore = this._getScoreObjectFromOrderArray(repoOrder || ['VIRTUAL','DISTRIBUTION', 'LOCAL', 'REMOTE']);\n            }\n\n            let aNode = a;\n            let bNode = b;\n\n            let aText = aNode.data ? aNode.data.text.toLowerCase() : '*';\n            let bText = bNode.data ? bNode.data.text.toLowerCase() : '*';\n\n            let aType = aNode.data ? aNode.data.type : '*';\n            let bType = bNode.data ? bNode.data.type : '*';\n            let aRepoType = aNode.data ? aNode.data.repoType : '*';\n            let bRepoType = bNode.data ? bNode.data.repoType : '*';\n            let aPkgType = aNode.data ? aNode.data.repoPkgType : '*';\n            let bPkgType = bNode.data ? bNode.data.repoPkgType : '*';\n\n            let aScore=0,bScore=0;\n\n            if (aNode.data && aNode.data.isTrashcan && aNode.data.isTrashcan() && aNode.text !== '..') return 1;\n            else if (bNode.data && bNode.data.isTrashcan && bNode.data.isTrashcan() && bNode.text !== '..') return -1;\n            else if ((aType === 'repository' || aType === 'virtualRemoteRepository') &&\n                    (bType === 'repository' || bType === 'virtualRemoteRepository')) {\n                //both repos - top level sort\n\n                if (localStorage.treeSortingMethod  === 'pkg_type') {\n                    aPkgType = (aPkgType === REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES) ? REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.BINTRAY : aPkgType;\n                    bPkgType = (bPkgType === REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES) ? REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.BINTRAY : bPkgType;\n\n                    if (aPkgType < bPkgType) aScore+=1000000;\n                    if (bPkgType < aPkgType) bScore+=1000000;\n                }\n\n                if (localStorage.treeSortingMethod  === 'repo_type' || localStorage.treeSortingMethod  === 'pkg_type' || !localStorage.treeSortingMethod) {\n                    if (aRepoType === 'distribution' || aRepoType === 'releaseBundles') aScore += repoScore.distribution;\n                    if (bRepoType === 'distribution' || bRepoType === 'releaseBundles') bScore += repoScore.distribution;\n\n                    if (aRepoType==='local') aScore+=repoScore.local;\n                    if (bRepoType==='local') bScore+=repoScore.local;\n\n                    if (aRepoType==='cached') aScore+=repoScore.cached;\n                    if (bRepoType==='cached') bScore+=repoScore.cached;\n\n                    if (aRepoType==='remote') aScore+=repoScore.remote;\n                    if (bRepoType==='remote') bScore+=repoScore.remote;\n\n                    if (aRepoType==='virtual') aScore+=repoScore.virtual;\n                    if (bRepoType==='virtual') bScore+=repoScore.virtual;\n                }\n\n                if (aText<bText) aScore++;\n                if (aText>bText) bScore++;\n\n                return aScore<bScore?1:-1;\n            }\n            else if ((aType !== 'repository' && aType !== 'virtualRemoteRepository') &&\n                    (bType !== 'repository' && bType !== 'virtualRemoteRepository')) {\n                //both files or folders\n\n                if (aType==='folder') aScore+=10000;\n                if (bType==='folder') bScore+=10000;\n\n                if (aNode.text === '..') aScore+=100000;\n                if (bNode.text === '..') aScore+=100000;\n\n                let aHasNumVal = !_.isNaN(parseInt(aText));\n                let bHasNumVal = !_.isNaN(parseInt(bText));\n\n                if (aHasNumVal && bHasNumVal) {\n\n                    let versionCompareResult = this.utils.compareVersions(aText,bText);\n\n                    if (versionCompareResult === -1) aScore += 100;\n                    if (versionCompareResult === 1) bScore += 100;\n                }\n                else {\n\n                    let aDigitIndex = aText.search(/\\d/);\n                    let bDigitIndex = bText.search(/\\d/);\n\n                    if (aDigitIndex === bDigitIndex && aDigitIndex !== -1) {\n                        let aBeforeNum = aText.substr(0,aDigitIndex);\n                        let bBeforeNum = bText.substr(0,bDigitIndex);\n                        if (aBeforeNum === bBeforeNum) {\n                            let aFromNum = aText.substr(aDigitIndex);\n                            let bFromNum = bText.substr(bDigitIndex);\n\n                            let versionCompareResult = this.utils.compareVersions(aFromNum,bFromNum);\n\n                            if (versionCompareResult === -1) aScore += 100;\n                            if (versionCompareResult === 1) bScore += 100;\n\n                        }\n                    }\n\n                    if (aText<bText) aScore++;\n                    if (aText>bText) bScore++;\n                }\n                return aScore<bScore?1:-1;\n            }\n            else {\n                if (!aNode.data) return -1; //special node\n                else if (!bNode.data) return 1; //special node\n                else if ((aType === 'repository' || aType === 'virtualRemoteRepository')) return -1;\n                else if ((bType === 'repository' || bType === 'virtualRemoteRepository')) return 1;\n                else return aText>bText?1:-1;\n            }\n        });\n    }\n\n    _getFileExtension(path){\n        return (path.indexOf('.') === -1 ? '' : path.split('.').pop());\n    }\n\n    _iconsShouldBeReplacedWithRepoPkgTypeIcon(nodeType,repoPkgType,fullPath){\n        let repotype = repoPkgType && repoPkgType.toLocaleLowerCase();\n        return ((nodeType === 'archive' &&\n                ($.inArray(repotype,this.packageTypesReplacingArchives) !== -1))\n                ||\n                (repoPkgType === 'Gradle' &&\n                        this._getFileExtension(fullPath) === 'gradle'));\n    }\n\n    filterCallback(node) {\n        let treeNode = node.data;\n        let rootRepo = node && node.data && node.data.getRoot ? node.data.getRoot() : null;\n\n        let isFilterMatch = (str, filterText) => {\n            if (filterText.indexOf(',') === -1) {\n                return str.toLowerCase().trim().indexOf(filterText.toLowerCase().trim()) != -1;\n            }\n            else {\n                let filterArray = filterText.split(',');\n                return filterArray.reduce((acc,val)=>{return acc || (val && str.toLowerCase().trim().indexOf(val.trim().toLowerCase()) != -1)},false)\n            }\n        }\n\n        let checkFavorites = (treeNode) => {\n            if (!localStorage.filterFavorites || !localStorage.favoritesRepos) return true;\n            let favoritesRepos = JSON.parse(localStorage.favoritesRepos);\n            if (((treeNode.isTrashcan() || treeNode.isInTrashcan()) && this.type === 'tree') || _.includes(favoritesRepos.favoritesRepos, rootRepo.repoKey)) return true;\n            else return false;\n        }\n\n        let combinedFilter = this.getCombinedFilter(this.searchText);\n        let filterRegexp = new RegExp(REGEXP);\n        let matches = filterRegexp.exec(combinedFilter);\n        if (matches) {\n            let ret = true;\n            while (matches) {\n                if (matches[2].trim()) {\n                    let filterType = matches[1].trim();\n                    let filterText = matches[2].trim();\n                    switch(filterType) {\n                        case 'pkg':\n                            ret = ret && (\n                                    (treeNode.isRepo()\n                                            && treeNode.repoPkgType\n                                            && isFilterMatch(treeNode.repoPkgType, filterText)\n                                    )\n                                    ||\n                                    (!treeNode.isRepo()\n                                            && rootRepo.isRepo()\n                                            && isFilterMatch(rootRepo.repoPkgType, filterText))\n                                    ||\n                                    (\n                                            (\n                                                    (treeNode.isTrashcan\n                                                            && treeNode.isTrashcan())\n                                                    ||\n                                                    (treeNode.isInTrashcan\n                                                            && treeNode.isInTrashcan())\n                                            )\n                                            && localStorage.pinnedTrash\n                                            && this.type === 'tree'\n                                    )\n                            );\n                            break;\n                        case 'repo':\n                            ret = ret && (\n                                    (treeNode.isRepo()\n                                            && isFilterMatch(treeNode.repoType === _.camelCase(REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES) ? 'distribution' : treeNode.repoType, filterText))\n                                    ||\n                                    (!treeNode.isRepo()\n                                            && rootRepo.isRepo()\n                                            && isFilterMatch(treeNode.repoType === _.camelCase(REPO_FORM_CONSTANTS.DISTRIBUTION_REPO_TYPES.RELEASE_BUNDLES) ? 'distribution' : treeNode.repoType, filterText))\n                                    ||\n                                    (\n                                            (\n                                                    (treeNode.isTrashcan\n                                                            && treeNode.isTrashcan())\n                                                    ||\n                                                    (treeNode.isInTrashcan\n                                                            && treeNode.isInTrashcan())\n                                            )\n                                            &&\n                                            localStorage.pinnedTrash\n                                            && this.type === 'tree'\n                                    )\n                            );\n                            break;\n                    }\n                }\n                matches = filterRegexp.exec(combinedFilter);\n            }\n            return ret && checkFavorites(treeNode);\n        }\n        else return checkFavorites(treeNode);\n    }\n\n    /****************************\n     * Searching the tree\n     ****************************/\n    _searchTree(text) {\n        this.searchText = text || '';\n        this.treeApi.refreshFilter();\n        let showOnlyMatches = text ? text.match(new RegExp(REGEXP)) || false : false;\n        this._jsQuickFind(this.searchText);\n    }\n\n    _jsQuickFind(searchText) {\n        this.treeApi.quickFind(searchText);\n    }\n\n    _isInActiveFilterMode(checkIfMatchesFound = false) {\n        if (this.searchText.match(new RegExp(REGEXP))) {\n            let justSearchTerm = this.searchText.substr(this.searchText.indexOf(':')+1).trim();\n            if (justSearchTerm) {\n                if (checkIfMatchesFound) {\n                    let matchesFound = !!this.treeApi.getViewPane().getFilteredNodesCount();\n                    return matchesFound ? true : 'no results';\n                }\n                else {\n                    return true;\n                }\n            }\n            else return 'empty';\n        }\n        else return false;\n    }\n\n    _searchTreeKeyDown(key) {\n        if (key == KEYS.ENTER) {\n            //manually set the model to the input element's value (because the model is debounced...)\n            this.searchText = $('.jf-tree-search').val();\n\n            let isInActiveFilterMode = this._isInActiveFilterMode(true);\n\n            if (isInActiveFilterMode === true) {\n                this.activeFilter = true;\n                if (this.browserController) {\n                    this.browserController.activeFilter = true;\n                    this.browserController.searchText = this.searchText + '*';\n                }\n                this._searchTree(this.searchText);\n                this._focusOnTree();\n\n                let selected = this.treeApi.getSelectedNode();\n                if (!selected || !this.treeApi.isNodeFiltered(selected)) {\n                    this.treeApi.selectFirst();\n                }\n            }\n            else if (isInActiveFilterMode === 'no results') {\n                if (this.artifactoryNotifications) this.artifactoryNotifications.create({warn: \"No repositories matches the filter expression\"});\n                this._clear_search();\n            }\n            else {\n                this.activeFilter = false;\n                if (this.browserController) this.browserController.activeFilter = false;\n                //                this._selectCurrentSearchResult();\n                this.treeApi.selectPreSelected();\n                this.treeApi.openSelected();\n                this._clear_search();\n                this._focusOnTree();\n                this.currentResult = null;\n            }\n        }\n        else if (key == KEYS.ESC) {\n            this.activeFilter = false;\n            if (this.browserController) this.browserController.activeFilter = false;\n            this._clear_search();\n            this._focusOnTree();\n            this.currentResult = null;\n        }\n    }\n\n    _clear_search() {\n        this.activeFilter = false;\n        if (this.browserController) this.browserController.activeFilter = false;\n\n        this.searchNodes = null;\n        this.searchParentNodes = null;\n        this.nomatchNodes = null;\n        this.nomatchParentNodes = null;\n        this.searchText = '';\n        this.treeApi.quickFind('');\n        this.treeApi.refreshFilter();\n    }\n\n    getPersistentFilter() {\n        let persistentFilter = localStorage.getItem(\"treeFiltering\");\n        if (persistentFilter) {\n            persistentFilter = JSON.parse(persistentFilter);\n            let filterArray = [];\n            if (persistentFilter.pkg.length) filterArray.push(`pkg:${persistentFilter.pkg.join(',')}`);\n            if (persistentFilter.repo.length) filterArray.push(`repo:${persistentFilter.repo.join(',')}`);\n            let filterString = filterArray.join(';');\n\n            return filterString || (localStorage.filterFavorites && localStorage.favoritesRepos ? '*' : '');\n        }\n        return localStorage.filterFavorites && localStorage.favoritesRepos ? '*' : '';\n    }\n\n    getCombinedFilter(tempFilter) {\n        let persistentFilter = this.getPersistentFilter();\n        if (!tempFilter) {\n            return persistentFilter;\n        }\n        else {\n\n            let persistentObj = this._filterStringToFilterObject(persistentFilter);\n            let tempObj = this._filterStringToFilterObject(tempFilter);\n\n            let pkgArray = persistentObj.pkg ? _.filter(persistentObj.pkg,val=>{\n                return _.find(tempObj.pkg,tempVal=>val.toLowerCase().indexOf(tempVal) !== - 1);\n            }) : tempObj.pkg || [];\n            let repoArray = persistentObj.repo ? _.filter(persistentObj.repo,val=>{\n                return _.find(tempObj.repo,tempVal=>val.toLowerCase().indexOf(tempVal) !== - 1);\n            }) : tempObj.repo || [];\n\n            if (!pkgArray.length) pkgArray = persistentObj.pkg;\n            if (!repoArray.length) repoArray = persistentObj.repo;\n\n            let combinedArray = [];\n            if (pkgArray && pkgArray.length) combinedArray.push(`pkg:${pkgArray.join(',')}`);\n            if (repoArray && repoArray.length) combinedArray.push(`repo:${repoArray.join(',')}`);\n            let combinedString = combinedArray.join(';');\n\n            return combinedString;\n        }\n    }\n\n    _filterStringToFilterObject(filterString) {\n\n        if (!filterString) return {};\n\n        let filterRegexp = new RegExp(REGEXP);\n\n        let part1 = filterRegexp.exec((filterString.match(filterRegexp) || [])[0]) || [];\n        let part2 = filterRegexp.exec((filterString.match(filterRegexp) || [])[1]) || [];\n\n        let obj = {\n            [part1[1]]: (part1[2] || '').split(','),\n            [part2[1]]: (part2[2] || '').split(',')\n        }\n\n        delete obj.undefined;\n        return obj;\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_common_browser/jf_common_browser.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function jfTrashPin() {\n    return {\n        scope: {\n            treeBrowser: '='\n        },\n        restrict: 'E',\n        controller: JFTrashPinController,\n        controllerAs: 'jfTrashPin',\n        bindToController: true,\n        template: `<i class=\"icon icon-pin trash-pin\"\n                      ng-class=\"{'icon-pin': !jfTrashPin.treeBrowser.isTrashPinned(), 'icon-unpin': jfTrashPin.treeBrowser.isTrashPinned()}\"\n                      ng-style=\"{left: jfTrashPin.getLeftPosition()}\" \n                      ng-click=\"jfTrashPin.treeBrowser.toggleTrashPin($event); jfTrashPin.updateTooltipText()\"  \n                      jf-tooltip=\"{{jfTrashPin.tooltipText}}\"></i>`\n    }\n}\n\n\nclass JFTrashPinController {\n    constructor($element) {\n        this.$element = $element;\n    }\n\n    $onInit() {\n        this.updateTooltipText();\n    }\n\n    updateTooltipText() {\n        this.tooltipText = !this.treeBrowser.isTrashPinned() ? 'Pin Trash Can' : 'Unpin Trash Can';\n    }\n\n    getLeftPosition() {\n        let trashPin = $(this.$element).find('.trash-pin');\n        let hScroll = trashPin.parents('.h-scroll-wrapper');\n        return hScroll.scrollLeft() + hScroll.parent().width() - 50 + 'px';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_tree_browser/jf_trash_pin.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport JFCommonBrowser from \"../jf_common_browser/jf_common_browser\";\nimport types from '../constants/artifact_browser_icons.constant';\n\nexport function jfStashBrowser() {\n    return {\n        scope: {\n            startCompact: '='\n        },\n        restrict: 'E',\n        controller: JFStashBrowserController,\n        controllerAs: 'jfStashBrowser',\n        templateUrl: 'states/artifacts/jf_stash_browser/jf_stash_browser.html',\n        bindToController: true\n    }\n}\n\nclass JFStashBrowserController extends JFCommonBrowser {\n    constructor(JFTreeApi, $timeout, $injector, JFrogEventBus, $element, $scope, $state, $stateParams,\n                $q, ArtifactoryState, ArtifactActions, StashResultsDao, User, JFrogUIUtils) {\n\n        super(JFTreeApi, $scope, ArtifactActions, ArtifactoryState, JFrogUIUtils);\n\n        this.rootID = '____root_node____';\n\n        this.type=\"stash\";\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$q = $q;\n        this.user = User;\n        this.TreeNode = $injector.get('TreeNode');\n        this.JFrogEventBus = JFrogEventBus;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n        this.JFrogUIUtils  = JFrogUIUtils;\n        this.stashResultsDao = StashResultsDao;\n        this.types = types;\n\n\n        this.whenTreeDataLoaded = $q.defer();\n\n        this.$element = $element;\n\n        this.filteredActions = ['Copy', 'Move', 'Watch', 'Unwatch', 'UploadToBintray', 'Distribute', 'Refresh', 'DeleteVersions', 'DownloadFolder', 'Zap', 'ZapCaches', 'IgnoreAlert', 'UnignoreAlert'];\n\n        this.discardedCount = 0;\n\n\n    }\n\n    $onInit() {\n        this.compactMode = this.startCompact || false;\n        this._registerEvents();\n        this._setUpTree();\n    }\n\n    _setUpTree() {\n\n        let driver = {\n            uniqueId: node => node.id,\n            nodeById: this.nodeByPathGetter.bind(this),\n            text: node => node.text,\n            childrenChecker: this.childrenChecker.bind(this),\n            children: this.childrenGetter.bind(this),\n            parent: this.parentGetter.bind(this),\n            contextMenuItems: this._getContextMenuItems.bind(this)\n        }\n\n        this.treeApi\n                .setNodeTemplate(node => this.getNodeTemplate(node))\n                .setDataDriver(driver)\n                .on('item.selected', item => {\n                    item.data.load().then(() => {\n                        this.JFrogEventBus.dispatch(this.EVENTS.TREE_NODE_SELECT, item)\n                    });\n                })\n                .on('keydown', e => {\n                    this.JFrogEventBus.dispatch(this.EVENTS.ACTIVATE_TREE_SEARCH, e.key);\n                })\n                .on('ready', this.onReady.bind(this))\n\n\n        this.treeApi.createViewPane()\n                .setItemHeight('30px')\n                .setItemsPerPage('auto');\n\n\n        this.treeApi.freeze();\n    }\n\n    getNodeTemplate(node) {\n        return `<div>\n                    <i class=\"tree-node-icon ${this.types[node.type] ? this.types[node.type].icon : this.types['default'].icon}\"></i>\n                    <span class=\"node-text\" style=\"margin-left: 5px\">${node.text}</span>\n                </div>`\n    }\n\n\n    onReady() {\n        let root = _.find(this.stashData, {id: this.rootID});\n        let currentPath = this.$stateParams.artifact ? this.$stateParams.artifact.substring(this.$stateParams.artifact.indexOf('/')+1).split(' ').join('') : null;\n        let nodeToOpen = this.nodeByPathGetter(currentPath);\n\n        if (!nodeToOpen) {\n            this.treeApi.openNode(root);\n            this.treeApi.unFreeze();\n            this.treeApi.selectFirst();\n        }\n        else {\n            this.treeApi.openDeepNode(nodeToOpen).then(() => this.treeApi.unFreeze())\n        }\n        this.treeApi.focus();\n\n    }\n\n\n    fetchStashData() {\n        let defer = this.$q.defer();\n        this.stashResultsDao.get({name: 'stash'}).$promise.then((data) => {\n            this.stashData = this._transformStashDataToTree(data);\n            if (this.compactMode) {\n                this.stashData = this._compactTree(this.stashData);\n            }\n            this.whenTreeDataLoaded.resolve();\n            defer.resolve()\n        });\n\n        return defer.promise;\n\n    }\n\n\n    nodeByPathGetter(path) {\n        let node = _.find(this.stashData, {id: path});\n        return node;\n    }\n\n    childrenChecker(parent) {\n        return !!_.filter(this.stashData, {parent: parent.id}).length;\n    }\n\n    childrenGetter(parent) {\n        let defer = this.$q.defer();\n        let childrenGetterInner = () => {\n            if (!parent) {\n                defer.resolve(_.filter(this.stashData, {id: this.rootID}));\n            }\n            else {\n                let children = _.filter(this.stashData, {parent: parent.id})\n                defer.resolve(children);\n            }\n        }\n        if (!this.stashData) {\n            this.fetchStashData().then(childrenGetterInner);\n        }\n        else childrenGetterInner();\n\n        return defer.promise;\n    }\n\n    parentGetter(node) {\n        let parentId = node.parent;\n        let parent = this.nodeByPathGetter(parentId);\n        return parent;\n    }\n\n    _transformStashDataToTree(stashData) {\n\n        let treeData = [];\n\n        let pushToTree = (treeItemData) => {\n            if (!_.findWhere(treeData,{id:treeItemData.id})) {\n                treeData.push(treeItemData);\n            }\n        };\n\n        this.rootNode = this._createRootNode(stashData);\n        pushToTree(this.rootNode);\n\n        stashData.forEach((result,index)=>{\n            result.path = result.relativePath;\n            result.text = result.name;\n            result.type = 'file';\n\n            let dirArray = (result.relativePath).split('/');\n            dirArray.pop();\n\n            let resultNode = {\n                id: result.relativePath.split(' ').join(''),\n                text: this.JFrogUIUtils.getSafeHtml(result.name),\n                parent: dirArray.join('/').split(' ').join('') || this.rootID,\n                type: result.mimeType,\n                data: this._filterActions(new this.TreeNode(result))\n            };\n\n            // replace the node icon type to the package type if necessary\n            let type = (typeof result.fileType != 'undefined' ? result.fileType : result.type);\n            if(this._iconsShouldBeReplacedWithRepoPkgTypeIcon(type,result.repoPkgType,result.fullpath)){\n                resultNode.type = resultNode.data.iconType = result.repoPkgType.toLocaleLowerCase();\n            }\n\n            pushToTree(resultNode);\n\n            for (let i = dirArray.length-1; i>=0; i--) {\n                let up = _.clone(dirArray);\n                up.pop();\n\n                let folderNode = {\n                    id: dirArray.join('/').split(' ').join(''),\n                    text: dirArray[i],\n                    parent: up.join('/').split(' ').join('') || this.rootID,\n                    type: 'folder',\n                    data: this._filterActions(new this.TreeNode({\n                        repoKey: result.repoKey,\n                        path: dirArray.join('/'),\n                        text: dirArray[i],\n                        type: 'folder'\n                    }))\n                };\n\n                pushToTree(folderNode);\n                dirArray.pop();\n            }\n\n        });\n\n        return treeData;\n    }\n\n    _createRootNode(stashData) {\n        let THIS = this;\n        let node;\n        node = {\n            id: this.rootID,\n            parent: '#',\n            text: 'Stashed Search Results',\n            type: 'stash',\n            data: {\n                text: 'Stashed Search Results',\n                iconType: 'stash',\n                load: function() {\n\n                    THIS.$stateParams.artifact = '';\n                    THIS.$stateParams.tab = 'StashInfo';\n\n\n                    this.tabs = [{name: \"StashInfo\"}];\n                    this.actions = stashData.length ? [\n                        {title: \"Copy Stash to Repository\", name: \"CopyStash\", icon: \"icon-copy\"},\n                        {title: \"Move Stash to Repository\", name: \"MoveStash\", icon: \"icon-move\"},\n                        {title: \"Discard Search Results\", name: \"DiscardStash\", icon: \"icon-delete-content\"}\n                    ] : [];\n                    if (!THIS.user.currentUser.getCanDeploy()) {\n                        this.actions.shift();\n                        this.actions.shift();\n                    }\n                    this.info = {\n                        artifactCount: Math.max(stashData.length - THIS.discardedCount, 0)\n                    };\n                    return THIS.$q.when(this);\n                },\n                getDownloadPath: () => {return this.$q.when(this);},\n                refreshWatchActions: () => {return this.$q.when(this);},\n                isRepo: () => {return false;}\n            }\n\n        }\n        return node;\n    }\n\n    _filterActions(treeNode) {\n        let origLoad = treeNode.load.bind(treeNode);\n        treeNode.load = () => {\n            return origLoad().then(()=> {\n\n                treeNode.actions = _.filter(treeNode.actions, (action)=> {\n                    return this.filteredActions.indexOf(action.name) === -1;\n                });\n\n                let deleteAction = _.findWhere(treeNode.actions, {name: \"Delete\"});\n                if (deleteAction) treeNode.actions.splice(treeNode.actions.indexOf(deleteAction), 1);\n\n\n                if (!_.findWhere(treeNode.actions, {name: \"ShowInTree\"})) {\n                    treeNode.actions.push({\n                        title: \"Show In Tree\",\n                        name: \"ShowInTree\",\n                        icon: \"icon-show-in-tree\"\n                    });\n                }\n\n                if (!_.findWhere(treeNode.actions, {name: \"DiscardFromStash\"})) {\n                    treeNode.actions.push({\n                        title: \"Discard from Stash\",\n                        name: \"DiscardFromStash\",\n                        icon: \"icon-delete-content\"\n                    });\n                }\n\n                if (deleteAction) treeNode.actions.push(deleteAction);\n\n            });\n        };\n\n        return treeNode;\n    }\n\n    _compactTree(stashData) {\n\n        let compactedData = [].concat(stashData);\n\n        let getChildren = (parent) => {\n            return _.filter(compactedData, {parent: parent.id});\n        }\n\n        let nodeById = (id) => {\n            return _.find(compactedData, {id});\n        }\n\n        let remove = (node) => {\n            _.remove(compactedData, n => n === node);\n        }\n\n        let recursiveCompact;\n        recursiveCompact = (node) => {\n            if (node.type !== 'folder') {\n                node.data = nodeById(node.id).data;\n                return;\n            }\n\n            let children = getChildren(node);\n            if (children.length === 1 && children[0].type === 'folder') {\n                node.text += '/' + children[0].text;\n                node.data = nodeById(children[0].id).data;\n                node.id = children[0].id;\n                remove(children[0]);\n                recursiveCompact(node);\n            }\n            else if (children.length > 1) {\n                children.forEach((child) => {\n                    recursiveCompact(child)\n                });\n            }\n        };\n\n        getChildren(nodeById(this.rootID)).forEach(node => recursiveCompact(node));\n\n        return compactedData;\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_SEARCH_CHANGE, text => this._searchTree(text)\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_SEARCH_CANCEL, text => this._clear_search()\n        )\n        ;\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_SEARCH_KEYDOWN, e => {\n            this.treeApi.handleKeyEvent(e);\n            this._searchTreeKeyDown(e.keyCode)\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_DELETE, (node) => {\n            node.alreadyDeleted = true;\n            this.artifactActions.perform({name: 'DiscardFromStash'}, node);\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_MOVE_STASH, (options) => {\n            this.exitStashState(options);\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_COPY_STASH, (options) => {\n            this.exitStashState(options);\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_DISCARD_STASH, () => {\n            delete this.stashData;\n            this.fetchStashData().then(() => {\n                this.treeApi.refreshTree().then(() => {\n                    let selected = this.treeApi.getSelectedNode();\n                    selected.data.load().then(() => {\n                        this.JFrogEventBus.dispatch(this.EVENTS.TREE_NODE_SELECT, selected)\n                    });\n                })\n            })\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_DISCARD_FROM_STASH, (node) => {\n            this._discardFromStash(node);\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_REFRESH_STASH, () => {\n            delete this.stashData;\n            this.fetchStashData().then(() => {\n                this.treeApi.refreshTree().then(() => {\n                    let root = _.find(this.stashData, {id: this.rootID});\n                    this.treeApi.openNode(root);\n                })\n            })\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.ACTION_EXIT_STASH, (node) => {\n            if (node) this.treeApi.selectNode(this.nodeByPathGetter(node.id));\n            this.$timeout(()=>this.exitStashState());\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_NODE_OPEN, path => {\n            this._openTreeNode(path)\n        });\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TREE_COMPACT, (compact) => this._toggleCompactFolders(compact)\n        )\n        ;\n\n        // URL changed (like back button / forward button / someone input a URL)\n        this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TABS_URL_CHANGED, (stateParams) => {\n            let path = stateParams.artifact ? stateParams.artifact.substring(stateParams.artifact.indexOf('/')+1) : this.rootID;\n            if (stateParams.tab === 'StashInfo' && this.$state.params.tab !== 'StashInfo') path = this.rootID;\n            this.whenTreeDataLoaded.promise.then(() => {\n\n                let selectedNode = this.treeApi.getSelectedNode();\n                if (selectedNode && selectedNode.fullpath === stateParams.artifact) return;\n\n                let pathNode = this.nodeByPathGetter(path);\n                if (pathNode) this.treeApi.openDeepNode(pathNode);\n            })\n        });\n    }\n\n    _countArtifacts(node) {\n        let defer = this.$q.defer();\n        if (node.type !== 'folder') {\n            defer.resolve(1);\n        }\n        else {\n            let artifacts = 0;\n            this.childrenGetter(node).then(children => {\n                let pendings = children.length;\n                children.forEach(child => {\n                    this._countArtifacts(child).then(childCount => {\n                        artifacts += childCount;\n                        pendings--;\n                        if (!pendings) {\n                            defer.resolve(artifacts);\n                        }\n                    })\n                })\n            })\n        }\n        return defer.promise;\n    }\n\n    _discardFromStash(node) {\n        this._countArtifacts(node).then(artifactsDiscarded => {\n            this.discardedCount += artifactsDiscarded;\n            let selected = this.treeApi.getSelectedNode();\n            selected.data.load().then(() => {\n                this.JFrogEventBus.dispatch(this.EVENTS.TREE_NODE_SELECT, selected)\n            });\n        })\n\n\n        let deletePoint = node;\n        let parent = this.parentGetter(node);\n        while (parent.$childrenCache.length === 1 && parent.id !== this.rootID) {\n            deletePoint = parent;\n            parent = this.parentGetter(parent);\n        }\n\n        this.treeApi.selectNode(parent);\n        this.treeApi.deleteNode(deletePoint);\n\n    }\n\n\n    exitStashState(options) {\n        this.$scope.$destroy();\n        let artifact = options && options.target ? options.target.targetRepoKey || '/' : this.$stateParams.artifact || '';\n        this.$state.go('artifacts.browsers.path', {tab: 'General', artifact: artifact, browser: 'tree'});\n        this.$timeout(()=> {\n            this.JFrogEventBus.dispatch(this.EVENTS.TREE_REFRESH);\n            if (options) {\n                this.JFrogEventBus.dispatch(this.EVENTS.ACTION_COPY, {node: options.node, target: options.target});\n            }\n        })\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_stash_browser/jf_stash_browser.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIPS from '../../../constants/artifact_tooltip.constant';\n\n'use strict';\n/**\n * launch a modal that prompts the user to select a target repo & path to do move / copy\n *\n * @param action:String - either 'copy' or 'move'\n * @returns promise - resolved with Object({targetRepoKey: String, targetPath: String}) if the user confirmed, rejected otherwise\n */\nexport function selectTargetPathFactory(ArtifactActionsDao, $q, $rootScope, JFrogModal, RepoDataDao) {\n    return function selectTargetPath(action, node, useNodePath, customDryRun, defaultValues) {\n\n        if (useNodePath === undefined) useNodePath = true;\n\n        let deferred = $q.defer();\n        let modalInstance;\n\n        // init modal scope\n        let modalScope = $rootScope.$new();\n        modalScope.action = action;\n        modalScope.node = node;\n        modalScope.target = {\n            repoList: [],\n            repoKey: defaultValues ? defaultValues.targetRepoKey : '',\n            path: useNodePath ? angular.copy(node.data.path) : (defaultValues ? defaultValues.targetPath : '/'),\n            isCustomPath: false\n        };\n        modalScope.tooltips = TOOLTIPS.selectTargetPathModal;\n\n        // get local repo list that match the original's repo pkg type\n        let isMavinish = (pkgType) => {\n            return _.contains(['maven','ivy','gradle','sbt'],pkgType.toLowerCase());\n        };\n        RepoDataDao.get({user: true}).$promise.then((result)=> {\n            if (node.data.getRoot && node.data.getRoot().repoPkgType && action !== \"restore\") {\n                result.repoTypesList = _.filter(result.repoTypesList,(repo)=>{\n                    return repo.repoType === node.data.getRoot().repoPkgType || repo.repoType === 'Generic' || (isMavinish(repo.repoType) && isMavinish(node.data.getRoot().repoPkgType));\n                });\n            }\n            else {\n\n            }\n            modalScope.target.repoList = result.repoTypesList.map(repo => {return {value: repo.repoKey, text: repo.repoKey}});\n        });\n\n        if (action === \"restore\") modalScope.noDryRun = true;\n\n        // scope functions for modal\n        modalScope.cancel = () => {\n            modalInstance.close();\n            deferred.reject();\n        };\n\n        modalScope.changeTargetRepository = () => {\n            if (modalScope.target.repoKey === 'artifactory-build-info') {\n                modalScope.target.isCustomPath = false;\n                modalScope.target.path = '/';\n            }\n        };\n\n        modalScope.confirm = () => {\n            deferred.resolve({\n                target: {\n                    targetRepoKey: modalScope.target.repoKey,\n                    targetPath: modalScope.getTargetPath()\n                },\n                onSuccess: ()=>{\n                    modalInstance.close();\n                    deferred = $q.defer();\n                    deferred.resolve();\n                    return deferred.promise;\n                },\n                onFail: (msg)=>{\n                    modalScope.resultError = true;\n                    modalScope.dryRunResults = msg;\n                    deferred = $q.defer();\n                    return deferred.promise;\n                }\n            });\n        };\n        modalScope.getTargetPath = () => {\n            return modalScope.target.isCustomPath && modalScope.target.path || modalScope.target.path\n        };\n        modalScope.dryRun = customDryRun || (() => {\n            var data = {\n                repoKey: node.data.repoKey,\n                path: node.data.path,\n                targetRepoKey: modalScope.target.repoKey,\n                targetPath: modalScope.getTargetPath(),\n                dryRun: true\n            };\n            var params = {action: action};\n            ArtifactActionsDao.dryRun(params, data).$promise\n                    .then((response) => {\n                        modalScope.resultError = false;\n                        modalScope.dryRunResults = [response.info];\n                    }).catch((response) => {\n                        modalScope.resultError = true;\n                        modalScope.dryRunResults = response.data.errors;\n                    });\n        });\n\n        if (customDryRun) customDryRun.scope = modalScope;\n\n        // Launch modal\n        modalInstance = JFrogModal.launchModal('select_target_path', modalScope, 'sm');\n        return deferred.promise;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/services/select_target_path.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function commonGridColumns() {\n    let nextId = 0;\n    return {\n        repoPathColumn: function(specialClass) {\n            return '<div ng-if=\"row.entity.repoKey\" class=\"ui-grid-cell-contents '+specialClass+'\">{{row.entity.repoKey}}/{{row.entity.path}}</div>' +\n                    '<div ng-if=\"!row.entity.repoKey\" class=\"ui-grid-cell-contents '+specialClass+'\">{{row.entity.path}}</div>';\n        },\n\n        downloadableColumn: function(specialClass) {\n            return '<div ng-if=\"row.entity.downloadLink\" class=\"jf-link ui-grid-cell-contents '+specialClass+'\">{{row.entity.name}}</div>' +\n                    '<div ng-if=\"!row.entity.downloadLink\" class=\"ui-grid-cell-contents '+specialClass+'\">{{row.entity.name}}</div>';\n        },\n\n        booleanColumn: function(model) {\n            return '<div class=\"grid-checkbox\"><input ng-model=\"' +\n                    model + '\" type=\"checkbox\" disabled/><span class=\"icon icon-v\"></span></div>';\n        },\n        checkboxColumn: function(model, click, disabled) {\n            return '<div ng-if=\"!row.entity._emptyRow\" class=\"grid-cell-checkbox\"><jf-checkbox><input ng-model=\"' + model + '\"' +\n                    (click && click.length ? ' ng-change=\"' + click + '\"' : '') +\n                    (disabled && disabled.length ? ' ng-disabled=\"' + disabled + '\"' : '') +\n                    ' type=\"checkbox\"/></jf-checkbox></div>';\n        },\n        listableColumn: function(listModel,rowNameModel,displayModel,alwaysShow,testIdPrefix=null,showAsyncData, externalCountModel) {\n\n            testIdPrefix = testIdPrefix ? testIdPrefix + '-' : '';\n\n            displayModel = displayModel ? `{{${listModel}.length}} | {{${displayModel}}}` : `{{${externalCountModel} ? ${externalCountModel} : ${listModel}.length}} | {{${listModel}.join(\\', \\')}}{{${externalCountModel} && ${externalCountModel} > ${listModel}.length ? ',...' : ''}}`;\n\n            let id = `${testIdPrefix}{{row.uid}}_${nextId}`;\n\n            let template =  `<div ng-if=\"${listModel}.length\" \n                                   ng-class=\"{'always-show': ${showAsyncData} || ${alwaysShow} }\" \n                                   class=\"ui-grid-cell-contents no-tooltip\" id=\"${id}\">\n                                <span class=\"gridcell-content-text\">${displayModel}</span>\n                                 <a class=\"jf-link gridcell-showall\" ng-if=\"!(${showAsyncData}) && (grid.options.isOverflowing('${testIdPrefix}'+row.uid+'_'+${nextId}) || ${alwaysShow})\" href ng-click=\"grid.options.showAll(${listModel},${rowNameModel},col)\"> (See All)</a>\n                                 <a class=\"jf-link gridcell-showall\" ng-if=\"${showAsyncData}\" href ng-click=\"grid.options.asyncShowAll(${rowNameModel},col)\"> (See All)</a>\n                             </div>\n                             <div ng-if=\"!${listModel}.length\" class=\"ui-grid-cell-contents no-tooltip\" id=\"${id}\">-</div>`;\n\n            nextId++;\n            return template;\n        },\n        iconColumn: function(cellText, cellIcon, iconClass) {\n            return '<div class=\"ui-grid-cell-contents\" id=\"type\"><i class=\"icon icon-{{' + cellIcon + '}}' + (iconClass ? ' ' + iconClass : '') + '\"></i>{{' + cellText + '}}</div>';\n        },\n        ajaxColumn: function () {\n            return '<div class=\"ui-grid-cell-contents status-grid\"><div class=\"icon-hourglass\" ng-if=\"!row.entity.status\"></div>{{row.entity.status}}</div>';\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/services/common_grid_columns.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n'use strict';\n/**\n * launch a modal that prompts the user to select a target repo & path to do move / copy\n *\n * @param action:String - either 'copy' or 'move'\n * @returns promise - resolved with Object({targetRepoKey: String, targetPath: String}) if the user confirmed, rejected otherwise\n */\nexport function selectDeleteVersionsFactory($q, ArtifactActionsDao, $rootScope, JFrogModal, JFrogGridFactory) {\n    return function selectDeleteVersions(node) {\n        let modalInstance;\n        let modalScope = $rootScope.$new();\n        modalScope.noData = false;\n\n        // Grid\n        modalScope.versionsGridOptions = JFrogGridFactory\n                .getGridInstance(modalScope)\n                .setColumns(\n                        [\n                            {\n                                name: 'Group ID',\n                                displayName: 'Group ID',\n                                field: 'groupId'\n                            },\n                            {\n                                name: 'Version',\n                                displayName: 'Version',\n                                field: 'version'\n                            },\n                            {\n                                name: 'Directories Count',\n                                displayName: 'Directories Count',\n                                field: 'directoriesCount'\n                            }\n                        ])\n                .setRowTemplate('default')\n                .setMultiSelect();\n\n        // Scope functions\n        modalScope.selectedVersions = () => {\n            return (modalScope.versions && modalScope.versionsGridOptions.api) && modalScope.versionsGridOptions.api.selection.getSelectedRows() || [];\n        };\n\n        modalScope.close = (version) => {\n            modalInstance.close(version);\n        };\n\n        let defer = $q.defer();\n\n        ArtifactActionsDao.getDeleteVersions({repoKey: node.data.repoKey, path: node.data.path})\n                .$promise.then((versions) => {\n                    modalScope.versions = versions.data.versions;\n                    modalScope.versionsGridOptions.setGridData(versions.data.versions);\n                    if (versions.data.versions.length == 0) {\n                        modalScope.noData = true;\n                    }\n                })\n                .finally(()=>{\n                    // Launch modal\n                    let modalSize = (modalScope.noData ? 'sm' : 'lg');\n                    modalInstance = JFrogModal.launchModal('select_delete_versions', modalScope, modalSize);\n                    modalInstance.result.then(versions=>defer.resolve(versions));\n                });\n\n        return defer.promise;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/services/select_delete_versions.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport DICTIONARY from \"./../constants/artifact_general.constant\";\n\nclass jfArtifactInfoController {\n    constructor($element, $stateParams, $state, $scope, JFrogEventBus, $timeout, User, ArtifactoryFeatures) {\n        this.$element = $element;\n        this.stateParams = $stateParams;\n        this.state = $state;\n        this.features = ArtifactoryFeatures;\n        this.$timeout = $timeout;\n        this.user = User;\n        this.DICTIONARY = DICTIONARY.tabs;\n        this.isDropdownOpen = false;\n        this.JFrogEventBus = JFrogEventBus;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n        JFrogEventBus.registerOnScope($scope, this.EVENTS.TREE_NODE_SELECT, node => this.selectNode(node)\n    )\n        ;\n        $scope.$on('ui-layout.resize', () => this._refreshTabs());\n\n    }\n\n    selectNode(node) {\n        if (node && node.data) {\n            // wait for the element to render and calculate how many tabs should display\n            if (!angular.equals(this.infoTabs, node.data.tabs)) {\n                this._refreshTabs();\n            }\n            this.infoTabs = node.data.tabs;\n            this._transformInfoTabs();\n            this.currentNode = node;\n            // if current tab exists in the new node - dispatch an event:\n            if (_.findWhere(this.infoTabs, {name: this.stateParams.tab}) && this.stateParams.tab !== 'StashInfo') {\n                this.JFrogEventBus.dispatch(this.EVENTS.TAB_NODE_CHANGED, node);\n            }\n        }\n        else {\n            this.currentNode = null;\n        }\n    }\n\n    _refreshTabs() {\n        this.JFrogEventBus.dispatch(this.EVENTS.TABS_REFRESH);\n    }\n\n    _transformInfoTabs() {\n        let features = {\n            'Watch': 'watches',\n            'Properties': 'properties',\n            'Builds': 'builds'\n        };\n        if (this.infoTabs) this.infoTabs.forEach((tab) => {\n            tab.feature = features[tab.name];\n        });\n    }\n}\nexport function jfArtifactInfo() {\n    return {\n        restrict: 'E',\n        controller: jfArtifactInfoController,\n        controllerAs: 'jfArtifactInfo',\n        templateUrl: 'states/artifacts/jf_artifact_info/jf_artifact_info.html',\n        bindToController: true\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/jf_artifact_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    'name': 'Name',\n    'description': 'Description',\n    'artifactsCount': 'Artifact Count / Size',\n    'repositoryPath': 'Repository Path',\n    'originPath': 'Source Path',\n    'bintrayOrg': 'Bintray Organization',\n    'bintrayProduct': 'Bintray Product',\n    'bintrayUrl': 'Bintray Link',\n    'repositoryLayout': 'Repository Layout',\n    'repoType': 'Package Type',\n    'remoteRepoUrl': 'Remote Repository URL',\n    'created': 'Created',\n    'deployedBy': 'Deployed By',\n    'licenses': 'Licenses',\n    'filtered': 'Filtered',\n    'downloaded': 'Downloads',\n    'remoteDownloaded': 'Remote Downloads',\n    'moduleID': 'Module ID',\n    'size': 'Size',\n    'lastModified': 'Last Modified',\n    'lastDownloaded': 'Last Downloaded',\n    'lastRemoteDownloaded': 'Last Downloaded Remotely',\n    'compressed': 'Compressed',\n    'crc': 'CRC',\n    'modificationTime': 'Modification Time',\n    'path': 'Path',\n    'watchingSince': 'Watching Since',\n    'lastDownloadedBy': 'Last Downloaded By',\n    'lastRemoteDownloadedBy': 'Last Downloaded Remotely By',\n    'lastReplicationStatus': 'Last Replication Status',\n    'signingKeyLink': 'Signing Key',\n    'externalUrl': 'External URL',\n    tabs: {\n        General: 'General',\n        Properties: 'Properties',\n        EffectivePermission: 'Effective Permissions',\n        Watch: 'Watchers',\n        Builds: 'Builds',\n        Xray: 'Xray',\n        'GeneralXml': 'XML View',\n        'ViewSource': 'View Source',\n        'NuPkgInfo': 'NuPkg Info',\n        'PomView': 'Pom View',\n        'IVYXml': 'Ivy View',\n        'RubyGems': 'RubyGems',\n        'NpmInfo': 'Npm Info',\n        'DebianInfo': 'Debian Info',\n        'OpkgInfo': 'Opkg Info',\n        'ChefInfo': 'Chef Info',\n        'ComposerInfo': 'Composer Info',\n        'CranInfo': 'CRAN Info',\n        'CondaInfo': 'Conda Info',\n        'PyPIInfo': 'PyPI Info',\n        'HelmInfo': 'Chart Info',\n        'GoInfo': 'Go Info',\n        'PuppetInfo': 'Puppet Info',\n        'BowerInfo': 'Bower Info',\n        'DockerInfo': 'Docker Info',\n        'DockerAncestryInfo': 'Docker Ancestry',\n        'DockerV2Info': 'Docker Info',\n        'Rpm': 'Rpm Info',\n        'Cocoapods': 'Cocoapods Info',\n        'ConanInfo': 'Conan Info',\n        'ConanPackageInfo': 'Conan Package Info',\n        'StashInfo': 'Stash Info'\n    },\n    nuget: {\n        authors: 'Authors',\n        owners: 'Owners',\n        pkgTitle: 'Title',\n        tags: 'Tags',\n        version: 'Version',\n        requireLicenseAcceptance: 'Require License Acceptance',\n        id: 'ID',\n        title: 'Title',\n        languages: 'Languages',\n        releaseNotes: 'Release Notes',\n        summary: 'Summary',\n        projectUrl: 'Project URL',\n        copyright: 'Copyright',\n        licenseUrl: 'License URL'\n\n    },\n    composer: {\n        name: 'Name',\n        version: 'Version',\n        authors: 'Authors',\n        licenses: 'Licenses',\n        type: 'Type',\n        keywords: 'Keywords'\n\n    },\n    chef: {\n        name: 'Name',\n        version: 'Version',\n        maintainer: 'Maintainer',\n        sourceUrl: 'Source URL',\n        license: 'License'\n    },\n    conan: {\n        name: 'Name',\n        version: 'Version',\n        user: 'User',\n        channel: 'Channel',\n        reference: 'Reference',\n        author: 'Author',\n        license: 'License',\n        url: 'URL',\n        //Conan Package Info\n        os: 'OS',\n        arch: 'Architecture',\n        buildType: 'Build Type',\n        compiler: 'Compiler',\n        compilerVersion: 'Compiler Version',\n        compilerRuntime: 'Compiler Runtime',\n        shared: 'Shared'\n    },\n    conda: {\n        name: 'Name',\n        version: 'Version',\n        license: 'License',\n        arch: 'Architecture',\n        platform: 'Platform',\n        build: 'Build',\n        buildNumber: 'Build Number',\n        timestamp: ''\n    },\n    docker: {\n        //Info:\n        imageId: 'Image Id',\n        parent: 'Parent Id',\n        created: 'Created',\n        container: 'Container',\n        dockerVersion: 'Docker Version',\n        author: 'Author',\n        architecture: 'Architecture',\n        os: 'OS',\n\n        //Config:\n        size: 'Size',\n        hostname: 'Hostname',\n        domainName: 'DomainName',\n        user: 'User',\n        memory: 'Memory',\n        memorySwap: 'MemorySwap',\n        cpuShares: 'CpuShares',\n        cpuSet: 'CpuSet',\n        attachStdin: 'AttachStdin',\n        attachStdout: 'AttachStdout',\n        attachStderr: 'AttachStderr',\n        portSpecs: 'portSpecs',\n        exposedPorts: 'exposedPorts',\n        tty: 'Tty',\n        openStdin: 'OpenStdin',\n        stdinOnce: 'StdinOnce',\n        env: 'Env',\n        cmd: 'Cmd',\n        image: 'Image',\n        volumes: 'Volumes',\n        workingDir: 'WorkingDir',\n        entryPoint: 'EntryPoint',\n        networkDisabled: 'NetworkDisabled',\n        onBuild: 'OnBuild'\n\n    },\n    dockerAncestry: {\n        size: 'Virtual Size'\n    },\n    dockerV2: {\n        title: 'Title',\n        digest: 'Digest',\n        ports: 'Ports',\n        totalSize: 'Total Size',\n        volumes: 'Volumes'\n    },\n    cran: {\n        name: 'Name',\n        version: 'Version',\n        title: 'Title',\n        author: 'Author',\n        maintainer: 'Maintainer',\n        priority: 'Priority',\n        license: 'License',\n        needsCompilation: 'Need Compilation',\n        path: 'Path',\n        osType: 'OS type',\n        licenseRestrictsUse: 'License Restricts Use',\n        licenseIsFoss: 'License is Foss',\n        archs: 'Architectures'\n    },\n    pyPi: {\n        name: 'Name',\n        author: 'Author',\n        authorEmail : 'Author Email',\n        homepage: 'Homepage',\n        downloadUrl: 'Download URL',\n        platform: 'Platform',\n        version: 'Version',\n        license: 'License',\n        keywords: 'Keywords',\n        summary: 'Summary',\n        requiresPython: 'Requires Python'\n    },\n    helm: {\n        name: 'Name',\n        version: 'Version',\n        appVersion: 'Application Version',\n        keywords: 'Keywords',\n        maintainers: 'Maintainers',\n        sources: 'Sources',\n        deprecated: 'Deprecated'\n    },\n    go: {\n        name: 'Name',\n        version: 'Version'\n    },\n    puppet: {\n        name: 'Name',\n        version: 'Version',\n        license: 'License',\n        keywords: 'Keywords',\n        description: 'Description'\n    },\n    bower: {\n        name: 'Name',\n        description: 'Description',\n        version: 'Version',\n        license: 'License',\n        keywords: 'Keywords',\n        repository: 'Repository'\n    },\n    rubyGems: {\n        authors: 'Authors',\n        owners: 'Owners',\n        description: 'Description',\n        homepage: 'Homepage',\n        name: 'Name',\n        platform: 'Platform',\n        summary: 'Summary',\n        repositoryPath: 'Repository Path',\n        version: 'Version'\n\n    },\n    npm: {\n        name: 'Name',\n        version: 'Version',\n        license: 'License',\n        description: 'Description',\n        keywords: 'Keywords',\n        repository: 'Repository'\n    },\n    debian: {\n        packageName: 'Name',\n        version: 'Version',\n        architecture: 'Architecture',\n        description: 'Description',\n        section: 'Section',\n        priority: 'Priority',\n        maintainer: 'Maintainer',\n        website: 'Website',\n        size: 'Size',\n        license: 'License'\n    },\n    opkg: {\n        packageName: 'Name',\n        version: 'Version',\n        architecture: 'Architecture',\n        description: 'Description',\n        section: 'Section',\n        priority: 'Priority',\n        maintainer: 'Maintainer',\n        website: 'Website',\n        size: 'Size',\n        license: 'License'\n\n    },\n    rpm: {\n        buildDate: 'Build Date',\n        epoch: 'Epoch',\n        name: \"Name\",\n        release: \"Release\",\n        size: 'Size',\n        summary: \"Summary\",\n        version: \"Version\",\n        buildHost: \"Build Host\",\n        packager: \"Packager\",\n        sourceRpm: \"Source Rpm\",\n        url: \"URL\",\n        vendor: \"Vendor\"\n\n    },\n    cocoapods: {\n        name: 'Name',\n        description: 'Description',\n        version: 'Version',\n        license: 'License',\n        keywords: 'Keywords'\n    },\n    trash: {\n        deletedTime: 'Deleted Time',\n        deletedBy: 'Deleted By',\n        originalRepository: \"Original Repository\",\n        originalRepositoryType: \"Original Repository Type\",\n        originalPath: \"Original Path\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/constants/artifact_general.constant.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {jfBuilds} from \"./jf_builds\";\nimport {jfXray} from \"./jf_xray\";\nimport {jfEffectivePermissions} from \"./jf_effective_permissions\";\nimport {jfWatchers} from \"./jf_watchers\";\nimport {jfGeneral} from \"./jf_general\";\nimport {jfProperties} from \"./jf_properties\";\nimport {jfViewSource} from \"./jf_view_source\";\nimport {jfPomView} from \"./jf_pom_view\";\nimport {jfXmlView} from \"./jf_xml_view\";\nimport {jfIvyView} from \"./jf_ivy_view\";\nimport {jfNuget} from \"./jf_nuget\";\nimport {jfComposer} from \"./jf_composer\";\nimport {jfPyPi} from \"./jf_pypi\";\nimport {jfHelm} from \"./jf_helm\";\nimport {jfGo} from \"./jf_go\";\nimport {jfCran} from \"./jf_cran\";\nimport {jfConda} from \"./jf_conda\";\nimport {jfPuppet} from \"./jf_puppet\";\nimport {jfBower} from \"./jf_bower\";\nimport {jfDocker} from \"./jf_docker\";\nimport {jfDockerAncestry} from \"./jf_docker_ancestry\";\nimport {jfDockerV2} from \"./jf_docker_v2\";\nimport {jfRubyGems} from \"./jf_ruby_gems\";\nimport {jfNpmInfo} from \"./jf_npm_info\";\nimport {jfRpm} from \"./jf_rpm_info\";\nimport {jfCocoapods} from \"./jf_cocoapods\";\nimport {jfConan} from './jf_conan';\nimport {jfConanPackage} from './jf_conan_package';\nimport {jfStashInfo} from \"./jf_stash_info\";\nimport {jfDebianInfo} from \"./jf_debian_info\";\nimport {jfOpkgInfo} from \"./jf_opkg_info\";\nimport {jfChefInfo} from \"./jf_chef_info\";\n\nexport default angular.module('infoTabs', [])\n        .directive({\n            'jfBuilds': jfBuilds,\n            'jfXray': jfXray,\n            'jfEffectivePermissions': jfEffectivePermissions,\n            'jfWatchers': jfWatchers,\n            'jfGeneral': jfGeneral,\n            'jfProperties': jfProperties,\n            'jfViewSource': jfViewSource,\n            'jfPomView': jfPomView,\n            'jfXmlView': jfXmlView,\n            'jfIvyView': jfIvyView,\n            'jfNuget': jfNuget,\n            'jfComposer': jfComposer,\n            'jfPyPi': jfPyPi,\n            'jfHelm': jfHelm,\n            'jfGo': jfGo,\n            'jfCran': jfCran,\n            'jfConda': jfConda,\n            'jfPuppet': jfPuppet,\n            'jfBower': jfBower,\n            'jfConan': jfConan,\n            'jfConanPackage': jfConanPackage,\n            'jfDocker': jfDocker,\n            'jfDockerAncestry': jfDockerAncestry,\n            'jfDockerV2': jfDockerV2,\n            'jfRubyGems': jfRubyGems,\n            'jfNpmInfo': jfNpmInfo,\n            'jfRpm': jfRpm,\n            'jfCocoapods': jfCocoapods,\n            'jfStashInfo': jfStashInfo,\n            'jfDebianInfo': jfDebianInfo,\n            'jfChefInfo': jfChefInfo,\n            'jfOpkgInfo': jfOpkgInfo\n        });\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/info_tabs.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfBuildsController {\n    constructor($state, JFrogGridFactory, ArtifactBuildsDao, $scope, JFrogEventBus, JFrogModal, uiGridConstants) {\n        this.uiGridConstants = uiGridConstants;\n        this.producedByGridOptions = {};\n        this.usedByGridOptions = {};\n        this.$state = $state;\n        this.buildsDao = ArtifactBuildsDao.getInstance();\n        this.$scope = $scope;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.modal = JFrogModal;\n        this.mode = 'ProducedBy';\n        this.builds = {};\n\n    }\n\n    $onInit() {\n        this._generateViewBySwitch();\n        this._registerEvents();\n        this._createGrids();\n        this._getBuildData();\n    }\n\n    downloadJson(build) {\n        this.buildsDao.getJson({\n            buildNumber: build.number,\n            buildName: build.name,\n            startTime: build.started\n        })\n            .$promise.then((result) => {\n                this.modal.launchCodeModal('Build #' + build.number, result.json,\n                    {name: \"javascript\", json: true});\n            });\n    }\n\n    _getBuildData() {\n        // if the node does not have a path the build cannot be loaded\n        // this may occur in navigation to a node that does not have a path (repo node)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.buildsDao.query({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey\n        }).$promise.then((builds) => {\n                    this.builds = builds;\n                    this.producedByGridOptions.setGridData(builds.producedBy);\n                    this.usedByGridOptions.setGridData(builds.usedBy);\n                    this._generateViewBySwitch();\n                });\n    }\n\n    _generateViewBySwitch() {\n        this.viewBySwitch = [\n            {\n                text: 'Produced By' + (this.producedByGridOptions.data && this.producedByGridOptions.data.length ? ' (' + this.builds.producedBy.length + ')' : ''),\n                value: 'ProducedBy'\n            },\n            {\n                text: 'Used By' + (this.usedByGridOptions.data && this.usedByGridOptions.data.length ? ' (' + this.builds.usedBy.length + ')' : ''),\n                value: 'UsedBy'\n            }\n        ];\n\n        if (this.switchControl) {\n            this.switchControl.options = this.viewBySwitch;\n            this.switchControl.updateOptionObjects();\n        }\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode !== node) {\n                this.currentNode = node;\n                self._getBuildData();\n            }\n        });\n    }\n\n    _createGrids() {\n        this.producedByGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getProducedByColumns())\n            .setRowTemplate('default')\n            .setButtons(this._getActions());\n        this.usedByGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getUsedByColumns())\n            .setRowTemplate('default')\n            .setButtons(this._getActions());\n    }\n\n    _getProducedByColumns() {\n        let columns = this._getCommonColumns();\n        columns.splice(4, 0, {\n                displayName: 'Started At',\n                name: 'Started At',\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.startedString }}</a>',\n                field: \"started\",\n                type: 'number'\n            });\n        return columns;\n    }\n\n    _getCommonColumns() {\n        return [{\n            displayName: 'Project Name',\n            sort: {\n                direction: this.uiGridConstants.ASC\n            },\n            name: 'Project Name',\n            allowGrouping: true,\n            grouped: true,\n            field: \"name\",\n            cellTemplate: '<div class=\"ui-grid-cell-contents\" id=\"project-name\" >{{row.entity.name}}</div>',\n        }, {\n            displayName: 'Build ID',\n            name: 'Build ID',\n            grouped: true,\n            allowGrouping: true,\n            field: \"number\",\n            cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"builds.build_page({buildName:row.entity.name,buildNumber:row.entity.number,tab:\\'general\\',startTime:row.entity.started})\" id=\"build-id\">{{row.entity.number}}</a></div>'\n        }, {\n            name: 'Module ID',\n            displayName: 'Module ID',\n            allowGrouping: true,\n            grouped: true,\n            field: \"moduleID\",\n            cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ui-sref=\"builds.build_page({buildName:row.entity.name,buildNumber:row.entity.number,tab:\\'published\\',startTime:row.entity.started,moduleID:row.entity.moduleID})\" id=\"module-id\" >{{row.entity.moduleID}}</a></div>'\n        }, {\n            displayName: 'CI Server',\n            name: 'CI Server',\n            field: \"ciUrl\",\n            cellTemplate: '<div class=\"ui-grid-cell-contents\"><a class=\"jf-link\" ng-href=\"{{row.entity.ciUrl}}\" target=\"_blank\" id=\"ci-server\">{{row.entity.ciUrl}}</a></div>'\n        }];\n    }\n\n    _getUsedByColumns() {\n        let columns = this._getCommonColumns();\n        columns.splice(3, 0, {\n            displayName: 'Scope',\n            name: 'Scope',\n            allowGrouping: true,\n            grouped: true,\n            field: \"scope\"\n        });\n        return columns;\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-view',\n                tooltip: 'View Build JSON',\n                callback: row => this.downloadJson(row)\n            }\n\n        ];\n    }\n}\n\nexport function jfBuilds() {\n    return {\n        restrict: 'EA',\n        controller: jfBuildsController,\n        controllerAs: 'jfBuilds',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_builds.html'\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_builds.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\nimport MESSAGES from '../../../../constants/artifacts_messages.constants';\n\nclass jfXrayController {\n    constructor($scope, JFrogEventBus, ArtifactXrayDao, ArtifactActionsDao, JFrogModal) {\n\n        this.$scope = $scope;\n        this.JFrogEventBus = JFrogEventBus;\n        this.ArtifactXrayDao = ArtifactXrayDao;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.MESSAGES = MESSAGES;\n        this.modal = JFrogModal;\n    }\n\n    $onInit() {\n        this._registerEvents();\n        this._getXrayData();\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode !== node) {\n                this.currentNode = node;\n                self._getXrayData();\n            }\n        });\n    }\n\n    _getXrayData() {\n        this.ArtifactXrayDao.getData({repoKey: this.currentNode.data.repoKey, path: this.currentNode.data.path}).$promise.then((response) => {\n            this.artifactXrayData = response.data;\n        });\n    }\n\n    _doAllowDownload() {\n        this.modal.confirm(\"Download will be allowed until Xray runs another scan that generates an alert for this artifact.\", 'Allow download')\n                .then(() => {\n                    this.artifactActionsDao.perform({action: 'allowDownload', params: 'true', repoKey: this.currentNode.data.repoKey, path: this.currentNode.data.path}).$promise.then((data) => {\n                        this._getXrayData();\n                    })\n                });\n    }\n\n    xrayAlertMessage() {\n        if (this.artifactXrayData.allowBlockedArtifacts) {\n            return this.MESSAGES.xray_tab.blocked_artifact_ignored;\n        }\n        return this.MESSAGES.xray_tab.blocked_artifact;\n    }\n\n}\n\nexport function jfXray() {\n    return {\n        restrict: 'EA',\n        controller: jfXrayController,\n        controllerAs: 'jfXray',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_xray.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_xray.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfEffectivePermissionsController {\n    constructor(JFrogGridFactory, ArtifactPermissionsDao,PermissionsDao,$state, $scope, $timeout, JFrogEventBus,\n            uiGridConstants, commonGridColumns,User,$q) {\n        this.uiGridConstants = uiGridConstants;\n        this.commonGridColumns = commonGridColumns;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.User = User;\n        this.currentTab = 'Users';\n        this.userEffectivePermissionsGridOption = {};\n        this.groupEffectivePermissionsGridOption = {};\n        this.permissionTargetsGridOption = {};\n        this.permissionsDao = ArtifactPermissionsDao.getInstance();\n        this.entityPermissionsDao = PermissionsDao.getInstance();\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.currentUser = this.User.getCurrent();\n    }\n\n    $onInit() {\n        this._registerEvents();\n        this._createGrids();\n        this._getPermissionsData();\n    }\n\n    _getPermissionsData() {\n        return this.permissionsDao.query({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey,\n            pageNum: 1,\n            numOfRows: 25,\n            direction: \"asc\",\n            orderBy: \"principal\"\n        }).$promise.then((data) => {\n            this.userEffectivePermissionsGridOption.setGridData(data.userEffectivePermissions);\n            this.groupEffectivePermissionsGridOption.setGridData(data.groupEffectivePermissions);\n            this.permissionTargetsGridOption.setGridData(data.permissionTargets);\n        });\n    }\n\n    _createGrids() {\n        this.userEffectivePermissionsGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getUserGroupGridColumns('users'))\n                .setRowTemplate('default');\n        this.groupEffectivePermissionsGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getUserGroupGridColumns('groups'))\n                .setRowTemplate('default');\n        this.permissionTargetsGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this.getPermissionTargetGridColumns())\n                .setRowTemplate('default');\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.userEffectivePermissionsGridOption.resetPagination();\n            this.userEffectivePermissionsGridOption.getPage();\n            this.groupEffectivePermissionsGridOption.resetPagination();\n            this.groupEffectivePermissionsGridOption.getPage();\n            this.permissionTargetsGridOption.resetPagination();\n            this.permissionTargetsGridOption.getPage();\n            this.$timeout(() => {\n                this._getPermissionsData();\n            });\n        });\n    }\n\n    goToEditPrincipal(tableType,row){\n        // Make sure the session has not timed out yet\n        this.User.loadUser(true).then(()=>{\n            // If session is expired  => go to login state\n            if (!this.User.getCurrent().isAdmin()) {\n                this.$state.go('login');\n            }\n\n            // If admin - go to edit page of selected principal\n            let principal = {};\n            let state = 'admin.security.'+tableType+'.edit';\n            let principalName = (tableType === 'users' ? 'username' : 'groupname');\n            principal[principalName] = row.principal;\n            this.$state.go(state, principal)\n        });\n    }\n\n    isCurrentUserAdmin(){\n        return this.currentUser.isAdmin();\n    }\n\n    getUserGroupGridColumns(tableType) {\n        return [\n            {\n                name: 'Principal',\n                displayName: 'Principal',\n                field: \"principal\",\n                cellTemplate:\n                    `<div class=\"ui-grid-cell-contents\">\n                        <i jf-tooltip=\"Admin Privileges\"\n                           class=\"icon pull-left\"\n                           ng-class=\"row.entity.admin ? 'icon-admin-new' : 'icon-blank'\"></i>\n                        <a href \n                           ng-if=\"grid.appScope.jfEffectivePermissions.isCurrentUserAdmin()\"\n                           class=\"jf-link\"\n                           ng-click=\"grid.appScope.jfEffectivePermissions.goToEditPrincipal('${tableType}',row.entity)\">\n                            {{COL_FIELD CUSTOM_FILTERS}}\n                        </a>\n                        <span ng-if=\"!grid.appScope.jfEffectivePermissions.isCurrentUserAdmin()\">\n                            {{COL_FIELD CUSTOM_FILTERS}}\n                        </span>\n                    </div>`,\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '25%'\n            },\n            {\n                name: 'Permission Targets',\n                displayName: 'Permission Targets',\n                field: \"permissionTargets\",\n                cellTemplate: this.commonGridColumns.listableColumn(\n                        'row.entity.permissionTargets',\n                        'row.entity.principal',\n                        '',false,null,\n                        'row.entity.permissionTargetsCap',\n                        'row.entity.permissionTargetsCount'\n                ),\n                asyncDataCallback: (name) => {\n                    let queryParams = {\n                        path: this.currentNode.data.path,\n                        repoKey: this.currentNode.data.repoKey,\n                    };\n                    let pathParams = {\n                        name: name,\n                        entity_type: tableType\n                    };\n                    return this.entityPermissionsDao.getEntityPermissions(queryParams, pathParams).$promise;\n                },\n                width: '33%'\n            },\n            {\n                name: \"Delete/Overwrite\",\n                displayName: \"Delete/Overwrite\",\n                field: \"permission.delete\",\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                width: '14%'\n            },\n            {\n                name: \"Deploy/Cache\",\n                displayName: \"Deploy/Cache\",\n                field: \"permission.deploy\",\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                width: '12%'\n            },\n            {\n                name: \"Annotate\",\n                displayName: \"Annotate\",\n                field: \"permission.annotate\",\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                width: '9%'\n            },\n            {\n                name: \"Read\",\n                displayName: \"Read\",\n                field: \"permission.read\",\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                width: '7%'\n            }\n        ]\n    }\n\n    triggerTimoutBeforeSwitch(){\n        this.$timeout(()=>{\n            try {\n                window.dispatchEvent(new Event('resize'));\n            }\n            catch (e) {\n                let resizeEvent = document.createEvent('Event');\n                window.dispatchEvent(resizeEvent);\n            }\n        });\n    }\n\n    goToEditPermission(row) {\n        this.$state.go('admin.security.permissions.edit', {permission: row.permissionName})\n    }\n\n    getPermissionTargetGridColumns(){\n        return [\n            {\n                name: 'Permission Target Name',\n                displayName: 'Permission Target Name',\n                field: 'permissionName',\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                    <a href \n                                       class=\"jf-link\" \n                                       ng-if=\"grid.appScope.jfEffectivePermissions.isCurrentUserAdmin()\"\n                                       ng-click=\"grid.appScope.jfEffectivePermissions.goToEditPermission(row.entity)\">\n                                        {{COL_FIELD CUSTOM_FILTERS}}\n                                    </a>\n                                    <span ng-if=\"!grid.appScope.jfEffectivePermissions.isCurrentUserAdmin()\">\n                                        {{COL_FIELD CUSTOM_FILTERS}}\n                                    </span>\n                             </div>`,\n                width: '25%'\n            },\n            {\n                name: 'Repositories',\n                displayName: 'Repositories',\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.repoKeys','row.entity.permissionName'),\n                field: 'repoKeysView',\n                width: '25%'\n            },\n            {\n                name: 'Groups',\n                displayName: 'Groups',\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.groups','row.entity.permissionName'),\n                field: 'groupsList',\n                width: '25%'\n\n            },\n            {\n                name: 'Users',\n                displayName: 'Users',\n                cellTemplate: this.commonGridColumns.listableColumn('row.entity.users','row.entity.permissionName'),\n                field: 'usersList',\n                width: '25%'\n            }\n        ]\n    }\n\n}\nexport function jfEffectivePermissions() {\n    return {\n        restrict: 'EA',\n        controller: jfEffectivePermissionsController,\n        controllerAs: 'jfEffectivePermissions',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_effective_permissions.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_effective_permissions.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfWatchersController {\n\n    constructor($scope, $state, ArtifactWatchesDao, JFrogGridFactory, JFrogEventBus, $q,\n                ArtifactoryStorage) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.watchersGridOption = {};\n        this.artifactWatchesDao = ArtifactWatchesDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryStorage = ArtifactoryStorage;\n        this.$q = $q;\n    }\n\n    $onInit() {\n        this._createGrid();\n        this._getWatchesData();\n        this._registerEvents();\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getWatchesData();\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, [EVENTS.ACTION_WATCH, EVENTS.ACTION_UNWATCH], () => {\n            this._getWatchesData();\n        });\n    }\n\n    _deleteWatches(watches) {\n        let data = watches.map((watch) => {\n            let selectedWachers = {\n                name: watch.watcherName,\n                repoKey: watch.watchConfigureOn.split(':')[0],\n                path: watch.watchConfigureOn.split(':')[1]\n            }\n            return selectedWachers;\n        });\n        let json = {watches: data};\n\n        return this.artifactWatchesDao.delete(json).$promise\n                .then(() => {\n                this.JFrogEventBus.dispatch(EVENTS.ACTION_UNWATCH, this.currentNode);\n                    this._getWatchesData();\n                });\n    }\n\n    _createGrid() {\n        let batchActions = [{\n            callback: (watches) => this._deleteWatches(watches),\n            visibleWhen: () => this.currentNode && this.currentNode.data && this.currentNode.data.getRoot().repoType !== 'virtual',\n            name: \"Delete\",\n            icon: 'clear'\n        }];\n\n        this.watchersGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setRowTemplate('default')\n                .setMultiSelect()\n                .setBatchActions(batchActions)\n                .setButtons(this._getActions());\n\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: \"Watcher Name\",\n                displayName: \"Watcher Name\",\n                field: \"watcherName\",\n                width: '20%'\n            },\n            {\n                name: \"Watching Since\",\n                displayName: \"Watching Since\",\n                field: \"watchingSince\",\n                width: '30%'\n            },\n            {\n                name: \"Watch Configured On\",\n                displayName: \"Watch Configured On\",\n                field: 'watchConfigureOn',\n                width: '50%'\n            }\n\n        ]\n    }\n\n    showInTree(row) {\n        let browser = this.artifactoryStorage.getItem('BROWSER') || 'tree';\n        let repoKey = row.watchConfigureOn.split(':')[0];\n        let path = row.watchConfigureOn.split(':')[1];\n        let artifactPath = repoKey + \"/\" + (path);\n        let archivePath = '';\n        this.$state.go('artifacts.browsers.path', {\n            \"tab\": \"General\",\n            \"browser\": browser,\n            \"artifact\": artifactPath\n        });\n    }\n\n    _getActions() {\n        return [{\n            icon: 'icon icon-show-in-tree',\n            tooltip: 'Show In Tree',\n            callback: row => this.showInTree(row)\n        },\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: (watch) => this._deleteWatches([watch]),\n                visibleWhen: () => this.currentNode && this.currentNode.data && this.currentNode.data.getRoot().repoType !== 'virtual',\n            }];\n    }\n\n    _getWatchesData() {\n        let self = this;\n        this.artifactWatchesDao.query({\n            path: self.currentNode.data.path,\n            repoKey: self.currentNode.data.repoKey\n        }).$promise.then((watchers) => {\n                    this.watchers = watchers;\n                    this.watchersGridOption.setGridData(watchers);\n                });\n    }\n\n}\nexport function jfWatchers() {\n    return {\n        restrict: 'EA',\n        scope: {\n            currentNode: '='\n        },\n        controller: jfWatchersController,\n        controllerAs: 'jfWatchers',\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_watchers.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_watchers.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\nimport DICTIONARY from \"./../../constants/artifact_general.constant\";\nimport TOOLTIP from \"../../../../constants/artifact_tooltip.constant\";\n\nclass jfGeneralController {\n    constructor($state,$scope, ArtifactGeneralDao, JFrogNotifications, ArtifactLicensesDao, ChecksumsDao, ArtifactActionsDao, ArtifactoryFeatures,\n            FilteredResourceDao, JFrogEventBus, JFrogModal, DependencyDeclarationDao, $compile, User, FooterDao,\n            ArtifactoryStorage) {\n        this.generalData = {\n            dependencyDeclaration: []\n        };\n        this.$state = $state;\n        this.$scope = $scope;\n        this.artifactLicensesDao = ArtifactLicensesDao;\n        this.DICTIONARY = DICTIONARY;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.TOOLTIP = TOOLTIP.artifacts.browse;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.artifactGeneralDao = ArtifactGeneralDao;\n        this.filteredResourceDao = FilteredResourceDao;\n        this.dependencyDeclarationDao = DependencyDeclarationDao;\n        this.modal = JFrogModal;\n        this.footerDao = FooterDao;\n        this.currentDeclaration = 'Maven';\n        this.JFrogEventBus = JFrogEventBus;\n        this.features = ArtifactoryFeatures;\n        this.$compile = $compile;\n        this.userService = User;\n        this.SearchForArchiveLicense = \"Search Archive License File\";\n        this.ChecksumsDao = ChecksumsDao;\n        this.editorOptions = {\n            lineNumbers: true,\n            readOnly: 'nocursor',\n            lineWrapping: true,\n            height: 'auto',\n            mode: 'links',\n            mimeType: 'text/xml'\n        };\n        this.artifactoryStorage = ArtifactoryStorage;\n\n    }\n\n    $onInit() {\n        this._getGeneralData();\n        this._registerEvents();\n        this._initModalScope();\n        this.isInVirtual();\n    }\n\n    _registerEvents() {\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.showArtifactsCount = false;\n                this.calculatingArtifactsCount = false;\n                this.finishedArtifactCount = false;\n                this.currentNode = node;\n                this._getGeneralData();\n            }\n        });\n        this.JFrogEventBus.registerOnScope(this.$scope, [EVENTS.ACTION_WATCH, EVENTS.ACTION_UNWATCH], () => {\n            this._getGeneralData();\n        });\n    }\n\n    _initModalScope() {\n        this.generalScope = this.$scope.$new();\n        this.generalScope.closeModal = () => this.modalInstance.close();\n        this.generalScope.saveLicenses = (licenses)=>this.saveLicenses(licenses);\n        this.generalScope.attachLicenses = ()=>this.attachLicenses();\n    }\n\n    getGeneralTab() {\n        return _.findWhere(this.currentNode.data.tabs, {name: 'General'});\n    }\n\n    _getGeneralData() {\n        this.sha256Calculated = false;\n\n        let repoData = this.currentNode.data;\n        let generalTab = this.getGeneralTab();\n        if (generalTab && generalTab.info) { // If general data already exists on the node (for archive children)\n            this.generalData = generalTab;\n        }\n        else if (repoData.className === 'TreeNode') {\n            this.getGeneralTabPromise()\n                    .then((response) => {\n\n                        if (response.type == 'file' && repoData && repoData.fileType == 'archive') {\n                            response.fileType = 'archive';\n                        }\n                        if(response.type && response.type === 'virtualRemoteFile' &&\n                            repoData && repoData.getRoot().repoType === 'virtual') {\n                            response.info = this.sortedInsertionToOject(response.info,response.originPath,\n                                                                        'originPath', 'repositoryPath');\n                        }\n\n                        if (response.info.repoType === \"YUM\") {\n                            response.info.repoType = \"RPM\"\n                        } else if (response.info.repoType === \"Go\") {\n                            response.info.repoType = \"golang\"\n                        }\n\n                        this.showArtifactsCount = this.artifactsCountEnabled();\n                        if (response.info.externalUrl) {\n                            response.info = this._moveObjectElement(response.info, \"externalUrl\", \"repositoryPath\");\n                        }\n                        this.generalData = response;\n                        if (this.generalData.dependencyDeclaration) {\n                            this.selectDeclaration(this.currentDeclaration);\n                        }\n                        if (this.generalData.bintrayInfoEnabled) {\n                            this.loadPackageDescription();\n                        }\n\n                        this.trimVirtualAssociations();\n\n                        this.userService.canAnnotate(this.currentNode.data.repoKey,\n                                this.currentNode.data.path).then((response) => {\n                            this.canAnnotate = response.data;\n                        });\n\n                    });\n        }\n    }\n\n    sortedInsertionToOject(unsortedObject,newFieldValue,newFieldName,fieldBefore){\n        if(!newFieldValue) {\n            return unsortedObject;\n        }\n        let sortedObject = {};\n        for(let field in unsortedObject){\n            sortedObject[field] = unsortedObject[field];\n            if(field===fieldBefore){\n                sortedObject[newFieldName] = newFieldValue;\n            }\n        }\n        return sortedObject;\n    }\n\n    shouldDisplayInfoEntry(key){\n        return  key != 'licenses' &&\n                key != 'filtered' &&\n                key != 'smartRepo' &&\n                key != 'showFilteredResourceCheckBox' &&\n                key != 'artifactsCount' &&\n                key != 'artifactsCount' &&\n                key != 'currentlyDownloadable' &&\n                key != 'bintrayUrl' &&\n                key != 'originPath';\n    }\n\n    goToOriginPath(value){\n        let browser = this.artifactoryStorage.getItem('BROWSER') || 'tree';\n        if (browser === 'stash') browser = 'tree';\n        let path = value;\n        this.$state.go('artifacts.browsers.path', {\n            tab: \"General\",\n            artifact: path,\n            browser: browser\n        });\n    }\n\n    getGeneralTabPromise(){\n        let newPath = (this.currentNode.data.type === \"folder\" && this.currentNode.data.path.substr(-1) != \"/\") ? this.currentNode.data.path + \"/\" : this.currentNode.data.path;\n        return this.artifactGeneralDao.fetch({\n            \"type\": this.currentNode.data.type,\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": newPath\n        }).$promise;\n    }\n\n    trimVirtualAssociations() {\n        const LIMIT = 5;\n        let fields = ['virtualRepositories','includedRepositories'];\n        fields.forEach(f=>{\n            if (this.generalData[f] && this.generalData[f].length > LIMIT) {\n                let more = this.generalData[f].length - (LIMIT-1);\n                this.generalData['all' + _.capitalize(f)] = _.cloneDeep(this.generalData[f]);\n                this.generalData[f] = this.generalData['all' + _.capitalize(f)].slice(0,LIMIT-1);\n                let THIS = this;\n                this.generalData[f].push({\n                    showAll: true,\n                    text: `(Show ${more} more)`,\n                    action: 'show',\n                    toggle: function() {\n                        if (this.action==='show') {\n                            this.action = 'hide';\n                            this.text = '(Show Less)';\n                            THIS.generalData[f] = _.cloneDeep(THIS.generalData['all' + _.capitalize(f)]);\n                            THIS.generalData[f].push(this);\n                        }\n                        else {\n                            this.action = 'show';\n                            this.text = `(Show ${more} more)`;\n                            THIS.generalData[f] = THIS.generalData['all' + _.capitalize(f)].slice(0,LIMIT-1);\n                            THIS.generalData[f].push(this);\n                        }\n                    }\n                })\n            }\n        })\n\n    }\n    calculateArtifactsCount() {\n        this.calculatingArtifactsCount = true;\n        let {name, repositoryPath} = this.generalData.info;\n        this.artifactGeneralDao.artifactsCount({name, repositoryPath}).$promise\n                .then((response) => {\n                    this.generalData.info.artifactsCount = response.artifactsCount;\n                })\n                .finally(() => {\n                    this.calculatingArtifactsCount = false;\n                    this.finishedArtifactCount = true;\n                });\n    }\n\n    calculateArtifactsCountAndSize() {\n        this.calculatingArtifactsCount = true;\n        let {name, repositoryPath} = this.generalData.info;\n        this.artifactGeneralDao.artifactsCount({name, repositoryPath}).$promise\n                .then((response) => {\n                    this.generalData.info.artifactsCount = '' + response.artifactsCount + ' / ' + response.artifactSize;\n                })\n                .finally(() => {\n                    this.calculatingArtifactsCount = false;\n                    this.finishedArtifactCount = true;\n                });\n    }\n\n    artifactsCountEnabled() {\n        return _.contains(['local', 'cached'], this.currentNode.data.repoType);\n    }\n\n    onFilteredResourceCB() {\n        let payload = {repoKey: this.currentNode.data.repoKey, path: this.currentNode.data.path};\n        this.filteredResourceDao.setFiltered({setFiltered: this.generalData.info.filtered},\n                payload).$promise.then((res)=> {\n            //console.log(res);\n        });\n    }\n\n    fixChecksum() {\n        this.ChecksumsDao.fix({}, {repoKey: this.currentNode.data.repoKey, path: this.currentNode.data.path})\n                .$promise.then((data) => {\n            this._getGeneralData();\n        })\n    }\n\n    isDeclarationSelected(item) {\n        return this.currentDeclaration == item;\n    }\n\n    selectDeclaration(item) {\n        let self = this;\n        this.currentDeclaration = item;\n        this.dependencyDeclarationDao.get({\n            buildtool: item.toLowerCase(),\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n\n        }).$promise.then((data)=> {\n            if (data.dependencyData) {\n                self.generalData.dependencyDeclaration.dependencyData = data.dependencyData;\n            }\n        });\n    }\n\n    loadPackageDescription() {\n        this.bintrayData = {};\n        this.artifactGeneralDao.bintray({sha1: this.generalData.checksums.sha1Value}).$promise.then((data)=> {\n            if (!data.name && !data.errorMessage) this.generalData.bintrayInfoEnabled = false;\n            else this.bintrayData = data;\n        });\n    }\n\n    /**Licenses actions and display\n     * saving all default licenses on the generalScope for modal display\n     * **/\n    openAddLicenseModal() {\n        this.generalScope.modalTitle = 'Add Artifactory License Property';\n        this.modalInstance = this.modal.launchModal('add_license_modal', this.generalScope);\n    }\n    openFoundLicenseModal() {\n\n\n        let associatedLicenses = this.generalData.info.licenses[0].name === 'Not Found' ? [] : _.map(this.generalData.info.licenses, (lic) => { return lic.name });\n\n        this.generalScope.foundLicenses = _.difference(this.generalScope.selectedLicenses, associatedLicenses);\n\n        if (this.generalScope.foundLicenses.length === 0) {\n            this.artifactoryNotifications.create({info: 'Found licenses are already attached'})\n        } else {\n            this.generalScope.modalTitle = this.generalScope.foundLicenses.length + ' ' + (this.generalScope.foundLicenses.length < 2 ? ' License' : ' Licenses') + ' Found';\n            this.modalInstance = this.modal.launchModal('found_license_modal', this.generalScope);\n        }\n    }\n\n    editLicenses(scan) {\n        this.artifactLicensesDao.getLicenses().$promise.then((licenses)=> {\n            this.generalScope.licenses = _.map(licenses, (rec)=> {\n                return rec.name\n            });\n            this.generalScope.selectedLicenses = _.filter(this.generalData.info.licenses,(lic)=>{\n                return lic.name !== 'Not Found';\n            });\n            this.openAddLicenseModal();\n        })\n    }\n\n    saveLicenses(selectedLicenses) {\n        this.artifactLicensesDao.setLicenses({\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n        }, selectedLicenses).$promise.then((result)=> {\n            this._getGeneralData();\n            this.modalInstance.close();\n        });\n    }\n\n    attachLicenses() {\n        this.artifactLicensesDao.setLicenses({\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n        }, this.generalScope.selectedLicenses).$promise.then((result)=> {\n            this._getGeneralData();\n            this.modalInstance.close();\n        });\n    }\n\n    deleteLicenses() {\n        this.modal.confirm(\"Are you sure you want to delete the license information attached to \" + this.generalData.info.name + \"?\")\n                .then(() => {\n                    this.saveLicenses([]);\n                });\n    }\n\n    scanForLicenses() {\n        this.artifactLicensesDao.scanArtifact({\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n        }).$promise.then((result)=> {\n            if (result.data.length > 0) {\n                this.generalScope.selectedLicenses = _.map(result.data, (rec)=> {\n                    return rec.name;\n                });\n\n                this.openFoundLicenseModal();\n            }\n            else {\n                this.artifactoryNotifications.create({info: 'No licenses found in scan'})\n            }\n        });\n    }\n\n    searchForArchiveFile() {\n        this.artifactLicensesDao.getArchiveLicenseFile({\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n        }).$promise.then((data)=> {\n            this.modal.launchCodeModal('License File', data.data);\n        }, ()=> {\n            this.SearchForArchiveLicense = \"(No archive license file found)\";\n            this.noArchiveLicense = true;\n        });\n\n    }\n\n    queryCodeCenter() {\n        this.artifactLicensesDao.queryCodeCenter({\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n        }).$promise.then((result)=> {\n            this._getGeneralData();\n        });\n    }\n\n    getFullFilePath() {\n        /*\n         if (!window.location.origin) { // IE compatibility\n         window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\n         }\n         return window.location.origin+this.currentNode.data.actualDownloadPath;\n         */\n        return this.currentNode.data.actualDownloadPath;\n    }\n\n    getSha256() {\n        if (this.features.isOss() || !this.canCalculateSha256()) return;\n\n        this.sha256Calculated = true;\n        this.calculatingSha256 = true;\n        this.artifactActionsDao.getSha256({$spinner_domain: \"sha256\"}, {\n            repoKey: this.currentNode.data.repoKey,\n            path: this.currentNode.data.path\n        }).$promise\n                .then((result)=> {\n                    // Instead of calling this._getGeneralData() and refreshing the entire tab , just replace the SHA-256\n                    this.getGeneralTabPromise()\n                            .then((response) => {\n                                let generalTab = response;\n                                this.generalData.checksums.sha2 = generalTab.checksums.sha2;\n                                this.calculatingSha256 = false;\n                            });\n                });\n    }\n\n    canCalculateSha256() {\n        return this.canAnnotate && this.userService.currentUser.getCanDeploy() && !this.isInVirtual();\n    }\n\n    isInVirtual() {\n        return this.currentNode && this.currentNode.data && this.currentNode.data.getRoot && this.currentNode.data.getRoot().repoType === 'virtual';\n    }\n\n    getChecksumKey(keyval) {\n        return keyval.split(':')[0];\n    }\n    getChecksumVal(keyval) {\n        let splitted = keyval.split(':');\n        splitted.shift();\n        return splitted.join(':');\n    }\n\n    isTrashcanEnabled() {\n        return !this.footerDao.getInfo().trashDisabled;\n    }\n    isTrashcan() {\n        return this.currentNode.data && this.currentNode.data.isTrashcan && this.currentNode.data.isTrashcan();\n    }\n    isInTrashcan() {\n        return this.currentNode.data && this.currentNode.data.isInTrashcan && this.currentNode.data.isInTrashcan();\n    }\n\n    isDistRepo() {\n        return this.currentNode.data && this.currentNode.data.repoType === 'distribution';\n    }\n\n    _moveObjectElement(obj, currentKey, afterKey) {\n        var result = {};\n        var val = obj[currentKey];\n        delete obj[currentKey];\n        var next = -1;\n        var i = 0;\n        if(typeof afterKey == 'undefined' || afterKey == null) afterKey = '';\n        $.each(obj, (k, v) => {\n            if((afterKey == '' && i == 0) || next == 1) {\n                result[currentKey] = val;\n                next = 0;\n            }\n            if(k == afterKey) { next = 1; }\n            result[k] = v;\n            ++i;\n        });\n        if(next == 1) {\n            result[currentKey] = val;\n        }\n        if(next !== -1) return result; else return obj;\n    }\n\n\n    isCurrentNodeAFolderInArchive() {\n        let isFolder = this.currentNode.data.folder;\n        let isInArchive = !!this.currentNode.data.archivePath;\n        return isFolder && isInArchive;\n    }\n}\n\nexport function jfGeneral() {\n    return {\n        restrict: 'EA',\n        scope: {\n            currentNode: '='\n        },\n        controller: jfGeneralController,\n        controllerAs: 'jfGeneral',\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_general.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_general.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport KEYS from '../../../../constants/keys.constants';\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nclass jfPropertiesController {\n    constructor($q, $scope, JFrogGridFactory, ArtifactPropertyDao, JFrogEventBus, JFrogModal,\n                PredefineDao, RepoPropertySetDao, JFrogNotifications, $timeout, User, GoogleAnalytics) {\n\n        this.propertyGridOption = {};\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.user = User;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.artifactPropertyDao = ArtifactPropertyDao.getInstance();\n        this.predefineDao = PredefineDao.getInstance();\n        this.repoPropertySetDao = RepoPropertySetDao.getInstance();\n        this.modal = JFrogModal;\n        this.$scope = $scope;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.propertyTypeKeys = KEYS.PROPERTY_TYPE;\n        this.propertyType = 'Property';\n        this.propertiesOptions = [];\n        this.repoPropertyRecursive = {recursive: false};\n        this.TOOLTIP = TOOLTIP.artifacts.browse;\n\n        JFrogEventBus.registerOnScope($scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this.clearFields();\n            this._getPropertiesData();\n        });\n\n        /**\n         *  config selectize inputs\n         *  **/\n        this.propertySetMultiValuesConfig = {\n            sortField: 'text',\n            maxItems: null,\n            plugins: ['remove_button']\n        }\n        this.propertySetSingleValueConfig = {\n            sortField: 'text',\n            maxItems: 1\n        }\n        this.propertySetAnyValueConfig = {\n            sortField: 'text',\n            maxItems: 1,\n            create: true,\n            createOnBlur: true,\n            persist: true\n        }\n    }\n\n    $onInit() {\n        this._createGrid();\n        this._getPropertiesData();\n        this._createModalScope();\n    }\n\n    /**\n     * delete Selected properties by batch\n     * **/\n    deleteSelectedProperties(recursive) {\n        let self = this;\n        let rowSelection = this.propertyGridOption.api.selection;\n        let selectedProperties = rowSelection.getSelectedRows();\n        let confirmMessage = 'Are you sure you wish to delete ' + selectedProperties.length;\n        confirmMessage += selectedProperties.length > 1 ? ' properties?' : ' property?';\n\n        this.modal.confirm(confirmMessage)\n            .then(() => {\n                rowSelection.clearSelectedRows();\n                let propertiesToDelete = selectedProperties.map(property => {\n                    return {\n                        name: property.name,\n                        path: self.currentNode.data.path,\n                        repoKey: self.currentNode.data.repoKey,\n                        recursive: recursive\n                    }\n                });\n                this.artifactPropertyDao.deleteBatch({properties:propertiesToDelete}).$promise.then(()=> {\n                    this._getPropertiesData();\n                })\n            });\n    }\n\n    /**\n     * delete single proerty\n     * ***/\n    deleteSingleProperty(row, recursive) {\n\n        let json ={properties:[\n            {\n                name: row.name,\n                path: this.currentNode.data.path,\n                repoKey: this.currentNode.data.repoKey,\n                recursive: recursive\n            }\n        ]\n    }\n\n        this.modal.confirm('Are you sure you wish to delete this property?')\n            .then(() => {\n                this.artifactPropertyDao.deleteBatch(json).$promise.then(()=> {\n                        this._getPropertiesData();\n                    })\n            });\n    }\n\n    clearFields() {\n        if (this.repoPropertySetSelected) {\n            if (this.repoPropertySetSelected.parent) {\n                delete this.repoPropertySetSelected.parent;\n            }\n            if (this.repoPropertySetSelected.property) {\n                delete this.repoPropertySetSelected.property;\n            }\n            if (this.repoPropertySetSelected.value) {\n                delete this.repoPropertySetSelected.value;\n            }\n        }\n    }\n\n    isSelected(propertyType) {\n        return this.propertyType == propertyType;\n    }\n\n    setProperty(propertyType) {\n        this.propertyType = propertyType;\n    }\n\n    /**\n     * add Property Set to list\n     * **/\n    addPropertySet() {\n        this._trackAddPropertyEvent('Add property set');\n        if (this.repoPropertySetSelected) {\n            this._savePropertySetValues(this.repoPropertySetSelected);\n        }\n        this.repoPropertySetSelected = '';\n        this.propertyValuesOptions = [];\n    }\n\n    /**\n     * add single property to list\n     * **/\n    addProperty() {\n        this._trackAddPropertyEvent('Add property');\n        let objProperty = this._createNewRepoObject(this.repoPropertySelected.name)\n        delete objProperty.text;\n        delete objProperty.value;\n        this._savePropertyValues(objProperty);\n\n        this.repoPropertySelected.name = '';\n        this.repoPropertySelected.value = '';\n    }\n\n    _trackAddPropertyEvent(type) {\n        this.GoogleAnalytics.trackEvent('Artifacts' , 'Tab - Property' , type , null , this.currentNode.data.repoPkgType , this.currentNode.data.repoType);\n    }\n\n    /**\n     * pouplited values to input propertyValuesOptions\n     *\n     * **/\n    getPropertySetValues() {\n        if (this.repoPropertySetSelected) {\n            this.predefineDao.get({\n                name: this.repoPropertySetSelected.parent.name + \".\" + this.repoPropertySetSelected.property.name,\n                path: this.currentNode.data.path,\n                repoKey: this.currentNode.data.repoKey,\n                recursive: this.recursive\n            }).$promise.then((predefineValues)=> {\n\n                    this._getPropertySetPreDefinedValues(predefineValues);\n                });\n        }\n    }\n\n    isCurrentPropertyType(type) {\n        if (!this.repoPropertySetSelected && type === 'ANY_VALUE') {\n            return true;\n        }\n        else if (this.repoPropertySetSelected) {\n            if(!this.repoPropertySetSelected.propertyType && type === 'ANY_VALUE') {\n                return true;\n            }\n            return this.propertyTypeKeys[this.repoPropertySetSelected.propertyType] === this.propertyTypeKeys[type]\n        }\n    }\n\n    setModalData(selectedProperty, predefineValues) {\n        this.modalScope.property = selectedProperty;\n        this.modalScope.property.predefineValues = predefineValues ? predefineValues.predefinedValues : null;\n        this.modalScope.property.selectedValues = [];\n        this.modalScope.property.modalTitle = \"Add New '\" + selectedProperty.property.name + \"' Property\";\n        this.modalScope.save = (property) =>this._savePropertySetValues(property);\n        this._propertyFormModal();\n    }\n\n\n    editSelectedProperty(row) {\n\n        let selectedProperty = row;\n\n        this.artifactPropertyDao.get({\n            name: selectedProperty.name,\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey\n\n        }).$promise.then((currentProperty)=> {\n                    //console.log('currentProperty=',currentProperty);\n                this.modalScope.property = currentProperty;\n                this.modalScope.property.selectedValues = this.modalScope.property.propertyType !== 'MULTI_SELECT' && _.isArray(this.modalScope.property.selectedValues) ? this.modalScope.property.selectedValues.join(';') : this.modalScope.property.selectedValues;\n                this.modalScope.selectizeConfig = {\n                    create: currentProperty.propertyType === 'ANY_VALUE',\n                    maxItems: 1\n                };\n//                this.modalScope.property.multiValue = currentProperty.propertyType && currentProperty.propertyType === 'MULTI_SELECT';\n                this.modalScope.property.modalTitle = \"Edit '\" + selectedProperty.name + \"' Property\";\n                this.modalScope.property.name = selectedProperty.name;\n                this.modalScope.save = (property) =>this._updatePropertySetValues(property)\n                this._propertyFormModal();\n\n            });\n    }\n\n    /**\n     * build defulat template proerty\n     * **/\n    _createNewRepoObject(repoName) {\n        return {\n            multiValue: false,\n            property: {name: repoName},\n            text: repoName,\n            value: repoName\n        }\n    }\n\n    /**\n     * popluted grid data and property Set list name\n     * **/\n    _getPropertiesData() {\n        this.user.canAnnotate(this.currentNode.data.repoKey, this.currentNode.data.path).then((response) => {\n            this.canAnnotate = response.data;\n        });\n        this.artifactPropertyDao.query({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey\n        }).$promise.then((properties) => {\n\n                this.properties = properties.artifactProperties ? properties.artifactProperties.map(this._formatToArray) : [];\n                this._createDisplayValues();\n                this.propertyGridOption.setGridData(this.properties);\n\n                this._getPropertySetData();\n            });\n    }\n\n    _getPropertySetData() {\n        this.repoPropertySetDao.query({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey\n        }).$promise.then((_propertyOptionList)=> {\n                let propertyOptionList = [];\n                _propertyOptionList.forEach((propertyOption)=> {\n                    propertyOption.value = propertyOption.property.name;\n                    propertyOption.text = propertyOption.property.name;\n                    propertyOptionList.push(propertyOption);\n                });\n                this.propertiesOptions = propertyOptionList;\n\n            });\n    }\n\n    _createModalScope() {\n        this.modalScope = this.$scope.$new();\n        this.modalScope.closeModal = () => this.modalInstance.close();\n    }\n\n    _createGrid() {\n        this.propertyGridOption = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getColumns())\n                .setRowTemplate('default')\n                .setMultiSelect()\n                .setButtons(this._getActions())\n                .setBatchActions(this._getBatchActions());\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this.deleteSingleProperty(row, false),\n                visibleWhen: () => this.canAnnotate && (this.currentNode.data.type == 'folder' || this.currentNode.data.type == 'repository')\n            },\n            {\n                icon: 'icon icon-delete-versions',\n                tooltip: 'Delete Recursively',\n                callback: row => this.deleteSingleProperty(row, true),\n                visibleWhen: () => this.canAnnotate && (this.currentNode.data.type == 'folder' || this.currentNode.data.type == 'repository')\n            }\n        ];\n    }\n\n    _getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: () => this.deleteSelectedProperties(false),\n                visibleWhen: () => this.canAnnotate && this.currentNode && this.currentNode.data && this.currentNode.data.getRoot().repoType !== 'virtual'\n            },\n            {\n                icon: 'delete-recursive',\n                name: 'Delete Recursively',\n                callback: () => this.deleteSelectedProperties(true),\n                visibleWhen: () => this.canAnnotate && (this.currentNode.data.type == 'folder' || this.currentNode.data.type == 'repository') && this.currentNode.data.getRoot().repoType !== 'virtual'\n            }\n        ]\n    }\n\n    _propertyFormModal() {\n        this.modalInstance = this.modal.launchModal(\"property_modal\", this.modalScope, (this.modalScope.property.propertyType != 'MULTI_SELECT' ? 'sm' : 'lg'));\n    }\n\n    _savePropertyValues(property) {\n        if (this.repoPropertySelected.value.indexOf(';') >= 0) {\n            property.selectedValues = _.filter(this.repoPropertySelected.value.split(';'), (val) => !!val\n        )\n            ;\n        }\n        else {\n            property.selectedValues = [];\n            property.selectedValues.push(this.repoPropertySelected.value);\n        }\n        this.artifactPropertyDao.save({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey,\n            recursive: this.repoPropertyRecursive.recursive\n        }, property).$promise.then(()=> {\n                this._getPropertiesData();\n            });\n    }\n\n    _savePropertySetValues(property) {\n        if (property.propertyType==='MULTI_SELECT') {\n            this._addValuesToMulti(property, this.repoPropertySetSelected.value);\n        }\n        else {\n            property.selectedValues = this.repoPropertySetSelected.value;\n        }\n\n        if (!property.multiValue && !_.isArray(property.selectedValues)) {\n            let selectedValuesToArray = angular.copy(property.selectedValues);\n            property.selectedValues = [];\n            property.selectedValues.push(selectedValuesToArray);\n\n        }\n\n        this.artifactPropertyDao.save({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey,\n            recursive: this.repoPropertyRecursive.recursive\n        }, property).$promise.then(()=> {\n                    this._getPropertiesData();\n                });\n    }\n\n    _addValuesToMulti(property, addedValues) {\n        //console.log(property);\n        let theProperty = _.findWhere(this.properties, {name: property.parent.name+'.'+property.property.name});\n        if (theProperty) {\n            property.selectedValues = theProperty.value.concat(addedValues);\n        }\n        else {\n            property.selectedValues = addedValues;\n        }\n    }\n\n\n    _updatePropertySetValues(property) {\n        if (property.selectedValues.indexOf(';') >= 0) property.selectedValues = _.filter(property.selectedValues.split(';'), (val) => !!val\n    )\n        ;\n        if (!property.multiValue && !_.isArray(property.selectedValues)) {\n            let selectedValuesToArray = angular.copy(property.selectedValues);\n            property.selectedValues = [];\n            property.selectedValues.push(selectedValuesToArray);\n\n        }\n        //console.log(property);\n        this.artifactPropertyDao.update({\n            path: this.currentNode.data.path,\n            repoKey: this.currentNode.data.repoKey,\n            recursive: this.repoPropertyRecursive.recursive\n        }, property).$promise.then(()=> {\n                    this._getPropertiesData();\n                    this.modalInstance.close();\n                });\n    }\n\n    _getPropertySetPreDefinedValues(predefineValues) {\n        this.propertyValuesOptions = [];\n        predefineValues.predefinedValues.forEach((preValue)=> {\n            this.propertyValuesOptions.push(this._createNewRepoObject(preValue));\n            this.repoPropertySetSelected.value = [];\n        });\n        this.repoPropertySetSelected.value = predefineValues.selectedValues;\n    }\n\n    _getColumns() {\n\n        let cellTemplate = `<div class=\"grid-items-container gridcell-content-text\"\n                                 id=\"{{row.uid}}\">\n                                <div class=\"item\" \n                                     ng-if=\"row.entity.value.length>1\" \n                                     ng-repeat=\"col in row.entity.value track by $index\">{{col}}\n                                </div>\n                                <a class=\"gridcell-showall jf-link\" \n                                   ng-if=\"row.entity.value.length>1 && grid.options.htmlIsOverflowing(row.uid) && !grid.options.lastHtmlElementOverflowing(row.uid)\" \n                                   href \n                                   ng-click=\"grid.options.showAll(row.entity.value,row.entity.name,col)\"> (See All)</a>\n                                <a class=\"gridcell-showall jf-link\" \n                                   ng-if=\"row.entity.value.length>1 && grid.options.lastHtmlElementOverflowing(row.uid)\" \n                                   href \n                                   ng-click=\"grid.options.showAll(row.entity.value,row.entity.name,col)\"> (See List)</a>\n                                <div class=\"ui-grid-cell-contents\" ng-if=\"row.entity.value.length==1\">\n                                    <span ng-if=\"!row.entity.displayValues[0]\">{{row.entity.value[0]}}</span>\n                                    <span ng-if=\"row.entity.displayValues[0]\" ng-bind-html=\"row.entity.displayValues[0]\"></span>\n                                </div>\n                            </div>`;\n\n        let keyCellTemplate = '<div ng-if=\"!grid.appScope.jfProperties.canAnnotate\" class=\"ui-grid-cell-contents\">{{row.entity.name}}</div>' +\n                '<div ng-if=\"grid.appScope.jfProperties.canAnnotate\" class=\"ui-grid-cell-contents\"><a href=\"\" class=\"jf-link\" ng-click=\"grid.appScope.jfProperties.editSelectedProperty(row.entity)\">{{row.entity.name}}</a></div>'\n\n        return [\n            {\n                name: \"Property\",\n                displayName: \"Property\",\n                field: \"name\",\n                cellTemplate: keyCellTemplate\n            },\n            {\n                name: \"Value(s)\",\n                displayName: \"Value(s)\",\n                field: \"value\",\n                cellTemplate: cellTemplate\n            }\n        ]\n    }\n\n    _formatToArray(list) {\n        return {name: list.name, value: _.trimRight(list.value.toString(), ';').split(';')};\n    }\n\n    _createDisplayValues() {\n        var urlRegex = /^https?:\\/\\/[a-zA-Z]+(\\.)?(:[0-9]+)?.+?(?=\\s|$|\"|'|>|<)/;\n        _.map(this.properties,(prop) => {\n            let displayValues = [];\n            for (let i = 0; i<prop.value.length; i++) {\n                let val = prop.value[i];\n                if (val.match(urlRegex)) {\n                    displayValues[i] = `<a href=\"${val}\" target=\"_blank\">${val}</a>`;\n                }\n                else displayValues[i] = undefined;\n            }\n            prop.displayValues = displayValues;\n        });\n    }\n\n    isInVirtual() {\n        return this.currentNode && this.currentNode.data && this.currentNode.data.getRoot().repoType === 'virtual';\n    }\n\n}\nexport function jfProperties() {\n    return {\n        restrict: 'EA',\n        controller: jfPropertiesController,\n        scope: {\n            currentNode: '='\n        },\n        controllerAs: 'jfProperties',\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_properties.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_properties.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfViewSourceController {\n    constructor($scope, ArtifactViewSourceDao, JFrogEventBus) {\n        this.sourceData = '';\n        this.artifactViewSourceDao = ArtifactViewSourceDao.getInstance();\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n        this.editorOptions = {\n            lineNumbers: true,\n            readOnly: 'nocursor',\n            lineWrapping: true,\n            viewportMargin: Infinity\n        };\n    }\n\n    $onInit() {\n        this.loadSourceData();\n        this._registerEvents();\n    }\n\n    loadSourceData() {\n        if (this.currentNode.data.mimeType) {\n            this.editorOptions.mode = this.currentNode.data.mimeType;\n        }\n        // get source path from general info\n        let info = _.findWhere(this.currentNode.data.tabs, {name: 'General'}).info;\n        if (info) {\n            let sourcePath = info.path;\n            // fetch source from server\n            this.artifactViewSourceDao.fetch({\n                \"archivePath\": this.currentNode.data.archivePath,\n                \"repoKey\": this.currentNode.data.repoKey,\n                \"sourcePath\": sourcePath\n            }).$promise\n                    .then((result) => {\n                        this.sourceData = result.source;\n                    })\n        }\n\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                this.loadSourceData();\n            }\n        });\n    }\n}\nexport function jfViewSource() {\n    return {\n        restrict: 'EA',\n        scope: {\n            currentNode: '='\n        },\n        controller: jfViewSourceController,\n        controllerAs: 'jfViewSource',\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_view_source.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_view_source.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfPomViewController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus) {\n        this.artifactPomViewDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initPomView();\n    }\n\n    _initPomView() {\n        this._registerEvents();\n        this._getPomViewData();\n    }\n\n    _getPomViewData() {\n\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactPomViewDao.fetch({\n            \"view\": \"pom\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.pomViewData= data;\n                    this.pomViewData.fileContent=data.fileContent.trim();\n                })\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getPomViewData();\n            }\n        });\n    }\n}\nexport function jfPomView() {\n    return {\n        restrict: 'EA',\n        controller: jfPomViewController,\n        controllerAs: 'jfPomView',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_pom_view.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_pom_view.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfXmlViewController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus) {\n        this.artifactXmlViewDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initXmlView();\n    }\n\n    _initXmlView() {\n        this._registerEvents();\n        this._getXmlViewData();\n    }\n\n    _getXmlViewData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactXmlViewDao.fetch({\n            \"view\": \"pom\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n            .then((data) => {\n                this.xmlViewData = data;\n                this.xmlViewData.fileContent = data.fileContent.trim();\n            })\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getXmlViewData();\n            }\n        });\n    }\n}\nexport function jfXmlView() {\n    return {\n        restrict: 'EA',\n        controller: jfXmlViewController,\n        controllerAs: 'jfXmlView',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_xml_view.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_xml_view.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\n\nclass jfIvyViewController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus) {\n        this.artifactIvyViewDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initIvyView();\n    }\n\n    _initIvyView() {\n        this._registerEvents();\n        this._getIvyViewData();\n    }\n\n    _getIvyViewData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactIvyViewDao.fetch({\n            \"view\": \"pom\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    //console.log(data);\n                    this.ivyViewData= data;\n                    this.ivyViewData.fileContent=data.fileContent.trim();\n                })\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                this._getIvyViewData();\n            }\n        });\n    }\n}\nexport function jfIvyView() {\n    return {\n        restrict: 'EA',\n        controller: jfIvyViewController,\n        controllerAs: 'jfIvyView',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_ivy_view.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_ivy_view.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfNugetController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.nuget;\n        this.gridDependenciesOptions = {};\n        this.gridFrameworkAssembliesOptions = {};\n        this.nugetData = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initNuget();\n    }\n\n    _initNuget() {\n        this._registerEvents();\n        this.getNugetData();\n    }\n\n    getNugetData() {\n\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"nuget\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.nugetData = data;\n                        this._createGrid();\n                });\n    }\n\n    _createGrid() {\n        if (this.nugetData.dependencies) {\n            if (!Object.keys(this.gridDependenciesOptions).length) {\n                this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setRowTemplate('default')\n                        .setColumns(this._getColumns('dependencies'))\n                        .setGridData(this.nugetData.dependencies)\n            }\n            else {\n                this.gridDependenciesOptions.setGridData(this.nugetData.dependencies)\n            }\n        }\n        if (this.nugetData.frameworkAssemblies) {\n            if (!Object.keys(this.gridFrameworkAssembliesOptions).length) {\n                this.gridFrameworkAssembliesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setColumns(this._getColumns('frameworkAssemblies'))\n                        .setRowTemplate('default')\n                        .setGridData(this.nugetData.frameworkAssemblies)\n            }\n            else {\n                this.gridFrameworkAssembliesOptions.setGridData(this.nugetData.frameworkAssemblies);\n            }\n        }\n    }\n\n    _getColumns(gridType) {\n        if (gridType === 'dependencies') {\n            return [{\n                name: 'Id',\n                displayName: 'Id',\n                field: 'id'\n            },\n                {\n                    name: 'Version',\n                    displayName: 'Version',\n                    field: 'version'\n                },\n                {\n                    name: 'Target Framework',\n                    displayName: 'Target Framework',\n                    field: 'targetFramework'\n                }]\n        }\n        if (gridType === 'frameworkAssemblies') {\n            return [\n                {\n                    name: 'Assembly Name',\n                    displayName: 'Assembly Name',\n                    field: 'assemblyName'\n                },\n                {\n                    name: 'Target Framework',\n                    displayName: 'Target Framework',\n                    field: 'targetFramework'\n                }\n            ]\n        }\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self.getNugetData();\n            }\n        });\n    }\n\n}\nexport function jfNuget() {\n    return {\n        restrict: 'EA',\n        controller: jfNugetController,\n        controllerAs: 'jfNuget',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_nuget.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_nuget.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\nimport DICTIONARY from \"./../../constants/artifact_general.constant\";\n\nclass jfComposerController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.composer;\n        this.gridDependenciesOptions = {};\n        this.composerData = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initComposer();\n    }\n\n    _initComposer() {\n        this._registerEvents();\n        this.getComposerData();\n    }\n\n    getComposerData() {\n\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"composer\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.composerData = data;\n                    this._createGrid();\n                });\n    }\n\n    _createGrid() {\n        if (this.composerData.composerDependencies) {\n            if (!Object.keys(this.gridDependenciesOptions).length) {\n                this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setRowTemplate('default')\n                        .setColumns(this._getColumns('dependencies'))\n                        .setGridData(this.composerData.composerDependencies)\n            } else {\n                this.gridDependenciesOptions.setGridData(this.composerData.composerDependencies)\n            }\n        }\n    }\n\n    _getColumns(gridType) {\n        if (gridType === 'dependencies') {\n            return [\n                {\n                    name: 'Name',\n                    displayName: 'Name',\n                    field: 'name'\n                },\n                {\n                    name: 'Version',\n                    displayName: 'Version',\n                    field: 'version'\n                }]\n        }\n    }\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self.getComposerData();\n            }\n        });\n    }\n\n}\nexport function jfComposer() {\n    return {\n        restrict: 'EA',\n        controller: jfComposerController,\n        controllerAs: 'jfComposer',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_composer.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_composer.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfPyPiController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.pyPi;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.pyPiData = {};\n        this.$scope = $scope;\n        this.categoriesGridOptions = {};\n    }\n\n    $onInit() {\n        this._initPyPi();\n        this._createGrid();\n    }\n\n    _initPyPi() {\n        this._registerEvents();\n        this.getPyPiData();\n    }\n\n    _createGrid() {\n        this.categoriesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getCategoriesColumns())\n            .setRowTemplate('default');\n    }\n\n    _getCategoriesColumns() {\n        return [\n            {\n                name: \"Category\",\n                displayName: \"Category\",\n                field: \"category\"\n//                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity}}</div>'\n            }\n        ]\n    }\n\n    isValidUrl(str) {\n        var regex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i;\n        return regex.test(str);\n    }\n\n    getPyPiData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"pypi\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n            .then((data) => {\n                this.pyPiData = data;\n                this.categoriesGridOptions.setGridData(data.categories.map((cat) => {\n                    return {category:cat};\n                }));\n            });\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (self.currentNode != node) {\n                self.currentNode = node;\n                self.getPyPiData();\n            }\n        });\n    }\n\n}\nexport function jfPyPi() {\n    return {\n        restrict: 'EA',\n        controller: jfPyPiController,\n        controllerAs: 'jfPyPi',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_pypi.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_pypi.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by matang on 09/11/2017.\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfHelmController {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.helm;\n        this.gridDependenciesOptions = {};\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.helmData = {};\n\n    }\n\n    $onInit() {\n        this._getHelmData();\n        this._registerEvents();\n    }\n\n\n    _getHelmData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"helm\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.helmData = data;\n            this._createGrid();\n        });\n    }\n\n    _createGrid() {\n        if (this.helmData.helmDependencies) {\n            this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.helmData.helmDependencies)\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: 'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }]\n    }\n\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getHelmData();\n        });\n    }\n}\nexport function jfHelm() {\n    return {\n        restrict: 'EA',\n        controller: jfHelmController,\n        controllerAs: 'jfHelm',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_helm.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_helm.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by matang on 09/11/2017.\n */\n\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfGoController {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.go;\n        this.gridDependenciesOptions = {};\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.goData = {};\n\n    }\n\n    $onInit() {\n        this._getGoData();\n        this._registerEvents();\n    }\n\n    _getGoData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"go\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.goData = data;\n            this._createGrid();\n        });\n    }\n\n    _createGrid() {\n        if (this.goData.goDependencies) {\n            this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setRowTemplate('default')\n                .setColumns(this._getColumns())\n                .setGridData(this.goData.goDependencies)\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: 'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }]\n    }\n\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getGoData();\n        });\n    }\n}\nexport function jfGo() {\n    return {\n        restrict: 'EA',\n        controller: jfGoController,\n        controllerAs: 'jfGo',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_go.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_go.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by matang on 09/11/2017.\n */\n\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfCranController {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.cran;\n        this.gridDependenciesOptions = {};\n        this.gridSuggestsOptions = {};\n        this.gridImportsOptions = {};\n        this.gridLinkingToOptions = {};\n        this.gridEnhancesOptions = {};\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.cranData = {};\n\n    }\n\n    $onInit() {\n        this._getCranData();\n        this._registerEvents();\n    }\n\n\n    _getCranData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"cran\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.cranData = data;\n            this._createDependenciesGrid();\n            this._createSuggestsGrid();\n            this._createImportsGrid();\n            this._createLinkingToGrid();\n            this._createEnhancesGrid();\n        });\n    }\n    _createDependenciesGrid() {\n        if (this.cranData.cranDependencies) {\n            this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.cranData.cranDependencies)\n        }\n    }\n\n    _createSuggestsGrid() {\n        if (this.cranData.cranSuggests) {\n            this.gridSuggestsOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.cranData.cranSuggests)\n        }\n    }\n\n    _createImportsGrid() {\n        if (this.cranData.cranSuggests) {\n            this.gridImportsOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.cranData.cranImports)\n        }\n    }\n\n    _createLinkingToGrid() {\n        if (this.cranData.cranSuggests) {\n            this.gridLinkingToOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.cranData.cranImports)\n        }\n    }\n\n    _createEnhancesGrid() {\n        if (this.cranData.cranSuggests) {\n            this.gridEnhancesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.cranData.cranImports)\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: 'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }]\n    }\n\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getCranData();\n        });\n    }\n}\nexport function jfCran() {\n    return {\n        restrict: 'EA',\n        controller: jfCranController,\n        controllerAs: 'jfCran',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_cran.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_cran.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by matang on 09/11/2017.\n */\n\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfCondaController {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.conda;\n        this.gridDependenciesOptions = {};\n\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.condaData = {};\n\n    }\n\n    $onInit() {\n\n        this._getCondaData();\n        this._registerEvents();\n    }\n\n\n    _getCondaData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"conda\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.condaData = data.condaInfo;\n            this._createDependenciesGrid();\n        });\n    }\n\n\n    _createDependenciesGrid() {\n        if (this.condaData.depends) {\n            this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.condaData.depends)\n        }\n    }\n\n\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: 'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }]\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getCondaData();\n        });\n    }\n}\nexport function jfConda() {\n    return {\n        restrict: 'EA',\n        controller: jfCondaController,\n        controllerAs: 'jfConda',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_conda.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_conda.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\nimport DICTIONARY from \"./../../constants/artifact_general.constant\";\n\nclass jfPuppetController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.puppet;\n        this.puppetData = {};\n        this.puppetKeywordsGridOptions = {};\n        this.puppetDependenciesGridOptions = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initPuppetInfo();\n    }\n\n    _initPuppetInfo() {\n        this._getPuppetInfoData();\n        this._registerEvents();\n    }\n\n    _getPuppetInfoData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"puppet\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.puppetData = data;\n                    this._createGrids();\n                })\n    }\n\n    _createGrids() {\n        if (this.puppetData.puppetKeywords) {\n            if (!Object.keys(this.puppetKeywordsGridOptions).length) {\n                this.puppetKeywordsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setRowTemplate('default')\n                        .setColumns(this._getKeywordsColumns())\n                        .setGridData(this.puppetData.puppetKeywords);\n            } else {\n                this.puppetKeywordsGridOptions.setGridData(this.puppetData.puppetKeywords)\n            }\n        }\n        if (this.puppetData.puppetDependencies) {\n            if (!Object.keys(this.puppetDependenciesGridOptions).length) {\n                this.puppetDependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setRowTemplate('default')\n                        .setColumns(this._getDependenciesColumns())\n                        .setGridData(this.puppetData.puppetDependencies);\n            } else {\n                this.puppetDependenciesGridOptions.setGridData(this.puppetData.puppetDependencies)\n            }\n        }\n    }\n\n    _getKeywordsColumns() {\n        return [\n            {\n                name: 'name',\n                displayName: 'Name',\n                field: 'name'\n            }]\n    }\n\n    _getDependenciesColumns() {\n        return [\n            {\n                name: 'name',\n                displayName: 'Name',\n                field: 'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }]\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getPuppetInfoData();\n            }\n        });\n    }\n}\n\nexport function jfPuppet() {\n    return {\n        restrict: 'EA',\n        controller: jfPuppetController,\n        controllerAs: 'jfPuppet',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_puppet.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_puppet.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfBowerController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.bower;\n        this.gridDependenciesOptions = {};\n        this.bowerData = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initBower();\n    }\n\n    _initBower() {\n        this._registerEvents();\n        this.getBowerData();\n    }\n\n    getBowerData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"bower\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.bowerData = data;\n                    this._createGrid();\n                });\n    }\n\n    _createGrid() {\n        if (this.bowerData.bowerDependencies) {\n            if (!Object.keys(this.gridDependenciesOptions).length) {\n                this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setRowTemplate('default')\n                        .setColumns(this._getColumns())\n                        .setGridData(this.bowerData.bowerDependencies)\n            }\n            else {\n                this.gridDependenciesOptions.setGridData(this.bowerData.bowerDependencies)\n            }\n        }\n    }\n\n    _getColumns() {\n        return [{\n            name: 'Name',\n            displayName: 'Name',\n            field: 'name'\n        },\n        {\n            name: 'Version',\n            displayName: 'Version',\n            field: 'version'\n        }];\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self.getBowerData();\n            }\n        });\n    }\n\n}\nexport function jfBower() {\n    return {\n        restrict: 'EA',\n        controller: jfBowerController,\n        controllerAs: 'jfBower',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_bower.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_bower.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfDockerController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.docker;\n        this.dockerData = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initDocker();\n    }\n\n    _initDocker() {\n        this._registerEvents();\n        this.getDockerData();\n    }\n\n    gotoPath(key) {\n        var repoKey = this.currentNode.data.repoKey;\n        var pathField = key === 'imageId' ? 'imageIdPath' : (key === 'parent' ? 'parentIdPath' : undefined);\n        if (pathField) {\n            this.JFrogEventBus.dispatch(EVENTS.TREE_NODE_OPEN,\n                                              repoKey + '/' + this.dockerData.dockerInfo[pathField]);\n        }\n    }\n\n    getDockerData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"docker\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path + '/json.json'\n        }).$promise.then((data) => {\n            this.dockerData = data;\n        });\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self.getDockerData();\n            }\n        });\n    }\n\n\n\n}\nexport function jfDocker() {\n    return {\n        restrict: 'EA',\n        controller: jfDockerController,\n        controllerAs: 'jfDocker',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_docker.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_docker.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfDockerAncestryController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, $q) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.dockerAncestry;\n        this.dockerAncestryData = {};\n        this.$scope = $scope;\n        this.$q = $q;\n    }\n\n    $onInit() {\n        this._initDockerAncestry();\n    }\n\n    _initDockerAncestry() {\n        this._registerEvents();\n        this.getDockerAncestryData();\n    }\n\n    getDockerAncestryData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this._findAncestryJsonNode()\n            .then((node) => {\n                return this.artifactViewsDao.fetch({\n                    \"view\": \"dockerancestry\",\n                    \"repoKey\": node.repoKey,\n                    \"path\": node.path\n                }).$promise;\n            })\n            .then((data) => {\n                this.dockerAncestryData = this._linkedListToArray(data.dockerLinkedImage);\n            });\n    }\n\n\n    _findAncestryJsonNode() {\n        return this.currentNode.data.getChildren()\n        .then((data) => {\n            for (var i=0; i<data.length;i++) {\n                if (data[i].text === 'ancestry.json') {\n                    return data[i];\n                }\n            }\n            return this.$q.reject();\n        });\n    }\n\n    gotoPath(index) {\n        var repoKey = this.currentNode.data.repoKey;\n        var fullpath = repoKey + '/' + this.dockerAncestryData[index].path;\n\n        this.JFrogEventBus.dispatch(EVENTS.TREE_NODE_OPEN, fullpath);\n    }\n\n    _linkedListToArray(linkedData) {\n        var arr = [];\n        var curr = linkedData;\n        var indent = 1;\n        while (curr) {\n            var rec = {id: curr.id,\n                       size: curr.size,\n                       path: curr.path,\n                       indent: '|' + '__'.repeat(indent)};\n            arr.push(rec);\n            curr = curr.child;\n            indent++;\n        }\n        return  arr;\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self.getDockerAncestryData();\n            }\n        });\n    }\n\n}\nexport function jfDockerAncestry() {\n    return {\n        restrict: 'EA',\n        controller: jfDockerAncestryController,\n        controllerAs: 'jfDockerAncestry',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_docker_ancestry.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_docker_ancestry.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfDockerV2Controller {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory, JFrogTableViewOptions) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.dockerV2;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.dockerV2Data = {};\n        this.labelGridOptions = {};\n        this.JFrogTableViewOptions = JFrogTableViewOptions;\n    }\n\n    $onInit() {\n        this._getDockerV2Data();\n        this._registerEvents();\n    }\n\n    _getDockerV2Data() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"dockerv2\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.dockerV2Data = data;\n            this._createGrid();\n            if (this.layersController)\n                this.layersController.refreshView();\n        });\n    }\n\n    _createGrid() {\n        if (this.dockerV2Data.tagInfo.labels) {\n            if(!this.tableViewOptions) {\n                this.tableViewOptions = new this.JFrogTableViewOptions(this.$scope)\n                        .setColumns(this._getColumns())\n                        .setRowsPerPage(5)\n                        .setEmptyTableText('No Labels')\n                        .setObjectName('Label');\n                this.tableViewOptions.setData(this.dockerV2Data.tagInfo.labels);\n            } else {\n                this.tableViewOptions.setData(this.dockerV2Data.tagInfo.labels);\n            }\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                field: 'key',\n                header: 'Key',\n                width: '35%'\n            },\n            {\n                field: 'value',\n                header: 'Value',\n                width: '35%'\n            }]\n    }\n\n    isNotEmptyValue(value) {\n        return value && (!_.isArray(value) || value.length > 0);\n    }\n\n    formatValue(value) {\n        if (_.isArray(value)) {\n            return value.join(', ');\n        }\n        else return value;\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getDockerV2Data();\n        });\n    }\n\n    scrollToLabels() {\n        document.getElementById(\"labels\").scrollIntoView();\n    }\n}\n\nexport function jfDockerV2() {\n    return {\n        restrict: 'EA',\n        controller: jfDockerV2Controller,\n        controllerAs: 'jfDockerV2',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_docker_v2.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_docker_v2.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfRubyGemsController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.rubyGems;\n        this.gemsRubyGridOptions = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initRubyGems();\n    }\n\n    getRepoPath() {\n        return this.currentNode.data.repoKey + \"/\" + this.currentNode.data.path;\n    }\n\n    _initRubyGems() {\n        this._createGrid();\n        this._registerEvents();\n        this._getRubyGemsData();\n    }\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field:'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field:'version'\n            },\n            {\n                name: 'Type',\n                displayName: 'Type',\n                field:'type'\n            }\n        ]\n    }\n\n    _getRubyGemsData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"gems\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    //console.log(data);\n                    this.gemsRubyData = data;\n                    this.gemsRubyGridOptions.setGridData(this.gemsRubyData.gemsDependencies);\n                })\n    }\n\n    _createGrid() {\n        if (!this.gridFrameworkAssembliesOptions || !Object.keys(this.gridFrameworkAssembliesOptions).length) {\n            this.gemsRubyGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setColumns(this._getColumns())\n                    .setRowTemplate('default');\n        }\n        else{\n            this._getRubyGemsData();\n        }\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getRubyGemsData();\n            }\n        });\n    }\n}\nexport function jfRubyGems() {\n    return {\n        restrict: 'EA',\n        controller: jfRubyGemsController,\n        controllerAs: 'jfRubyGems',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_ruby_gems.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_ruby_gems.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfNpmInfoController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.npm;\n        this.npmData = {};\n        this.npmDependenciesGridOptions = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initNpmInfo();\n    }\n\n    _initNpmInfo() {\n        this._getNpmInfoData();\n        this._registerEvents();\n    }\n\n    _getNpmInfoData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"npm\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n            .then((data) => {\n                this.npmData = data;\n                this._createGrid();\n            })\n    }\n\n    _createGrid() {\n        if (this.npmData.npmDependencies) {\n            if (!Object.keys(this.npmDependenciesGridOptions).length) {\n                this.npmDependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.npmData.npmDependencies);\n            } else {\n                this.npmDependenciesGridOptions.setGridData(this.npmData.npmDependencies)\n            }\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'name',\n                displayName: 'Name',\n                field: 'name'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }]\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getNpmInfoData();\n            }\n        });\n    }\n}\n\nexport function jfNpmInfo() {\n    return {\n        restrict: 'EA',\n        controller: jfNpmInfoController,\n        controllerAs: 'jfNpmInfo',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_npm_info.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_npm_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfRpmController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.rpm;\n        this.gridProvideOptions = {};\n        this.gridRequireOptions = {};\n        this.gridObsoleteOptions = {};\n        this.gridConflictOptions = {};\n        this.rpmData = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initRpm();\n    }\n\n    _initRpm() {\n        this._registerEvents();\n        this.getRpmData();\n    }\n\n    getRpmData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"rpm\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.rpmData = data;\n                    this._createGrid();\n                });\n    }\n\n    _createGrid() {\n        if (this.rpmData.provide) {\n            if (!Object.keys(this.gridProvideOptions).length) {\n                this.gridProvideOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setRowTemplate('default')\n                        .setColumns(this._getColumns('provide'))\n                        .setGridData(this.rpmData.provide)\n            }\n            else {\n                this.gridProvideOptions.setGridData(this.rpmData.provide)\n            }\n        }\n        if (this.rpmData.require) {\n            if (!Object.keys(this.gridRequireOptions).length) {\n                this.gridRequireOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setColumns(this._getColumns())\n                        .setRowTemplate('default')\n                        .setGridData(this.rpmData.require)\n            }\n            else {\n                this.gridRequireOptions.setGridData(this.rpmData.require);\n            }\n        }\n        if (this.rpmData.obsolete) {\n            if (!Object.keys(this.gridObsoleteOptions).length) {\n                this.gridObsoleteOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setColumns(this._getColumns())\n                        .setRowTemplate('default')\n                        .setGridData(this.rpmData.obsolete)\n            }\n            else {\n                this.gridObsoleteOptions.setGridData(this.rpmData.obsolete);\n            }\n        }\n\n        if (this.rpmData.conflict) {\n            if (!Object.keys(this.gridConflictOptions).length) {\n                this.gridConflictOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                        .setColumns(this._getColumns())\n                        .setRowTemplate('default')\n                        .setGridData(this.rpmData.conflict)\n            }\n            else {\n                this.gridConflictOptions.setGridData(this.rpmData.conflict);\n            }\n        }\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: 'Name',\n                displayName: 'Name',\n                field: 'name',\n                width: '25%'\n            },\n            {\n                name: 'Flags',\n                displayName: 'Flags',\n                field: 'flags',\n                width: '15%'\n            },\n            {\n                name: 'Epoch',\n                displayName: 'Epoch',\n                field: 'epoch',\n                width: '15%'\n            },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version',\n                width: '15%'\n            }, {\n                name: 'Release',\n                displayName: 'Release',\n                field: 'release',\n                width: '15%'\n            },\n            {\n                name: 'Pre',\n                displayName: 'Pre',\n                field: 'pre',\n                width: '15%'\n            }]\n    }\n\n    _registerEvents() {\n        let self = this;\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self.getRpmData();\n            }\n        });\n    }\n\n}\nexport function jfRpm() {\n    return {\n        restrict: 'EA',\n        controller: jfRpmController,\n        controllerAs: 'jfRpm',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_rpm_info.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_rpm_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfCocoapodsController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.cocoapods;\n        this.gridDependenciesOptions = {};\n        this.cocoapodsData = {};\n        this.$scope = $scope;\n    }\n\n    $onInit() {\n        this._initCocoapods();\n    }\n\n    _initCocoapods() {\n        this._registerEvents();\n        this.getCocoapodsData();\n    }\n\n    getCocoapodsData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"cocoapods\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n            .then((data) => {\n                this.cocoapodsData = data;\n                this._createGrid();\n            });\n    }\n\n    _createGrid() {\n        if (this.cocoapodsData.dependencies) {\n            if (!Object.keys(this.gridDependenciesOptions).length) {\n                this.gridDependenciesOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns())\n                    .setGridData(this.cocoapodsData.dependencies)\n            }\n            else {\n                this.gridDependenciesOptions.setGridData(this.cocoapodsData.dependencies)\n            }\n        }\n    }\n\n    _getColumns() {\n        return [{\n            name: 'Name',\n            displayName: 'Name',\n            field: 'name'\n        },\n            {\n                name: 'Version',\n                displayName: 'Version',\n                field: 'version'\n            }];\n    }\n\n    _registerEvents() {\n\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                this.getCocoapodsData();\n            }\n        });\n    }\n\n}\nexport function jfCocoapods() {\n    return {\n        restrict: 'EA',\n        controller: jfCocoapodsController,\n        controllerAs: 'jfCocoapods',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_cocoapods.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_cocoapods.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfConanController {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.conan;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.conanData = {};\n        this.labelGridOptions = {};\n\n    }\n\n    $onInit() {\n        this._getConanData();\n        this._registerEvents();\n    }\n\n    _getConanData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"conan\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.conanData = data;\n            if (this.layersController)\n                this.layersController.refreshView();\n        });\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getConanData();\n        });\n    }\n}\n\nexport function jfConan() {\n    return {\n        restrict: 'EA',\n        controller: jfConanController,\n        controllerAs: 'jfConan',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_conan.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_conan.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfConanPackageController {\n    constructor($scope, $element, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.DICTIONARY = DICTIONARY.conan;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.conanPackageData = {};\n        this.labelGridOptions = {};\n\n    }\n\n    $onInit() {\n        this._getConanPackageData();\n        this._registerEvents();\n    }\n\n    _getConanPackageData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"conan_package\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise.then((data) => {\n            this.conanPackageData = data;\n            if (this.layersController)\n                this.layersController.refreshView();\n        });\n    }\n\n    _registerEvents() {\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            this.currentNode = node;\n            this._getConanPackageData();\n        });\n    }\n\n    isNonEmptyObject(val) {\n        return val && Object.keys(val).length > 0;\n    }\n\n    hasSettings() {\n        if (this.isNonEmptyObject(this.conanPackageData.settings)) {\n            return true;\n        }\n        var knownSettings = this.knownSettings();\n        for (var i in knownSettings) {\n            if (this.conanPackageData[knownSettings[i]]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    knownSettings() {\n        return ['os', 'arch', 'buildType', 'compiler', 'compilerVersion', 'compilerRuntime'];\n    }\n}\n\nexport function jfConanPackage() {\n    return {\n        restrict: 'EA',\n        controller: jfConanPackageController,\n        controllerAs: 'jfConanPackage',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_conan_package.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_conan_package.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../../constants/artifact_tooltip.constant';\n\nclass jfStashInfoController {\n    constructor($state, BrowseFilesDao, StashResultsDao, JFrogEventBus) {\n        this.$state = $state;\n        this.browseFilesDao = BrowseFilesDao.getInstance();\n        this.stashResultsDao = StashResultsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n        this.TOOLTIP = TOOLTIP.admin.import_export.stash;\n\n        this.exportOptions = {};\n\n        this.exportFileBrowserOptions = {\n            canSelectFiles: false,\n            selectionLabel: 'Directory To Export',\n            pathLabel: 'Path to export',\n            confirmButtonLabel: 'Select',\n            showSelectedItem: true,\n            enableSelectedItem: true\n        };\n\n\n    }\n\n    updateExportFolderPath(directory) {\n        this.exportOptions.path = directory;\n    }\n\n    clearValidations() {\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION, true);\n    }\n\n    export() {\n        let payload = {\n            path: this.exportOptions.path,\n            excludeMetadata: this.exportOptions.excludeMetadata || false,\n            m2: this.exportOptions.createM2CompatibleExport || false,\n            createArchive: this.exportOptions.createArchive || false,\n            verbose: this.exportOptions.verbose || false\n        };\n\n        this.stashResultsDao.export({name: 'stash'},payload).$promise.then((response)=>{\n//            console.log(response);\n        });\n    }\n\n    gotoSearch() {\n        this.$state.go('search',{searchType: 'quick'});\n    }\n\n}\n\nexport function jfStashInfo() {\n    return {\n        restrict: 'EA',\n        scope: {\n            currentNode: '=',\n            allowExport: '='\n        },\n        controller: jfStashInfoController,\n        controllerAs: 'jfStashInfo',\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_stash_info.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_stash_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfDebianInfoController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.debian;\n        this.debianData = {};\n        this.debianDependenciesGridOptions = {};\n        this.$scope = $scope;\n\n    }\n\n    $onInit() {\n        this.initDebianInfo();\n    }\n\n\n    initDebianInfo() {\n        this._registerEvents();\n        this._getDebianInfoData();\n    }\n\n    _getDebianInfoData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"debian\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.debianData = data;\n                    this._createGrid();\n                });\n    }\n\n    _createGrid() {\n\n\n        this.formattedDependencies = [];\n        _.forEach(this.debianData.debianDependencies, (item) => {\n            this.formattedDependencies.push({\n                name: item\n            })\n        });\n\n        if (this.debianData.debianDependencies) {\n            this.debianDependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns('dependencies'))\n                    .setGridData(this.formattedDependencies)\n        }\n    }\n\n    _getColumns(gridType) {\n        if (gridType === 'dependencies') {\n            return [\n                {\n                    name: 'Name',\n                    displayName: 'Name',\n                    field: 'name'\n                }]\n        }\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getDebianInfoData();\n            }\n        });\n    }\n}\n\nexport function jfDebianInfo() {\n    return {\n        restrict: 'EA',\n        controller: jfDebianInfoController,\n        controllerAs: 'jfDebianInfo',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_debian_info.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_debian_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../../constants/artifacts_events.constants';\nimport DICTIONARY from './../../constants/artifact_general.constant';\n\nclass jfOpkgInfoController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.opkg;\n        this.opkgData = {};\n        this.opkgDependenciesGridOptions = {};\n        this.$scope = $scope;\n\n    }\n\n    $onInit() {\n        this.initOpkgInfo();\n    }\n\n    initOpkgInfo() {\n        this._registerEvents();\n        this._getOpkgInfoData();\n    }\n\n    _getOpkgInfoData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"opkg\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n                .then((data) => {\n                    this.opkgData = data;\n                    this._createGrid();\n                });\n    }\n\n    _createGrid() {\n\n\n        this.formattedDependencies = [];\n        _.forEach(this.opkgData.debianDependencies, (item) => {\n            this.formattedDependencies.push({\n                name: item\n            })\n        });\n\n        if (this.opkgData.debianDependencies) {\n            this.opkgDependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                    .setRowTemplate('default')\n                    .setColumns(this._getColumns('dependencies'))\n                    .setGridData(this.formattedDependencies)\n        }\n    }\n\n    _getColumns(gridType) {\n        if (gridType === 'dependencies') {\n            return [\n                {\n                    name: 'Name',\n                    displayName: 'Name',\n                    field: 'name'\n                }]\n        }\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getOpkgInfoData();\n            }\n        });\n    }\n}\n\nexport function jfOpkgInfo() {\n    return {\n        restrict: 'EA',\n        controller: jfOpkgInfoController,\n        controllerAs: 'jfOpkgInfo',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_opkg_info.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_opkg_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../../../constants/artifacts_events.constants\";\nimport DICTIONARY from \"./../../constants/artifact_general.constant\";\n\nclass jfChefInfoController {\n    constructor($scope, ArtifactViewsDao, JFrogEventBus, JFrogGridFactory) {\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactViewsDao = ArtifactViewsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.DICTIONARY = DICTIONARY.opkg;\n        this.chefData = {};\n        this.chefDependenciesGridOptions = {};\n        this.chefPlatformsGridOptions = {};\n        this.$scope = $scope;\n\n    }\n\n    $onInit() {\n        this._createGrids();\n        this.initChefInfo();\n    }\n\n    initChefInfo() {\n        this._registerEvents();\n        this._getChefInfoData();\n    }\n\n    _getChefInfoData() {\n        //Temp fix for preventing fetching data for non-file nodes (occurred when pressing \"Artifacts\" on sidebar)\n        if (!this.currentNode.data.path) {\n            return;\n        }\n\n        this.artifactViewsDao.fetch({\n            \"view\": \"chef\",\n            \"repoKey\": this.currentNode.data.repoKey,\n            \"path\": this.currentNode.data.path\n        }).$promise\n        .then((data) => {\n            this.chefData = data.chefCookbookInfo;\n            this._setGridsData();\n        });\n    }\n\n    _setGridsData() {\n        this.formattedDependencies = [];\n        _.forEach(this.chefData.dependencies, (value, key) => {\n            this.formattedDependencies.push({\n                name: key,\n                version: value\n            })\n        });\n\n        this.formattedPlatforms = [];\n        _.forEach(this.chefData.platforms, (value, key) => {\n            this.formattedPlatforms.push({\n                name: key,\n                version: value\n            })\n        });\n        this.chefDependenciesGridOptions.setGridData(this.formattedDependencies);\n        this.chefPlatformsGridOptions.setGridData(this.formattedPlatforms);\n    }\n\n    _createGrids() {\n        this.chefDependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setRowTemplate('default')\n                .setColumns(this._getColumns('dependencies'))\n\n        this.chefPlatformsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setRowTemplate('default')\n                .setColumns(this._getColumns('platforms'))\n    }\n\n    _getColumns(gridType) {\n        if (gridType === 'dependencies') {\n            return [\n                {\n                    name: 'Name',\n                    displayName: 'Name',\n                    field: 'name'\n                },\n                {\n                    name: 'Version',\n                    displayName: 'Version',\n                    field: 'version'\n                }]\n        }\n        if (gridType === 'platforms') {\n            return [\n                {\n                    name: 'Name',\n                    displayName: 'Name',\n                    field: 'name'\n                },\n                {\n                    name: 'Version',\n                    displayName: 'Version',\n                    field: 'version'\n                }]\n        }\n    }\n\n    _registerEvents() {\n        let self = this;\n        this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.TAB_NODE_CHANGED, (node) => {\n            if (this.currentNode != node) {\n                this.currentNode = node;\n                self._getChefInfoData();\n            }\n        });\n    }\n}\n\nexport function jfChefInfo() {\n    return {\n        restrict: 'EA',\n        controller: jfChefInfoController,\n        controllerAs: 'jfChefInfo',\n        scope: {\n            currentNode: '='\n        },\n        bindToController: true,\n        templateUrl: 'states/artifacts/jf_artifact_info/info_tabs/jf_chef_info.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/artifacts/jf_artifact_info/info_tabs/jf_chef_info.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {AllBuildsController} from './all_builds.controller';\nimport {BuildsPageController} from './builds_page/builds_page.controller';\nimport buildTabs from './build_tabs/build_tabs.module';\n\n\nfunction buildsConfig($stateProvider) {\n    $stateProvider\n            .state('builds', {\n                url: '/builds',\n                parent: 'app-layout',\n                abstract: true,\n                templateUrl: 'states/builds/builds.html'\n            })\n            .state('builds.all', {\n                url: '/',\n                templateUrl: 'states/builds/all_builds.html',\n                controller: 'AllBuildsController as AllBuilds'\n            })\n            .state('builds.build_page', {\n                url: '/:buildName/:buildNumber/:startTime/:tab/:moduleID',\n\n                params: {\n                    startTime: {\n                        value: null,\n                        squash: true\n                    },\n                    tab: {\n                        value: 'published',\n                        squash: true\n                    },\n                    moduleID: {\n                        value: null,\n                        squash: true\n                    }\n                },\n                templateUrl: 'states/builds/builds_page/builds_page.html',\n                controller: 'BuildsPageController as BuildsPage'\n            })\n}\n\nexport default angular.module('builds', ['buildTabs'])\n        .config(buildsConfig)\n        .controller('AllBuildsController', AllBuildsController)\n        .controller('BuildsPageController', BuildsPageController)\n\n\n\n// WEBPACK FOOTER //\n// ./states/builds/builds.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport CONFIG_MESSAGES from '../../constants/configuration_messages.constants';\n\nexport class AllBuildsController {\n    constructor($scope, $q, $timeout, JFrogGridFactory, BuildsDao, JFrogEventBus, JFrogModal,\n                JFrogNotifications, JFrogTableViewOptions, User, GoogleAnalytics) {\n\n        this.$scope = $scope;\n        // this.uiGridConstants = uiGridConstants;\n        this.JFrogTableViewOptions = JFrogTableViewOptions;\n        this.user = User.getCurrent();\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.allBuildsGridOptions = {};\n        this.buildsDao = BuildsDao;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.modal = JFrogModal;\n        this._createGrid();\n        this._getBuildsData();\n        this.firstFetch = true;\n        this.CONFIG_MESSAGES = CONFIG_MESSAGES.builds;\n        this.noBuildsDataMessage = this.CONFIG_MESSAGES.noBuildsDataMessage;\n        this.allBuildsGridOptions = {};\n    }\n\n    _getBuildsData(dontTrack) {\n        this.buildsDao.get().$promise.then((data) => {\n            let numOfBuilds = data && data.pagingData ? data.pagingData.length : 0;\n            if (!dontTrack) this.GoogleAnalytics.trackEvent('Builds' , 'Number of builds' , numOfBuilds , numOfBuilds);\n            this.buildsData = data.pagingData || [];\n\n            this.tableViewOptions.setData(this.buildsData);\n        });\n    }\n\n    _createGrid() {\n        this.tableViewOptions = new this.JFrogTableViewOptions(this.$scope);\n        this.tableViewOptions.setColumns(this._getColumns())\n                .setRowsPerPage(20)\n                .setSelection(this.tableViewOptions.MULTI_SELECTION)\n                .setActions(this._getActions())\n                .setBatchActions(this.getBatchActions())\n                .setEmptyTableText(this.noBuildsDataMessage)\n                .sortBy('time')\n                .reverseSortingDir();\n\n        this.tableViewOptions.isRowSelectable = (row) => {\n            return row.entity.canDelete;\n        }\n    }\n\n    _getColumns() {\n        let nameCellTemplate = '<div class=\"ui-grid-cell-contents\"><a href class=\"jf-link\" ui-sref=\"builds.build_page({buildName:row.entity.buildName,buildNumber:row.entity.buildNumber,startTime:row.entity.time})\">{{row.entity.buildName}}</a></div>';\n        let numberCellTemplate =    `<div class=\"ui-grid-cell-contents\">\n                                       <a href=\"\" class=\"jf-link\" id=\"last-build-id\" ui-sref=\"builds.build_page({buildName:row.entity.buildName,buildNumber:row.entity.buildNumber,startTime:row.entity.time})\" >{{row.entity.buildNumber}}</a>\n                                    </div>`;\n\n        let timeCellTemplate = '<div class=\"ui-grid-cell-contents\" id=\"last-build-time\">{{row.entity.time | date: \\'d MMMM, yyyy - HH:mm:ss Z\\'}}</div>';\n\n        return [\n            {\n                header: \"Build Name\",\n                field: \"buildName\",\n                cellTemplate: nameCellTemplate,\n                filterable: true\n            },\n            {\n                header: \"Last Build ID\",\n                field: \"buildNumber\",\n                cellTemplate: numberCellTemplate,\n                width: '10%'\n            },\n            {\n                header: \"Last Build Time\",\n                cellTemplate: timeCellTemplate,\n                field: \"time\",\n                width: '15%'\n            }\n        ]\n    }\n\n\n    getBatchActions() {\n        return [\n            {\n                icon: 'clear',\n                name: 'Delete',\n                callback: (selected) => this.bulkDelete(selected)\n            }\n        ]\n    }\n\n    bulkDelete(selected) {\n\n        let confirmMessage = `Are you sure you wish to delete ${selected.length}`;\n            confirmMessage += selected.length > 1 ? ' build projects?' : ' build project?';\n\n        this.modal.confirm(confirmMessage)\n        .then(() => {\n            let buildsToDelete = selected.map(build => {\n                return {buildName: build.buildName}\n            });\n            this._deleteBuilds({buildsCoordinates: buildsToDelete});\n        });\n    }\n\n\n    deleteBuild(row) {\n        this.modal.confirm(\"Are you sure you wish to delete all the builds '\" + row.buildName + \"'?\")\n            .then(() => {\n                this._deleteBuilds({buildsCoordinates:[{buildName:row.buildName}]});\n            })\n    }\n\n    _deleteBuilds(json) {\n        this.buildsDao.deleteAll(json).$promise.then(() => {\n            this._getBuildsData(true);\n            this.tableViewOptions.clearSelection();\n        });\n    }\n\n    _getActions() {\n        return [\n            {\n                icon: 'icon icon-clear',\n                tooltip: 'Delete',\n                callback: row => this.deleteBuild(row),\n                visibleWhen: (row) => row.canDelete\n            }\n        ];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/builds/all_builds.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport DICTIONARY from \"../constants/builds.constants\";\nimport MESSAGES from '../../../constants/artifacts_messages.constants';\n\nexport class BuildsPageController {\n    constructor($scope, $stateParams, BuildsDao, User, ArtifactoryFeatures, $state, $filter, JFrogEventBus,\n            DistributionDao, JFrogModal) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$filter = $filter;\n        this.distributionDao = DistributionDao;\n        this.modal = JFrogModal;\n\n        this.buildsDao = BuildsDao;\n        this.DICTIONARY = DICTIONARY.tabs;\n\n        this.buildTitle = this.$stateParams.buildName;\n\n        this.user = User.getCurrent();\n        this.features = ArtifactoryFeatures;\n        this.userCanDistribute = false;\n\n        this.tabs = [\n            {name: 'published'},\n            {name: 'environment'},\n            {name: 'issues'},\n            {name: 'licenses', feature: 'licenses'},\n            {name: 'diff', feature: 'diff'},\n            {name: 'history'},\n            {name: 'json'},\n            {name: 'effectivePermission'}\n        ];\n        this._getBuildsData();\n\n    }\n\n    deleteBuildVersion(build) {\n\n        let json = {\n            buildsCoordinates:[\n                {\n                    buildName: this.$stateParams.buildName,\n                    buildNumber: build.buildNumber,\n                    date: build.time\n                }\n            ]\n        };\n\n\n        this.modal.confirm(`Are you sure you wish to delete ${build.buildNumber} version of ${this.$stateParams.buildName} build?`)\n                    .then(() => {\n                        this.buildsDao.delete(json).$promise.then(() => {\n                            this._getBuildsData();\n                        });\n                    });\n    }\n\n    _isTabDisabled(tab) {\n        if (tab.name === 'effectivePermission' && !this.canManage && !this.user.isAdmin()) return true;\n        return !(tab.name === 'published' || this.buildFullView);\n    }\n\n    // Get list of builds\n    _getBuildsData() {\n        this.buildsDao.getData({\n            action: 'history',\n            name: this.$stateParams.buildName\n        })\n        .$promise.then((data) => {\n            this.builds = _.map(_.sortByOrder(data.pagingData,['time'],false));\n            this.ciUrl = _.find(this.builds, {buildNumber: this.$stateParams.buildNumber}).ciUrl;\n            this._getBuildData();\n        });\n    }\n\n    _getBuildData() {\n        this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action:'buildInfo'\n        }).$promise.then((data) => {\n            this.buildFullView = data.buildFullView;\n            this.userCanDistribute = data.userCanDistribute;\n            this.canDelete = data.canDelete;\n            this.canManage = data.canManage;\n            this.$stateParams.startTime = data.time;\n            this.buildData = data;\n            this.summaryData = this.getSummaryColumns();\n\n            this.tabs.forEach((tab) => {\n                tab.isDisabled = this._isTabDisabled(tab);\n            });\n        });\n    }\n\n    getSummaryColumns() {\n        let agentTemplate = (this.ciUrl) ? `<a class=\"jf-link\" ng-href=\"{{BuildsPage.buildData.url}}\" target=\"_blank\">{{BuildsPage.buildData.agent}}</a> <a ng-href=\"{{BuildsPage.buildData.url}}\" target=\"_blank\"><i class=\"icon-linked\" jf-tooltip='<a href=\"{{BuildsPage.buildData.url}}\">{{BuildsPage.buildData.url}}</a>'></i></a>` : `{{BuildsPage.buildData.agent}}`;\n        return [\n            {\n                label: 'Agent',\n                template: agentTemplate,\n                isActive: true\n            },\n            {\n                label: 'Build Agent',\n                template: '{{BuildsPage.buildData.buildAgent}}',\n                isActive: true\n            },\n            {\n                label: 'Started',\n                template: '<div class=\"text-truncate\" jf-tooltip-on-overflow>{{BuildsPage.buildData.lastBuildTime | date:\"d MMMM, yyyy\"}} {{BuildsPage.buildData.lastBuildTime | date:\"HH:mm:ss\"}}</div>',\n                isActive: true\n            },\n            {\n                label: 'Duration',\n                template: `{{BuildsPage.buildData.duration || '-'}}`,\n                isActive: true\n            },\n            {\n                label: 'Principal',\n                template: `{{BuildsPage.buildData.principal || '-'}}`,\n                isActive: true\n            },\n            {\n                label: 'Artifactory Principal',\n                template: `{{BuildsPage.buildData.artifactoryPrincipal || '-'}}`,\n                isActive: true,\n                width: '1.2fr'\n            }\n        ]\n    }\n\n    goToBuildNumber(build) {\n        this.ciUrl = build.ciUrl;\n        _.extend(this.$stateParams, {buildNumber: build.buildNumber,startTime: build.time, tab: this.$state.params.tab, moduleID: null});\n        this.$state.go('.', this.$stateParams, { location: true, inherit: true, relative: this.$state.$current, notify: false, reload: true })\n                .then(() => {\n                    this._getBuildData();\n                    this.JFrogEventBus.dispatch(this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH)\n                })\n    }\n\n    deleteBuildId(e, buildId) {\n        e.stopPropagation();\n        let buildName = this.$stateParams.buildName;\n        let buildNumber = buildId;\n        let date = this.$stateParams.startTime;\n        let index = _.findIndex(this.builds, (build) => build.buildNumber === buildNumber);\n        let isDeleteingActiveBuildNumber = buildNumber === this.$stateParams.buildNumber;\n\n        let json = {\n            buildsCoordinates: [{\n                buildName,\n                buildNumber,\n                date\n            }]\n        };\n\n        this.modal.confirm(`Are you sure you want to delete build number ${buildNumber} in ${buildName}?`)\n                .then(() => {\n                    this.buildsDao.delete(json).$promise.then(() => {\n                        if (index === 0 && this.builds.length === 1) {\n                            this.backToBuilds();\n                        } else if (isDeleteingActiveBuildNumber) {\n                            this.builds.splice(index, 1);\n                            if (index === 0) {\n                                this.goToBuildNumber(this.builds[0]);\n                            } else {\n                                this.goToBuildNumber(this.builds[index - 1]);\n                            }\n                        } else {\n                            this.builds.splice(index, 1);\n                        }\n                    })\n                })\n    }\n\n    distribute() {\n        this.distributionDao.getAvailableDistributionRepos({}).$promise.then((data)=>{\n            let modalInstance;\n            this.distributeModalScope = this.$scope.$new();\n\n            this.distributeModalScope.title = \"Distribute \" + this.$stateParams.buildName + \" #\" + this.$stateParams.buildNumber;\n            this.distributeModalScope.distributionRepositoriesOptions = _.map(data.data.availableDistributionRepos, 'repoKey');\n\n            this.distributeModalScope.data = {};\n\n            if (!this.distributeModalScope.distributionRepositoriesOptions.length) {\n                this.distributeModalScope.errorMessage = MESSAGES.actions.distribute.noRepos.nonAdmin.message;\n                this.distributeModalScope.messageType = MESSAGES.actions.distribute.noRepos.nonAdmin.messageType;\n            }\n\n            this.distributeModalScope.data.async = true;\n            this.distributeModalScope.data.publish = true;\n            this.distributeModalScope.data.publish = true;\n            this.distributeModalScope.data.overrideExistingFiles = false;\n            this.distributeModalScope.data.selectedRepo = null;\n            this.distributeModalScope.distribute = () => {\n                this._resetChanges();\n                this.distributionDao.distributeBuild({\n                    targetRepo: this.distributeModalScope.data.selectedRepo,\n                    async: this.distributeModalScope.data.async,\n                    overrideExistingFiles: this.distributeModalScope.data.overrideExistingFiles,\n                    date: this.$stateParams.startTime\n                },{\n                    buildName: this.$stateParams.buildName,\n                    buildNumber: this.$stateParams.buildNumber,\n                    date: this.$stateParams.startTime\n                }).$promise.then((res)=>{\n                    // Success\n                    if (this.distributeModalScope.data.async) {\n                        modalInstance.close();\n                    } else {\n                        this._runRulesTest(res);\n                    }\n                });\n            };\n\n            // DRY RUN\n            this.distributeModalScope.dryRun = () => {\n                this._resetChanges();\n                this.distributionDao.distributeBuild({\n                            targetRepo: this.distributeModalScope.data.selectedRepo,\n                            async: this.distributeModalScope.data.async,\n                            publish: this.distributeModalScope.data.publish,\n                            overrideExistingFiles: this.distributeModalScope.data.overrideExistingFiles,\n                            dryRun: true\n                        }, {\n                            buildName: this.$stateParams.buildName,\n                            buildNumber: this.$stateParams.buildNumber,\n                            date: this.$stateParams.startTime\n                        }\n                ).$promise.then((res)=>{\n                    this._runRulesTest(res);\n                });\n            };\n\n            modalInstance = this.modal.launchModal('distribute_modal', this.distributeModalScope, 650);\n        });\n    }\n\n    _runRulesTest(res) {\n        let ind = 0;\n        let result = res.data;\n        _.forEach(result, (value,key) => {\n            if (key == 'distributed') {\n                let distributed = result[key];\n\n                _.forEach(distributed, (value,key) => {\n                    distributed[key].customId = \"dis\" + ind;\n                    ind++;\n\n                    let packages = distributed[key].packages;\n\n                    _.forEach(packages, (value,key) => {\n                        packages[key].customId = \"pac\" + ind;\n                        ind++;\n\n                        let versions = packages[key].versions;\n                        _.forEach(versions, (value,key) => {\n                            versions[key].customId = \"ver\" + ind;\n                            ind++;\n                        });\n\n                    });\n                });\n            }\n        });\n        this.distributeModalScope.data.dryRunResults = result;\n\n        _.forEach(result.messagesByPath, (value) => {\n            if (value.warnings) {\n                this.distributeModalScope.data.warningExist = value.warnings.length ? true : false;\n            }\n            if (value.errors) {\n                this.distributeModalScope.data.errorsExist = value.errors.length ? true : false;\n            }\n        });\n\n        this._expandModal();\n    }\n\n    _expandModal(){\n        $('form[name=\"distributeRepo\"]')\n                .closest('.modal-dialog')\n                .animate({\n                    maxWidth:'850px'\n                },500);\n    }\n    _resetChanges() {\n        // RESET\n        this.distributeModalScope.data.dryRunResults = null;\n        this.distributeModalScope.data.toggleSuccessTitle = null;\n        this.distributeModalScope.data.toggleWarnTitle = null;\n        this.distributeModalScope.data.toggleErrorTitle = null;\n        this.distributeModalScope.data.warningExist = null;\n        this.distributeModalScope.data.errorsExist = null;\n    }\n\n\tbackToBuilds() {\n        this.$state.go('builds.all');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/builds_page/builds_page.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    tabs: {\n        'published': 'Published Modules',\n        'environment': 'Environment',\n        'issues': 'Issues',\n        'licenses':'Licenses',\n        'diff':'Diff',\n        'history':'Release History',\n        'json':'Build Info JSON',\n        'effectivePermission': 'Effective Permissions'\n    },\n    generalInfo : {\n        buildName: 'Name',\n        buildNumber: 'Number',\n        agent: 'Agent',\n        buildAgent: 'Build Agent',\n        lastBuildTime: 'Started',\n        duration: 'Duration',\n        principal: 'Principal',\n        artifactoryPrincipal: 'Artifactory Principal',\n        url: 'URL'\n    },\n    releaseHistory: {\n        repository: 'Repository',\n        comment: 'Comment',\n        ciUser: 'CI User',\n        user: 'Artifactory User',\n        timestamp: 'Timestamp'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/constants/builds.constants.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {jfPublishedModules} from \"./jf_published_modules\";\nimport {jfBuildInfoJson} from \"./jf_build_info_json\";\nimport {jfEnvironment} from \"./jf_environment\";\nimport {jfIssues} from \"./jf_issues\";\nimport {jfDiff} from \"./jf_diff\";\nimport {jfReleaseHistory} from \"./jf_release_history\";\nimport {jfLicenses} from \"./jf_licenses\";\nimport {jfEffectivePermission} from \"./jf_effective_permission\";\n\nexport default angular.module('buildTabs', [])\n        .directive({\n            'jfPublishedModules': jfPublishedModules,\n            'jfBuildInfoJson': jfBuildInfoJson,\n            'jfEnvironment': jfEnvironment,\n            'jfIssues': jfIssues,\n            'jfDiff': jfDiff,\n            'jfReleaseHistory': jfReleaseHistory,\n            'jfLicenses': jfLicenses,\n            'jfBuildEffectivePermission': jfEffectivePermission\n    });\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/build_tabs.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport DICTIONARY from \"./../constants/builds.constants\";\n\nconst defaultPagination = {\n    pageNum: 1,\n    numOfRows: 25,\n    direction: \"asc\",\n    orderBy: \"name\"\n}\n\n\nclass jfPublishedModulesController {\n    constructor($scope, $state, $stateParams, $q, BuildsDao, ArtifactBuildsDao, ArtifactActionsDao, JFrogGridFactory,\n                JFrogDownload, JFrogModal, ArtifactoryFeatures, JFrogEventBus, $timeout, uiGridConstants,\n                commonGridColumns,\n                User, ArtifactoryStorage) {\n        this.$timeout = $timeout;\n        this.$q = $q;\n        this.$stateParams = $stateParams;\n        this.$state = $state;\n        this.$scope = $scope;\n        this.uiGridConstants = uiGridConstants;\n        this.commonGridColumns = commonGridColumns;\n        this.initialModuleId = $stateParams.moduleID;\n        this.buildsDao = BuildsDao;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.artifactBuildsDao = ArtifactBuildsDao.getInstance();\n        this.download = JFrogDownload;\n        this.modal = JFrogModal;\n        this.modulesGridOptions = {};\n        this.artifactsGridOptions = {};\n        this.dependenciesGridOptions = {};\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.user = User;\n        this.modulesCount = 0;\n        this.artifactsCount = 0;\n        this.dependenciesCount = 0;\n        this.DICTIONARY = DICTIONARY.generalInfo;\n        this.selectedModule = null;\n        this.artifactoryStorage = ArtifactoryStorage;\n        this.comparableNumbers = [''];\n        this.selectedBuildNumber = '';\n        this.artifactoryFeatures = ArtifactoryFeatures;\n\n        if (this.$stateParams.startTime) {\n            this.init();\n        }\n        else {\n            this.getBuildTime().then(()=>{\n                this.init();\n            })\n        }\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this.init();\n        })\n    }\n\n    getBuildTime() {\n        let defer = this.$q.defer();\n        return this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            action:'buildInfo'\n        }).$promise.then((data) => {\n            this.$stateParams.startTime = data.time;\n            this.$state.transitionTo('.', this.$stateParams, { location: 'replace', inherit: true, relative: this.$state.$current, notify: false })\n            defer.resolve();\n        });\n        return defer.promise;\n    }\n\n    init() {\n        this._getComparableBuildNumbers();\n        this._createGrids();\n\n        if (this.$stateParams.moduleID) {\n            this.selectedModule = this.$stateParams.moduleID;\n            this.getSubData();\n        }\n        else {\n            this.selectedModule = null;\n        }\n    }\n\n    showArtifactInTree(row) {\n        let browser = this.artifactoryStorage.getItem('BROWSER') || 'tree';\n        if (browser === 'stash') browser = 'tree';\n        let path = row.repoKey + '/' + row.path;\n        this.$state.go('artifacts.browsers.path', {\n            tab: \"General\",\n            artifact: path,\n            browser: browser\n        });\n    }\n\n    downloadArtifact(row) {\n        this.download(row.downloadLink);\n    }\n\n    viewCodeArtifact(row) {\n        this.artifactActionsDao.perform(\n                {action: 'view'},\n                {\n                    repoKey: row.repoKey,\n                    path: row.path\n                })\n                .$promise.then((result) => {\n                    this.modal.launchCodeModal(row.name, result.data.fileContent,\n                            {name: row.type, json: true});\n                });\n    }\n\n    selectModule(entity) {\n        if (!this.artifactoryFeatures.isDisabled(\"publishedmodule\")) {\n            _.extend(this.$stateParams, {\n                buildName: this.$stateParams.buildName,\n                buildNumber: this.$stateParams.buildNumber,\n                startTime: this.$stateParams.startTime,\n                tab: 'published ',//this.$stateParams.tab,\n                moduleID: entity.moduleId\n            });\n            this.$state.go('.', this.$stateParams, { location: true, inherit: true, relative: this.$state.$current, notify: false, reload: true }).then(() => {\n                this.init();\n            })\n        }\n\n    }\n\n    getSubData() {\n        if (this.compare && this.selectedBuildNumber && this.selectedBuildNumber.buildNumber) {\n            this._getArtifactsDiff();\n            this._getDependenciesDiff();\n        }\n        else {\n            this._getArtifacts();\n            this._getDependencies();\n        }\n    }\n\n    onCompareChanged() {\n        if (!(this.selectedBuildNumber && this.selectedBuildNumber.buildNumber)) {\n            // Don't get data if haven't selected build number yet\n            return;\n        }\n        this.getSubData();\n    }\n\n    _getModulesData() {\n        this.buildsDao.getData(defaultPagination, {\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'publishedModules'\n        })\n                .$promise.then((data) => {\n                    this.modulesCount = data.pagingData.length;\n                    this.modulesGridOptions.setGridData(data.pagingData);\n                    if (this.initialModuleId) {\n                        this.initialModuleId = null;\n                        let module = _.findWhere(data.pagingData, {moduleId: this.$stateParams.moduleID})\n                        //                        this.modulesGridOptions.selectItem(module);\n                    }\n                });\n    }\n\n    _getArtifacts() {\n        this.buildsDao.getData(defaultPagination, {\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'modulesArtifact',\n            moduleId: this.selectedModule\n        }).$promise.then((data) => {\n                    this.artifactsCount = data.pagingData.length;\n                    this.artifactsGridOptions.setGridData(data.pagingData);\n                });\n    }\n\n    _getDependencies() {\n\n        let defaultPagination = {\n            pageNum: 1,\n            numOfRows: 25,\n            direction: \"asc\",\n            orderBy: \"id\"\n        };\n        this.buildsDao.getData(defaultPagination, {\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'modulesDependency',\n            moduleId: this.selectedModule\n        }).$promise.then((data) => {\n                    this.dependenciesCount = data.pagingData.length;\n                    this.dependenciesGridOptions.setGridData(data.pagingData);\n                });\n\n    }\n\n    _getArtifactsDiff() {\n        return this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'artifactDiff',\n            moduleId: this.selectedModule,\n\n            otherNumber: this.selectedBuildNumber.buildNumber,\n            otherDate: this.selectedBuildNumber.time,\n\n            pageNum: 1,\n            numOfRows: 25,\n            direction: \"asc\",\n            orderBy: \"name\",\n        }).$promise.then((data) => {\n                    this.artifactsCount = data.pagingData.length;\n                    this.artifactsGridOptions.setGridData(data.pagingData);\n                });\n        ;\n    }\n\n    _getDependenciesDiff() {\n\n        this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'dependencyDiff',\n            moduleId: this.selectedModule,\n            otherNumber: this.selectedBuildNumber.buildNumber,\n            otherDate: this.selectedBuildNumber.time,\n\n            pageNum: 1,\n            numOfRows: 25,\n            direction: \"asc\",\n            orderBy: \"id\"\n        }).$promise.then((data) => {\n                    this.dependenciesCount = data.pagingData.length;//data.totalItems ? data.totalItems : 0;\n                    this.dependenciesGridOptions.setGridData(data.pagingData);\n                });\n\n    }\n\n    _getComparableBuildNumbers() {\n\n        this.buildsDao.getDataArray({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'prevBuild'\n        }).$promise.then((data) => {\n                    this.comparableBuildNumbers = data;\n                })\n\n    }\n\n\n    _createGrids() {\n\n        this.modulesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getModulesColumns())\n                .setRowTemplate('default');\n\n        this.modulesGridOptions.onSelectionChange = (data) => {\n            this.selectModule(data.entity);\n        }\n\n        this.artifactsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getArtifactsColumns())\n                .setRowTemplate('default')\n\n        this.dependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getDependenciesColumns())\n                .setRowTemplate('default');\n\n        this._getModulesData();\n\n        let featureLink = this.artifactoryFeatures.getFeatureLink('publishedmodule');\n        let featureName = this.artifactoryFeatures.getFeatureName('publishedmodule');\n\n        if (this.artifactoryFeatures.isDisabled(\"publishedmodule\")) {\n            this.$timeout(() => {\n                //$('.grid-counter').css('color', 'red');\n                $('.grid-counter').append('<span class=\"license-required\"></span>');\n                $('.grid-counter').find('.license-required').tooltipster({\n                    animation: 'fade',\n                    contentAsHTML : 'true',\n                    trigger: 'hover',\n                    onlyOne: 'true',\n                    interactive: 'true',\n                    interactiveTolerance: 150,\n                    position: 'top',\n                    theme: 'tooltipster-default top',\n                    content: `Learn more about the <a href=\"${featureLink}\" target=\"_blank\">${featureName}</a> feature`\n                });\n            })\n        }\n    }\n\n    _getModulesColumns() {\n        let cellTemplate = '<div ng-click=\"grid.appScope.jfPublishedModules.selectModule(row.entity)\" class=\"ui-grid-cell-contents\"><a href class=\"jf-link\">{{row.entity.moduleId}}</a></div>';\n\n        return [\n            {\n                name: \"Module ID\",\n                displayName: \"Module ID\",\n                field: \"moduleId\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                cellTemplate: cellTemplate,\n                width: '60%'\n            },\n            {\n                name: \"Number Of Artifacts\",\n                displayName: \"Number Of Artifacts\",\n                field: \"numOfArtifacts\",\n                width: '20%'\n            },\n            {\n                name: \"Number Of Dependencies\",\n                displayName: \"Number Of Dependencies\",\n                field: \"numOfDependencies\",\n                width: '20%'\n            }\n\n        ]\n    }\n\n    _getArtifactsColumns() {\n\n        let typeCellTemplate = '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.type}}</div>';\n\n        return [\n            {\n                name: \"Artifact Name\",\n                displayName: \"Artifact Name\",\n                field: \"name\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '30%',\n                cellTemplate: this.commonGridColumns.downloadableColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                customActions: [{\n                    icon: 'icon icon-view',\n                    tooltip: 'View',\n                    callback: row => this.viewCodeArtifact(row),\n                    visibleWhen: row => _.findWhere(row.actions, {name: \"View\"})\n                }],\n                actions: {\n                    download: {\n                        callback: row => this.downloadArtifact(row),\n                        visibleWhen: row => _.findWhere(row.actions, {name: \"Download\"})\n                    }\n                }\n            },\n            {\n                name: \"Type\",\n                displayName: \"Type\",\n                field: \"type\",\n                cellTemplate: typeCellTemplate,\n                allowGrouping\n            :\n                true,\n                grouped: true,\n                width: '10%'\n            },\n            {\n                name: \"Repo Path\",\n                displayName: \"Repo Path\",\n                field: \"repoPath\",\n                width: '50%',\n                cellTemplate: this.commonGridColumns.repoPathColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                customActions: [{\n                    icon: 'icon icon-show-in-tree',\n                    tooltip: 'Show In Tree',\n                    callback: row => this.showArtifactInTree(row),\n                    visibleWhen: row => _.findWhere(row.actions, {name: \"ShowInTree\"})\n                }]\n            }\n\n        ];\n    }\n\n    _getDependenciesColumns() {\n\n        let typeCellTemplate = '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.type}}</div>';\n        let scopeCellTemplate = '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.scope}}</div>';\n\n        return [\n            {\n                name: \"Dependency ID\",\n                displayName: \"Dependency ID\",\n                field: \"name\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                },\n                width: '25%',\n                cellTemplate: this.commonGridColumns.downloadableColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                actions: {\n                    download: {\n                        callback: row => this.downloadArtifact(row),\n                        visibleWhen: row => _.findWhere(row.actions, {name: \"Download\"})\n                    }\n                }\n            },\n            {\n                name: \"Scope\",\n                displayName: \"Scope\",\n                field: \"scope\",\n                cellTemplate: scopeCellTemplate,\n                allowGrouping\n            :\n                true,\n                grouped: true,\n                width: '15%'\n            },\n            {\n                name: \"Type\",\n                displayName: \"Type\",\n                field: \"type\",\n                cellTemplate: typeCellTemplate,\n                allowGrouping\n            :\n                true,\n                grouped: true,\n                width: '15%'\n            },\n            {\n                name: \"Repo Path\",\n                displayName: \"Repo Path\",\n                field: \"repoPath\",\n                width: '45%',\n                cellTemplate: this.commonGridColumns.repoPathColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                customActions: [{\n                    icon: 'icon icon-show-in-tree',\n                    tooltip: 'Show In Tree',\n                    callback: row => this.showArtifactInTree(row),\n                    visibleWhen: row => _.findWhere(row.actions, {name: \"ShowInTree\"})\n                }]\n            }\n        ];\n    }\n\n    _installWatchers() {\n        this.$scope.$watch('jfPublishedModules.selectedBuildNumber', (val) => {\n            if (val.length) {\n                this.getSubData();\n            }\n        });\n        this.$scope.$watch('jfPublishedModules.compare', (val) => {\n            if (val !== undefined) {\n                this.getSubData();\n            }\n        });\n    }\n\n    backToModules() {\n        _.extend(this.$stateParams, {\n            buildName: this.$stateParams.buildName,\n            buildNumber: this.$stateParams.buildNumber,\n            startTime: this.$stateParams.startTime,\n            tab: 'published',\n            moduleID: null\n        });\n\n        this.$state.go('.', this.$stateParams, { location: true, inherit: true, relative: this.$state.$current, notify: false, reload: true }).then(() => {\n            this.selectedModule = null;\n        })\n\n    }\n\n}\n\n\nexport function jfPublishedModules() {\n    return {\n        restrict: 'EA',\n        controller: jfPublishedModulesController,\n        controllerAs: 'jfPublishedModules',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_published_modules.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_published_modules.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass jfBuildInfoJsonController {\n    constructor($stateParams, $scope, BuildsDao, JFrogEventBus) {\n        this.$stateParams = $stateParams;\n        this.json = '';\n        this.buildsDao = BuildsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n\n        this._getJson();\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this._getJson();\n        })\n\n    }\n\n\n    _getJson() {\n\n        this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'buildJson'\n        }).$promise.then((data) => {\n            this.json = data.fileContent;\n        })\n    }\n\n}\n\n\n\n\nexport function jfBuildInfoJson() {\n    return {\n        restrict: 'EA',\n        controller: jfBuildInfoJsonController,\n        controllerAs: 'jfBuildInfoJson',\n        scope: {\n        },\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_build_info_json.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_build_info_json.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport DICTIONARY from './../constants/builds.constants';\n\nclass jfEnvironmentController {\n    constructor($scope, BuildsDao, JFrogGridFactory, $stateParams, uiGridConstants, JFrogEventBus) {\n        this.$scope = $scope;\n        this.$stateParams = $stateParams;\n        this.buildsDao = BuildsDao;\n        this.uiGridConstants = uiGridConstants;\n        this.environmentGridOptions = {};\n        this.systemGridOptions = {};\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.DICTIONARY = DICTIONARY.generalInfo;\n        this._getEnvironmentData();\n        this._createGrids();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this._getEnvironmentData();\n        })\n\n    }\n\n    _getEnvironmentData() {\n        this._getEnvVars();\n        this._getSysVars();\n    }\n\n    _getEnvVars() {\n        return this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'buildProps',\n            subAction: 'env',\n            orderBy: 'key',\n            numOfRows: 25,\n            pageNum: 1,\n            direction: 'asc'\n        }).$promise.then((data) => {\n                this.environmentGridOptions.setGridData(data.pagingData || []);\n            });\n    }\n\n    _getSysVars() {\n        return this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'buildProps',\n            subAction: 'system',\n            orderBy: 'key',\n            numOfRows: 25,\n            pageNum: 1,\n            direction: 'asc'\n        }).$promise.then((data) => {\n                this.systemGridOptions.setGridData(data.pagingData || []);\n            });\n    }\n\n    _createGrids() {\n\n        this.environmentGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getColumns())\n            .setRowTemplate('default')\n            .setGridData([]);\n\n        this.systemGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getColumns())\n            .setRowTemplate('default')\n            .setGridData([]);\n    }\n\n    _getColumns() {\n        return [\n            {\n                name: \"Key\",\n                displayName: \"Key\",\n                field: \"key\",\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                }\n            },\n            {\n                name: \"Value\",\n                displayName: \"Value\",\n                field: \"value\"\n            }\n        ]\n    }\n}\n\nexport function jfEnvironment() {\n    return {\n        restrict: 'EA',\n        controller: jfEnvironmentController,\n        controllerAs: 'jfEnvironment',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_environment.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_environment.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass jfIssuesController {\n    constructor($scope, $stateParams, JFrogEventBus, BuildsDao, JFrogGridFactory, uiGridConstants, commonGridColumns) {\n        this.$stateParams = $stateParams;\n        this.$scope = $scope;\n        this.uiGridConstants=uiGridConstants;\n        this.buildsDao = BuildsDao;\n        this.gridOptions = {};\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.commonGridColumns = commonGridColumns;\n        this.JFrogEventBus = JFrogEventBus;\n        this.noData = false;\n\n        this._createGrid();\n        this._getIssuesData();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this._getIssuesData();\n        })\n\n    }\n\n    _getIssuesData() {\n        this.buildsDao.getDataArray({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'buildIssues'\n        }).$promise.then((data) => {\n                if (data.length) {\n                    this.gridOptions.setGridData(data);\n                }\n                else {\n                    this.noData = true;\n                }\n\n            }).catch(() => {\n                this.noData = true;\n                this.gridOptions.setGridData([]);\n        });\n    }\n\n    _createGrid() {\n\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getColumns())\n            .setRowTemplate('default')\n            .setButtons(this._getActions());\n\n    }\n\n    _getColumns() {\n        let cellTemplate = '<div class=\"ui-grid-cell-contents\"><a target=\"_blank\" ng-href=\"{{row.entity.url}}\" class=\"jf-link\" >{{row.entity.key}}</a></div>';\n\n        return [\n            {\n                name: \"Key\",\n                displayName: \"Key\",\n                field: \"key\",\n                cellTemplate: cellTemplate,\n            },\n            {\n                name: \"Summary\",\n                displayName: \"Summary\",\n                field: \"summary\"\n            },\n            {\n                name: \"Previous Build\",\n                displayName: \"Previous Build\",\n                field: \"aggregated\",\n                cellTemplate: this.commonGridColumns.booleanColumn('row.entity.aggregated'),\n                sort: {\n                    direction: this.uiGridConstants.ASC\n                }\n            }\n\n        ]\n    }\n\n    _getActions() {\n        return [\n        ];\n    }\n\n}\n\n\nexport function jfIssues() {\n    return {\n        restrict: 'EA',\n        controller: jfIssuesController,\n        controllerAs: 'jfIssues',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_issues.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_issues.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../../constants/artifacts_events.constants';\n\nclass jfDiffController {\n    constructor($scope, $stateParams, $state, $window, BuildsDao, JFrogGridFactory, uiGridConstants,\n                commonGridColumns, JFrogEventBus, JFrogDownload, ArtifactActionsDao, ArtifactoryStorage) {\n        this.$stateParams = $stateParams;\n        this.$scope = $scope;\n        this.$window = $window;\n        this.$state = $state;\n        this.uiGridConstants = uiGridConstants;\n        this.commonGridColumns = commonGridColumns;\n        this.artifactoryStorage = ArtifactoryStorage;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.buildsDao = BuildsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactsGridOptions = {};\n        this.dependenciesGridOptions = {};\n        this.envVarsGridOptions = {};\n        this.download = JFrogDownload;\n        this.artifactoryGridFactory = JFrogGridFactory;\n\n        this.headerCellDefaultTemplate = JFrogGridFactory.getDefaultCellTemplate();\n\n        this.comparableBuildNumbers = [];\n\n        this.selectedBuildNumber = '';\n        this.excludeInternalDeps = false;\n\n        this._createGrids();\n\n        this._getComparableBuildNumbers();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this._getComparableBuildNumbers().then(() => {\n                if (this.selectedBuildNumber) {\n                    this.getDiffData();\n                }\n            });\n        })\n\n\n    }\n\n    _getCellTemplate(field) {\n        return '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.' + field + '}}</div>';\n    }\n\n    _addCellTemplates(colDef) {\n        for (let i = 0; i < colDef.length; i++) {\n            let col = colDef[i];\n            if (!col.cellTemplate) {\n                col.cellTemplate = this._getCellTemplate(col.field);\n            }\n        }\n        return colDef;\n    }\n\n    _getComparableBuildNumbers() {\n\n        return this.buildsDao.getDataArray({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action: 'prevBuild'\n        }).$promise.then((data) => {\n            data = _.sortBy(data, (r)=>-r.buildNumber);\n            this.comparableBuildNumbers = data;\n            if (this.selectedBuildNumber && !_.find(data, {buildNumber: this.selectedBuildNumber.buildNumber})) {\n                delete this.selectedBuildNumber;\n            }\n            //            this.comparableBuildNumbers.unshift({buildNumber:''});\n        })\n\n    }\n\n    getDiffData() {\n        if (this.selectedBuildNumber.buildNumber) {\n            this.buildsDao.getData({\n                name: this.$stateParams.buildName,\n                number: this.$stateParams.buildNumber,\n                time: this.$stateParams.startTime,\n                action: 'buildDiff',\n                otherNumber: this.selectedBuildNumber.buildNumber,\n                otherDate: this.selectedBuildNumber.time,\n                exDep: this.excludeInternalDeps\n            }).$promise.then((data) => {\n                        if (data) {\n                            this.variablesLength = data.props.length ? data.props.length : 0;\n                            this.dependenciesLength = data.dependencies.length ? data.dependencies.length : 0;\n                            this.artifactsLength = data.artifacts.length ? data.artifacts.length : 0;\n\n                            if (data.artifacts) {\n                                this.artifactsGridOptions.setGridData(data.artifacts || []);\n                            }\n                            if (data.dependencies) {\n                                this.dependenciesGridOptions.setGridData(data.dependencies || []);\n                            }\n                            if (data.props) {\n                                this.envVarsGridOptions.setGridData(data.props || []);\n                            }\n                        }\n                    });\n        }\n    }\n\n    showInTree(row) {\n        let browser = this.artifactoryStorage.getItem('BROWSER') || 'tree';\n        if (browser === 'stash') browser = 'tree';\n        let artifactPath = row.repoKey + \"/\" + (row.path);\n        let archivePath = '';\n        this.$state.go('artifacts.browsers.path', {\n            \"tab\": \"General\",\n            \"browser\": browser,\n            \"artifact\": artifactPath\n        });\n        this.JFrogEventBus.dispatch(EVENTS.TREE_NODE_OPEN, artifactPath);\n    }\n\n\n    downloadArtifact(row) {\n        this.download(row.downloadLink);\n    }\n\n    _createGrids() {\n\n        this.artifactsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getArtifactsColumns())\n                .setRowTemplate('default');\n        this.dependenciesGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getDependenciesColumns())\n                .setRowTemplate('default');\n        this.envVarsGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n                .setColumns(this._getEnvVarsColumns())\n                .setRowTemplate('default');\n\n    }\n\n    _getArtifactsColumns() {\n\n        return this._addCellTemplates([\n            {\n                name: \"Name (Current Build)\",\n                field: \"name\",\n                cellTemplate: this.commonGridColumns.downloadableColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                width: '20%',\n                actions: {\n                    download: {\n                        callback: row => this.downloadArtifact(row),\n                        visibleWhen: row => _.findWhere(row.actions, {name: \"Download\"})\n                    }\n                }\n            },\n            {\n                name: \"Name\",\n                field: \"prevName\",\n                headerCellTemplate\n            :\n                this.headerCellDefaultTemplate.replace('{{ col.displayName CUSTOM_FILTERS }}', 'Name (Build #{{grid.appScope.jfDiff.selectedBuildNumber.buildNumber}})'),\n                width: '20%'\n            },\n            {\n                name: \"Status\",\n                field: \"status\",\n                allowGrouping\n            :\n                true,\n                sort: {direction: this.uiGridConstants.DESC},\n                grouped: true,\n                width: '10%'\n            },\n            {\n                name: \"Module\",\n                field: \"moduleName\",\n                allowGrouping\n            :\n                true,\n                grouped: true,\n                width: '20%'\n            },\n            {\n                name: \"Repo path\",\n                field: \"downloadLink\",\n                cellTemplate: this.commonGridColumns.repoPathColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                width: '30%',\n                customActions: [{\n                    icon: 'icon icon-show-in-tree',\n                    tooltip: 'Show In Tree',\n                    callback: row => this.showInTree(row),\n                    visibleWhen: row => _.findWhere(row.actions, {name: \"ShowInTree\"})\n                }]\n            }\n        ]);\n    }\n\n    _getDependenciesColumns() {\n        return this._addCellTemplates([\n            {\n                name: \"Dependency ID (Current Build)\",\n                displayName: \"Dependency ID (Current Build)\",\n                field: \"name\",\n                cellTemplate: this.commonGridColumns.downloadableColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                width: '20%',\n                actions: {\n                    download: {\n                        callback: row => this.downloadArtifact(row),\n                        visibleWhen: row => _.findWhere(row.actions, {name: \"Download\"})\n                    }\n                }\n            },\n            {\n                name: \"Id\",\n                field: \"prevName\",\n                headerCellTemplate\n            :\n                this.headerCellDefaultTemplate.replace('{{ col.displayName CUSTOM_FILTERS }}', 'Id (Build #{{grid.appScope.jfDiff.selectedBuildNumber.buildNumber}})'),\n                width: '20%'\n            },\n            {\n                name: \"Status\",\n                field: \"status\",\n                allowGrouping\n            :\n                true,\n                sort: {direction: this.uiGridConstants.DESC},\n                grouped: true,\n                width: '10%'\n            },\n            {\n                name: \"Module\",\n                field: \"moduleName\",\n                allowGrouping\n            :\n                true,\n                grouped: true,\n                width: '20%'\n            },\n            {\n                name: \"Repo path\",\n                field: \"downloadLink\",\n                cellTemplate: this.commonGridColumns.repoPathColumn('status-{{(row.entity.status).toLowerCase()}}'),\n                width: '30%',\n                customActions: [{\n                    icon: 'icon icon-show-in-tree',\n                    tooltip: 'Show In Tree',\n                    callback: row => this.showInTree(row),\n                    visibleWhen: row => _.findWhere(row.actions, {name: \"ShowInTree\"})\n                }]\n            }\n        ])\n    }\n\n    _getEnvVarsColumns() {\n        return this._addCellTemplates([\n            {\n                name: \"Current Key\",\n                field: 'key',\n                cellTemplate: '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.key}}</div>',\n                width: '20%'\n            },\n            {\n                name: \"Current Value\",\n                field: 'value',\n                cellTemplate: '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.value}}</div>',\n                width: '20%'\n            },\n            {\n                name: \"Prev Key\",\n                field: 'prevKey',\n                cellTemplate: '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.prevKey}}</div>',\n                headerCellTemplate: this.headerCellDefaultTemplate.replace('{{ col.displayName CUSTOM_FILTERS }}', 'Build#{{grid.appScope.jfDiff.selectedBuildNumber.buildNumber}} Key'),\n                width: '20%'\n            },\n            {\n                name: \"Prev Value\",\n                field: 'prevValue',\n                cellTemplate: '<div class=\"ui-grid-cell-contents status-{{(row.entity.status).toLowerCase()}}\">{{row.entity.prevValue}}</div>',\n                headerCellTemplate: this.headerCellDefaultTemplate.replace('{{ col.displayName CUSTOM_FILTERS }}', 'Build#{{grid.appScope.jfDiff.selectedBuildNumber.buildNumber}} Value'),\n                width: '20%'\n            },\n            {\n                name: \"Status\",\n                field: \"status\",\n                sort: {direction: this.uiGridConstants.DESC},\n                allowGrouping: true,\n                grouped: true,\n                width: '20%'\n            }\n        ])\n    }\n}\n\nexport function jfDiff() {\n    return {\n        restrict: 'EA',\n        controller: jfDiffController,\n        controllerAs: 'jfDiff',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_diff.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_diff.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport DICTIONARY from './../constants/builds.constants';\n\nclass jfReleaseHistoryController {\n    constructor($stateParams, $scope, BuildsDao, JFrogEventBus) {\n        this.$stateParams = $stateParams;\n        this.buildsDao = BuildsDao;\n        this.historyData = null;\n        this.DICTIONARY = DICTIONARY.releaseHistory;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n\n        this._getData();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this._getData();\n        })\n\n    }\n\n    _getData() {\n        return this.buildsDao.getDataArray({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            action:'releaseHistory'\n        }).$promise.then((data) => {\n            this.historyData = data;\n        }).catch(() => {\n            this.historyData = [];\n        });\n    }\n}\n\nexport function jfReleaseHistory() {\n    return {\n        restrict: 'EA',\n        controller: jfReleaseHistoryController,\n        controllerAs: 'jfReleaseHistory',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_release_history.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_release_history.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIP from '../../../constants/artifact_tooltip.constant';\n\nclass jfLicensesController {\n    constructor($scope, $state, $window, $stateParams, BuildsDao, ArtifactPropertyDao,\n                JFrogGridFactory, JFrogModal, ArtifactoryState, JFrogDownload, commonGridColumns,\n                ArtifactActionsDao, ArtifactoryStorage, JFrogEventBus) {\n        this.TOOLTIP = TOOLTIP.builds;\n        this.$stateParams = $stateParams;\n        this.$state = $state;\n        this.$scope = $scope;\n        this.$window = $window;\n        this.buildsDao = BuildsDao;\n        this.propsDao = ArtifactPropertyDao.getInstance();\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.JFrogEventBus = JFrogEventBus;\n        this.modal = JFrogModal;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.artifactoryStorage = ArtifactoryStorage;\n        this.download = JFrogDownload;\n        this.artifactoryState = ArtifactoryState;\n        this.gridOptions = {};\n        this.commonGridColumns = commonGridColumns;\n        this.extendedGridOptions = {};\n\n\n        this.modalInstance = null;\n\n        this.includePublished = false;\n\n        this.allData = {};\n\n        this.filteredData = {};\n\n        this.scopesOptions = {}\n        this.scopesOptionsCopy = {};\n\n        this.showExtendedGrid = false;\n\n        this.canOverride = true;\n\n        this._createGrids();\n\n        this._getLicensesData();\n\n        this.toOverride = [];\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this.allData = {};\n            this.filteredData = {};\n            this.scopesOptions = {}\n            this.scopesOptionsCopy = {};\n            this.showExtendedGrid = false;\n            this._getLicensesData();\n        })\n\n\n    }\n\n    getFilteredData() {\n        let data = _.map(angular.copy(this.filteredData),(obj)=>{\n            delete(obj.$$hashKey);\n            return obj;\n        });\n\n        return JSON.stringify({licenses: data});\n    }\n\n    downloadArtifact(row) {\n        let params = {action: 'download'};\n        this.artifactActionsDao.perform(params, {\n            path: row.path,\n            repoKey: row.repoKey\n        }).$promise.then((response) => {\n                    this.download(response.data.path)\n                });\n    }\n\n    showInTree(row) {\n        let browser = this.artifactoryStorage.getItem('BROWSER') || 'tree';\n        if (browser === 'stash') browser = 'tree';\n        let path = row.repoKey + '/' + row.path;\n        this.$state.go('artifacts.browsers.path',{\n            tab: \"General\",\n            artifact: path,\n            browser: browser\n        });\n    }\n\n    editLicense(row) {\n        let prevState = {state: this.$state.current.name, params: angular.copy(this.$stateParams)};\n        this.artifactoryState.setState('prevState', prevState);\n        this.$state.go('admin.configuration.editLicense',{licenseName: row.license.name});\n    }\n\n    changeLicense(row) {\n        this._getLicensesPredefineValues(row).then((data) => {\n            let modalScope = this.$scope.$new();\n            modalScope.saveLicenses = (licenses) => {\n                this.propsDao.update({\n                        repoKey: row.repoKey,\n                        path: row.path\n                    },\n                    {\n                        parent: {name: 'artifactory'},\n                        property: {name: 'licenses'},\n                        selectedValues: licenses\n                    })\n                    .$promise.then((res)=>{\n                        //console.log(res);\n                        this.modalInstance.close();\n                        this._getLicensesData();\n                    })\n            };\n            modalScope.closeModal = () => this.modalInstance.close();\n\n            if (this.showExtendedGrid && row.extractedLicense.name !== 'Not Found') {\n                modalScope.foundLicense = row.extractedLicense.name;\n\n                if (row.extractedLicense.found && row.extractedLicense.name !== row.license.name)\n                    modalScope.foundLicenseClass = row.extractedLicense.approved ? 'license-approved' : 'license-unapproved';\n                else if (!row.extractedLicense.found || row.extractedLicense.name === row.license.name)\n                    modalScope.foundLicenseClass = 'license-found-same-or-notfound';\n\n                if (row.overridable) {\n                    modalScope.overridable = true;\n                    modalScope.override = () => {\n                        modalScope.selectedLicenses = [row.extractedLicense.name];\n                    }\n                }\n            }\n            modalScope.modalTitle = \"Edit 'artifactory.licenses' Property\";\n            modalScope.licenses = data.predefinedValues;\n            modalScope.selectedLicenses = data.selectedValues;\n            this.modalInstance = this.modal.launchModal('add_license_modal', modalScope);\n        });\n    }\n\n    autoLink() {\n        this.showExtendedGrid = true;\n        this._getLicensesData();\n    }\n\n    overrideSelected() {\n        if (this.toOverride.length) {\n            let requestObject = {\n                name: this.$stateParams.buildName,\n                number: this.$stateParams.buildNumber,\n                time: this.$stateParams.startTime,\n                licenses: this.toOverride\n            };\n\n            this.buildsDao.overrideLicenses(requestObject).$promise.then((data) => {\n                this.cancel();\n            });\n        }\n    }\n\n    cancel() {\n        this.showExtendedGrid = false;\n        this._getLicensesData();\n    }\n\n    onIncludePublish() {\n        this._filterData();\n    }\n\n    onIncludeByScopes() {\n        if (this.includeByScopes) {\n            angular.copy(this.scopesOptionsCopy,this.scopesOptions);\n        }\n        else {\n            angular.copy(this.scopesOptions,this.scopesOptionsCopy);\n            for (let key in this.scopesOptions) {\n                this.scopesOptions[key] = true;\n            }\n        }\n        this._filterData();\n    }\n\n    onScopeOptionChange() {\n        this._filterData();\n    }\n\n    _getLicensesPredefineValues(row) {\n        return this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            autoFind: this.showExtendedGrid,\n            id: row.id,\n            repoKey: row.repoKey,\n            path: row.path,\n            action: 'changeLicenses'\n        }).$promise;\n    }\n\n    _getLicensesData() {\n        this.buildsDao.getData({\n            name: this.$stateParams.buildName,\n            number: this.$stateParams.buildNumber,\n            time: this.$stateParams.startTime,\n            autoFind: this.showExtendedGrid,\n            action: 'buildLicenses'\n        }).$promise.then((data) => {\n                //console.log(data);\n                _.map(data.scopes, (scope)=> {\n                    this.scopesOptions[scope] = true;\n                });\n                angular.copy(this.scopesOptions,this.scopesOptionsCopy);\n                this.allData = data;\n                this._filterData();\n            });\n    }\n\n    _filterData() {\n        let relevantData = this.allData.licenses;\n\n        if (this.includePublished) {\n            relevantData = relevantData.concat(this.allData.publishedModules);\n        }\n\n        this.filteredData = _.filter(relevantData,(license) => {\n            if (!this.includeByScopes) return true;\n            else {\n                let ret = false;\n                for (let key in this.scopesOptions) {\n                    if (this.scopesOptions[key] && license.scopeNames.includes(key)) {\n                        ret = true;\n                        break;\n                    }\n                }\n                return ret;\n            }\n        });\n        if (this.showExtendedGrid) {\n            this.extendedGridOptions.setGridData(this.filteredData);\n        }\n        else {\n            this.gridOptions.setGridData(this.filteredData);\n        }\n\n        this._calculateSummary();\n    }\n\n    _calculateSummary() {\n        this.summary = {\n            notApproved: _.filter(this.filteredData, (license) => {return license.license.found && !license.license.approved}).length,\n            notFound: _.filter(this.filteredData, (license) => {return license.license.notFound}).length,\n            unknown: _.filter(this.filteredData, (license) => {return license.license.unknown}).length,\n            neutral: _.filter(this.filteredData, (license) => {return license.license.notSearched}).length,\n            approved: _.filter(this.filteredData, (license) => {return license.license.approved}).length,\n        };\n\n        this.summary.ok = this.summary.notApproved === 0 && this.summary.notFound === 0 && this.summary.unknown === 0;\n    }\n\n    _createGrids() {\n        this.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getColumns())\n            .setRowTemplate('default')\n        this.extendedGridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n            .setColumns(this._getExtendedColumns())\n            .setRowTemplate('default')\n    }\n\n    _getColumns() {\n        let nameCellTemplate = '<div ng-if=\"row.entity.repoKey\" class=\"ui-grid-cell-contents\">{{row.entity.id}}</div>' +\n                               '<div ng-if=\"!row.entity.repoKey\" class=\"ui-grid-cell-contents\">{{row.entity.id}}</div>';\n\n        let licenseCellTemplate = '<div class=\"ui-grid-cell-contents\"' +\n                'ng-class=\"{\\'license-unapproved\\': row.entity.license.found && !row.entity.license.approved,' +\n                '\\'license-approved\\': row.entity.license.approved,'+\n                '\\'license-notfound\\': row.entity.license.notFound,' +\n                '\\'license-neutral\\': row.entity.license.notSearched}\"'+\n                '><div ng-if=\"row.groupHeader\">{{row.entity[\\'license.name\\']}}</div>' +\n                '<div ng-if=\"!row.groupHeader\">' +\n                '<span ng-if=\"row.entity.actions.indexOf(\\'ChangeLicense\\') !== -1\"><a href=\"\" ng-click=\"grid.appScope.jfLicenses.changeLicense(row.entity)\">{{row.entity.license.name === \"Unknown\" ? \"Unknown(\" + row.entity.license.longName + \")\" : row.entity.license.name}}</a></span>' +\n                '<span ng-if=\"row.entity.actions.indexOf(\\'ChangeLicense\\') === -1\">{{row.entity.license.name === \"Unknown\" ? \"Unknown(\" + row.entity.license.longName + \")\" : row.entity.license.name}}</span>' +\n                '</div></div>';\n        return [\n            {\n                name: \"Artifact ID\",\n                displayName: \"Artifact ID\",\n                field: \"id\",\n                cellTemplate: nameCellTemplate,\n                width: '25%',\n                actions: {\n                    download: {\n                        callback: row => this.downloadArtifact(row),\n                        visibleWhen: row => row.actions.indexOf('Download') !== -1\n                    }\n                }\n            },\n            {\n                name: \"Scopes\",\n                displayName: \"Scopes\",\n                field: \"scopeNames\",\n                allowGrouping\n            :\n                true,\n                grouped: true,\n                width: '12%'\n            },\n            {\n                name: \"Repo Path\",\n                displayName: \"Repo Path\",\n                cellTemplate: this.commonGridColumns.repoPathColumn(),\n                field: \"path\",\n                width: '50%',\n                customActions: [{\n                    icon: 'icon icon-show-in-tree',\n                    tooltip: 'Show In Tree',\n                    callback: row => this.showInTree(row),\n                    visibleWhen: row => row.actions.indexOf('ShowInTree') !== -1\n                }]\n            },\n            {\n                name: \"License\",\n                displayName: \"License\",\n                field: \"license.name\",\n                allowGrouping\n            :\n                true,\n                cellTemplate: licenseCellTemplate,\n                grouped: true,\n                width: '13%'\n            }\n        ];\n    }\n\n    _getExtendedColumns() {\n        let nameCellTemplate = '<div ng-if=\"row.entity.repoKey\" class=\"ui-grid-cell-contents\">{{row.entity.id}}</div>' +\n                '<div ng-if=\"!row.entity.repoKey\" class=\"ui-grid-cell-contents\">{{row.entity.id}}</div>';\n\n        let licenseCellTemplate = '<div class=\"ui-grid-cell-contents\"' +\n                'ng-class=\"{\\'license-unapproved\\': row.entity.license.found && !row.entity.license.approved,' +\n                '\\'license-approved\\': row.entity.license.approved,'+\n                '\\'license-notfound\\': row.entity.license.notFound}\"'+\n                '><div ng-if=\"row.groupHeader\">{{row.entity[\\'license.name\\']}}</div>' +\n                '<div ng-if=\"!row.groupHeader\">' +\n                '<span ng-if=\"row.entity.actions.indexOf(\\'ChangeLicense\\') !== -1\"><a href=\"\" ng-click=\"grid.appScope.jfLicenses.changeLicense(row.entity)\">{{row.entity.license.name === \"Unknown\" ? \"Unknown(\" + row.entity.license.longName + \")\" : row.entity.license.name}}</a></span>' +\n                '<span ng-if=\"row.entity.actions.indexOf(\\'ChangeLicense\\') === -1\">{{row.entity.license.name === \"Unknown\" ? \"Unknown(\" + row.entity.license.longName + \")\" : row.entity.license.name}}</span>' +\n                '</div></div>';\n\n        let foundLicenseCellTemplate = '<div class=\"ui-grid-cell-contents\"' +\n            'ng-class=\"{\\'license-approved\\': row.entity.extractedLicense.found && row.entity.extractedLicense.name !== row.entity.license.name && row.entity.extractedLicense.approved,' +\n                '\\'license-unapproved\\': row.entity.extractedLicense.found && row.entity.extractedLicense.name !== row.entity.license.name && !row.entity.extractedLicense.approved,' +\n                '\\'license-found-same-or-notfound\\': !row.entity.extractedLicense.found || row.entity.extractedLicense.name === row.entity.license.name}\"' +\n                '>{{row.entity.extractedLicense.name === \"Unknown\" ? \"Unknown(\" + row.entity.extractedLicense.longName + \")\" : row.entity.extractedLicense.name}}</div>';\n\n        return [\n            {\n                name: \"Artifact ID\",\n                displayName: \"Artifact ID\",\n                field: \"id\",\n                cellTemplate: nameCellTemplate,\n                width: '25%',\n                actions: {\n                    download: {\n                        callback: row => this.downloadArtifact(row),\n                        visibleWhen: row => row.actions.indexOf('Download') !== -1\n                    }\n                }\n            },\n            {\n                name: \"Scopes\",\n                field: \"scopeNames\",\n                allowGrouping\n            :\n                true,\n                grouped: true\n            },\n            {\n                name: \"Repo Path\",\n                cellTemplate: this.commonGridColumns.repoPathColumn(),\n                field: \"path\",\n                customActions: [{\n                    icon: 'icon icon-show-in-tree',\n                    tooltip: 'Show In Tree',\n                    callback: row => this.showInTree(row),\n                    visibleWhen: row => row.actions.indexOf('ShowInTree') !== -1\n                }]\n            },\n            {\n                name: \"License\",\n                field: \"license.name\",\n                allowGrouping\n            :\n                true,\n                cellTemplate: licenseCellTemplate,\n                grouped: true\n            },\n            {\n                name: \"Found Licenses\",\n                field: \"extractedLicense.name\",\n                cellTemplate: foundLicenseCellTemplate\n            },\n            {\n                name: \"Override\",\n                field: \"selected\",\n                cellTemplate: this.commonGridColumns.checkboxColumn('row.entity.selected', 'grid.appScope.jfLicenses.setSelected(row.entity)', '!row.entity.overridable')\n            }\n\n        ];\n    }\n\n    setSelected(row) {\n        if (row.selected) {\n            this.toOverride.push(row);\n        }\n        else {\n            let index = this.toOverride.indexOf(row);\n            if (index != -1) {\n                this.toOverride.splice(index,1);\n            }\n        }\n    }\n\n    hasScopesOptions() {\n        return Object.keys(this.scopesOptions).length > 0;\n    }\n}\n\nexport function jfLicenses() {\n    return {\n        restrict: 'EA',\n        controller: jfLicensesController,\n        controllerAs: 'jfLicenses',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_licenses.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_licenses.js","class jfEffectivePermissionController {\n    constructor($stateParams, $scope, BuildsDao, JFrogEventBus, JFrogTableViewOptions, $state,\n            commonGridColumns, User) {\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.user = User.getCurrent();\n        this.commonGridColumns = commonGridColumns;\n        this.buildsDao = BuildsDao;\n        this.historyData = null;\n        this.JFrogEventBus = JFrogEventBus;\n        this.$scope = $scope;\n        this.cellTemplateGenerators = JFrogTableViewOptions.cellTemplateGenerators;\n\n\n        this._getData();\n\n        this.JFrogEventBus.registerOnScope(this.$scope, this.JFrogEventBus.getEventsDefinition().BUILDS_TAB_REFRESH, () => {\n            this._getData();\n        });\n\n        // Users Table\n        this.usersEffectivePermissionsOptions = {};\n        this.usersEffectivePermissionsOptions = new JFrogTableViewOptions(this.$scope);\n        this.usersEffectivePermissionsOptions.setId('users-effective-permission-table')\n                .setObjectName('User')\n                .setColumns(this.getColumns());\n\n        // Groups Table\n        this.groupsEffectivePermissionsOptions = {};\n        this.groupsEffectivePermissionsOptions = new JFrogTableViewOptions(this.$scope);\n        this.groupsEffectivePermissionsOptions.setId('groups-effective-permission-table')\n                .setObjectName('Group')\n                .setColumns(this.getColumns());\n\n        // Permission Targets Table\n        this.permissionTargetsOptions = {};\n        this.permissionTargetsOptions = new JFrogTableViewOptions(this.$scope);\n        this.permissionTargetsOptions.setId('permission-targets-table')\n                                    .setObjectName('Permission Target')\n                                    .setColumns(this.getPermissionTargetsColumns());\n\n    }\n\n\n    _getData() {\n        this.buildsDao.buildEffectivePermission({},{\n            name: this.$stateParams.buildName,\n            buildNumber: this.$stateParams.buildNumber,\n            startTime: this.$stateParams.startTime\n        }).$promise.then(response => {\n            this.userEffectivePermissions = response.userEffectivePermissions;\n            this.groupEffectivePermissions = response.groupEffectivePermissions;\n            this.permissionTargets = response.permissionTargets;\n\n            this.usersEffectivePermissionsOptions.setData(this.userEffectivePermissions);\n            this.groupsEffectivePermissionsOptions.setData(this.groupEffectivePermissions);\n            this.permissionTargetsOptions.setData(this.permissionTargets);\n        });\n    }\n\n    getColumns() {\n\n        return [\n            {\n                header: 'Principal',\n                field: 'principal',\n                filterable: true,\n                cellTemplate: `<div>{{row.entity.principal}}</div>`,\n                width: '30%'\n            },\n            {\n                header: 'Permission Target',\n                field: 'permissionTarget',\n                width: '30%',\n                cellTemplate: this.cellTemplateGenerators.listableColumn('row.entity.permissionTargets','row.entity.principal'),\n            },\n\n\n            {\n                header: 'Read',\n                field: 'permission.read',\n                textAlign: 'center',\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                sortable: false\n            },\n            {\n                header: 'Annotate',\n                field: 'permission.annotate',\n                textAlign: 'center',\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                sortable: false\n            },\n            {\n                header: 'Upload',\n                field: 'permission.deploy',\n                textAlign: 'center',\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                sortable: false\n            },\n            {\n                header: 'Delete',\n                textAlign: 'center',\n                field: \"permission.delete\",\n                cellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n                sortable: false\n            }\n        ]\n    }\n\n    getPermissionTargetsColumns() {\n\n        let permissionNameCell = () => {\n            return this.user.isAdmin() ?\n                    `<div><a class=\"jf-link\" ng-click=\"grid.appScope.jfEffectivePermission.editPermission(row.entity)\">{{row.entity.permissionName}}</a></div>` :\n                    `<div>{{row.entity.permissionName}}</div>`;\n        };\n\n        return [\n            {\n                header: 'Permission Target Name',\n                field: 'permissionName',\n                filterable: true,\n                cellTemplate: permissionNameCell(),\n                width: '30%'\n            },\n            {\n                header: 'Users',\n                field: 'users',\n                cellTemplate: this.cellTemplateGenerators.listableColumn('row.entity.users','row.entity.permissionName')\n            },\n            {\n                header: 'Groups',\n                field: 'groups',\n                cellTemplate: this.cellTemplateGenerators.listableColumn('row.entity.groups','row.entity.permissionName')\n            }\n        ]\n    }\n\n    editPermission(row) {\n        this.$state.go('admin.security.permissions.edit', {permission: row.permissionName})\n    }\n\n}\n\nexport function jfEffectivePermission() {\n    return {\n        restrict: 'EA',\n        controller: jfEffectivePermissionController,\n        controllerAs: 'jfEffectivePermission',\n        scope: {},\n        bindToController: true,\n        templateUrl: 'states/builds/build_tabs/jf_effective_permission.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/builds/build_tabs/jf_effective_permission.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {BundlesListController} from \"../bundles/bundles_list.controller\";\nimport {BundlePageController} from \"../bundles/bundle_page.controller\";\n\nfunction bundlesConfig ($stateProvider) {\n\n    $stateProvider\n            .state('bundles', {\n                url: '/bundles',\n                templateUrl: 'states/bundles/bundles.html',\n                parent: 'app-layout',\n            })\n            .state('bundles.list', {\n                url: '/{tab}',\n                templateUrl: 'states/bundles/bundles_list.html',\n                controller: 'BundlesListController as BundlesList'\n            })\n            .state('bundles.bundle_page', {\n                url: '/{type}/{bundleName}/{version}',\n                templateUrl: 'states/bundles/bundle_page.html',\n                controller: 'BundlePageController as BundlePage'\n            })\n}\n\nexport default angular.module('bundles', [])\n        .config(bundlesConfig)\n        .controller('BundlesListController', BundlesListController)\n        .controller('BundlePageController', BundlePageController)\n\n\n// WEBPACK FOOTER //\n// ./states/bundles/bundles.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class BundlesListController {\n    constructor($scope, $q, BundlesDao, JFrogTableViewOptions, ArtifactoryFeatures, $stateParams, $state) {\n\n        this.$scope = $scope;\n        this.$q = $q;\n        this.BundlesDao = BundlesDao;\n        this.JFrogTableViewOptions = JFrogTableViewOptions;\n        this.allBundlesGridOptions = {};\n        this.ArtifactoryFeatures = ArtifactoryFeatures;\n        this.$stateParams = $stateParams;\n        this.$state = $state;\n\t    this._createGrids();\n        this._getBundlesData();\n    }\n\n    $onInit() {\n\t    this.DICTIONARY = {\n\t\t    target: 'Received',\n\t\t    source: 'Distributable',\n\t    };\n\t    this.tabs = [\n\t\t    {name: 'target'},\n\t\t    {name: 'source'},\n\t    ];\n    }\n\n    _getBundlesData() {\n        this.BundlesDao.getData({type : 'target'}).$promise.then((results) => {\n\t        this.targetBundles = results.bundles;\n            this.targetTableViewOptions.setData(this.targetBundles)\n        });\n        this.BundlesDao.getData({type : 'source'}).$promise.then((results) => {\n            this.sourceBundles = results.bundles;\n            this.sourceTableViewOptions.setData(this.sourceBundles)\n        });\n    }\n\n    _createGrids() {\n        this.targetTableViewOptions = new this.JFrogTableViewOptions(this.$scope);\n        this.targetTableViewOptions.setColumns(this._getColumns())\n                .setRowsPerPage(20)\n                .setEmptyTableText('No release bundles have been distributed to Artifactory.');\n        this.sourceTableViewOptions = new this.JFrogTableViewOptions(this.$scope);\n        this.sourceTableViewOptions.setColumns(this._getColumns())\n                .setRowsPerPage(20)\n                .setEmptyTableText('No release bundles have been distributed from Artifactory.');\n    }\n\n    goToBundle(name, version) {\n        let type = this.$state.params.tab;\n\t    this.$state.go('bundles.bundle_page', {\n\t        type: type,\n            bundleName: name,\n            version: version\n        });\n    }\n\n    _getColumns() {\n        return [\n            {\n                header: \"Bundle Name\",\n                field: \"name\",\n                cellTemplate: `<div class=\"ui-grid-cell-contents\">\n                                   <a href class=\"no-cm-action jf-link\" \n                                      ng-click=\"appScope.BundlesList.goToBundle(row.entity.name,row.entity.latestVersion)\">\n                                     {{row.entity.name}}\n                                   </a>\n                               </div>`,\n                width: '55%',\n                filterable: true\n            },\n            {\n                header: \"Last Version\",\n                field: \"latestVersion\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.latestVersion}}</div>',\n                width: '20%',\n                filterable: true\n            },\n            {\n                header: \"Created\",\n                cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.created | date: \\'d MMMM, yyyy HH:mm:ss Z\\'}}</div>',\n                field: \"created\",\n                width: '25%'\n            }\n        ]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/bundles/bundles_list.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class BundlePageController {\n    constructor($scope, $timeout, $filter, $state, $stateParams, $location, BundlesDao, JFrogUIUtils, JFrogModal, JFrogNotifications) {\n\n    \tthis.$scope = $scope;\n    \tthis.$filter = $filter;\n        this.$state = $state;\n        this.$timeout = $timeout;\n        this.$stateParams = $stateParams;\n        this.BundleDao = BundlesDao;\n        this.$location = $location;\n        this.JFrogUIUtils = JFrogUIUtils;\n        this.BundlesDao = BundlesDao;\n        this.artifactoryModal = JFrogModal;\n        this.notifications = JFrogNotifications;\n    }\n\n    $onInit() {\n\t    this._getBundleVersions();\n\t    this.fileInfo = [];\n\t    this.activeItem = '';\n    }\n\n    _getBundleVersions() {\n        this.BundleDao.getBundleVersions({\n            type: this.$stateParams.type,\n            name: this.$stateParams.bundleName\n        }).$promise.then((data) => {\n\n            // Go to bundle list page if no versions exist\n            if (_.isEmpty(data.versions)) {\n                this.backToBundles(this.$stateParams.type);\n                return;\n            }\n\n\t        this.versions = _.sortBy(data.versions, i => -i.created);\n\n            // Go to first version if version isn't exist\n            let versionsList = this.versions.map(version => version.version);\n            if (!_.contains(versionsList, this.$stateParams.version)) this.goToVersion(this.versions[0]);\n\n            this._getBundleData(this.$stateParams.type, this.$stateParams.bundleName, this.$stateParams.version);\n\n            this.scrollToVersion();\n        });\n    }\n\n    _getBundleData(type, name, version) {\n        this.BundleDao.getBundleData({type,name,version}).$promise.then((data) => {\n            let artifacts = data.artifacts;\n            this.artifactsList = [];\n\n        \t// Group by component name\n            artifacts = _.groupBy(artifacts, 'component_name');\n\n            // sorting the artifacts object alphabetic\n            Object.keys(artifacts).sort().forEach(key => {\n                if (key !== 'undefined') {\n                    this.artifactsList.push({key, value: artifacts[key]});\n                }\n            });\n\n            this.artifactsList.push({key: 'undefined', value: artifacts['undefined']});\n\n            // find the first item in first drawer and select it by default\n            const firstItem = this.artifactsList[0].value[0]\n            if (firstItem) this.updateFileInfo(firstItem, true);\n\n            this.summaryColumns = this.getSummaryColumns();\n\t        this.bundleData = data;\n        })\n    }\n\n\tupdateFileInfo(fileInfo, scrpllTop = false) {\n\t\tthis.activeItem = fileInfo.name;\n\t\tthis.fileInfo = [\n\t\t\t{label: 'Name', value: fileInfo.name || ''},\n\t\t\t{label: 'Path', value: fileInfo.path || '', copy: true},\n\t\t\t{label: 'Created', value: fileInfo.created || ''},\n\t\t\t{label: 'Version', value: fileInfo.component_version || ''},\n\t\t\t{label: 'Path', value: fileInfo.path || ''},\n            {label: 'Size', value: this.formatFileSize(fileInfo.size) || ''}\n\t\t]\n\n        if (scrpllTop) {\n            $('.inner-data-wrapper > div').scrollTop(0);\n        }\n\t}\n\n\tgetSummaryColumns() {\n\t\treturn [{\n\t\t\tlabel: 'Version ID',\n\t\t\tclass: 'name',\n\t\t\ttemplate: '{{BundlePage.bundleData.version}}',\n\t\t\tisActive: true\n\t\t},\n\t\t{\n\t\t\tlabel: 'Short Description',\n\t\t\tclass: 'short-description',\n\t\t\ttemplate: '{{BundlePage.bundleData.desc}}',\n            isActive: '{{!!BundlePage.bundleData.desc.length}}',\n            width: '2fr'\n\t\t},\n\t\t{\n\t\t\tlabel: 'Creation Date',\n\t\t\tclass: 'creation-date',\n\t\t\ttemplate: '{{BundlePage.bundleData.created | date:\"d MMMM, yyyy HH:mm:ss\"}}',\n\t\t\tisActive: true\n\t\t},\n\t\t{\n\t\t\tlabel: 'Size',\n\t\t\tclass: 'size',\n\t\t\ttemplate: '{{BundlePage.bundleData.size | filesize}}',\n\t\t\tisActive: true\n\t\t}]\n\t}\n\n    deleteBundleVersion(e,version) {\n\n        e.stopPropagation();\n\n        let bundleName = this.$stateParams.bundleName;\n        let bundleVersion = version.version;\n        let index = _.findIndex(this.versions, (version) => version.version === bundleVersion);\n        let isDeleteingActiveVersion = bundleVersion === this.$stateParams.version;\n\n        this.artifactoryModal.confirm(`Are you sure you want to delete version ${bundleVersion} of the ${bundleName} release bundle?`, `Delete Release Bundle`)\n        \t.then(() => {\n                    this.BundlesDao.deleteBundles({\n\t                    type: this.$stateParams.type,\n\t                    name: bundleName,\n\t                    version: bundleVersion}).$promise.then(() => {\n                        if (index === 0 && this.versions.length === 1) {\n                            this.backToBundles('bundles.list',this.$stateParams.type);\n                        } else if (isDeleteingActiveVersion) {\n                            this.versions.splice(index, 1);\n                            if (index === 0) {\n                                this.goToVersion(this.versions[0]);\n                            } else {\n                                this.goToVersion(this.versions[index - 1]);\n                            }\n                        } else {\n                            this.versions.splice(index, 1);\n                        }\n                    this.notifications.create({info: `You successfully removed version ${bundleVersion} from ${bundleName} bundle`});\n        \t});\n\t    });\n    }\n\n\tgoToVersion(version) {\n\t\t_.extend(this.$stateParams, {\n\t\t    type: this.$stateParams.type,\n\t\t    version: version.version,\n\t\t    bundleName: this.$state.params.bundleName\n    \t});\n\n        this.$state.go('.', this.$stateParams, { location: true, inherit: true, relative: this.$state.$current, notify: false, reload: true })\n\t\t\t\t\t.then(() => {\n                        this._getBundleData(this.$stateParams.type, this.$stateParams.bundleName, this.$stateParams.version)\n\t\t\t\t\t});\n\t}\n\n    formatFileSize(bytes) {\n        return this.$filter('filesize')(bytes);\n    }\n\n    scrollToVersion() {\n\t\tthis.$timeout(() => {\n            $('.versions-wrapper').animate({ scrollTop: $('.versions-wrapper .active').offset().top - 350 }, 350);\n\t\t});\n\t}\n\n    backToBundles(type) {\n        this.$state.go('bundles.list',{tab: type});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/bundles/bundle_page.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {HomeController} from \"./home.controller\";\n\nfunction homeConfig ($stateProvider) {\n\n    $stateProvider\n            .state('home', {\n                url: '/home',\n                parent: 'app-layout',\n                templateUrl: 'states/home/home.html',\n                controller: 'HomeController as Home',\n                onExit: (TreeBrowserDao) => {\n                    TreeBrowserDao.invalidateRoots();\n                },\n            })\n}\n\nexport default angular.module('home', [])\n        .config(homeConfig)\n        .controller('HomeController', HomeController)\n\n\n// WEBPACK FOOTER //\n// ./states/home/home.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactCountController} from '../../home_widgets/artifacts_count_widget/artifacts_count.controller';\nimport {VersionController} from '../../home_widgets/version_widget/version.controller';\nimport {UpdatesController} from '../../home_widgets/updates_widget/updates.controller';\nimport {QuickSearchController} from '../../home_widgets/quick_search/quick_search.controller';\nimport {AddonsController} from '../../home_widgets/addons_widget/addons.controller';\nimport {LinksController} from '../../home_widgets/links_widget/links.controller';\nimport {MostDownloadedController} from '../../home_widgets/most_downloaded_widget/most_downloaded';\nimport {LastDeployedController} from '../../home_widgets/last_deployed_widget/last_deployed';\nimport {SetMeUpWidgetController} from '../../home_widgets/set_me_up_widget/set-me-up.controller';\n\nimport EVENTS from '../../constants/artifacts_events.constants';\n\nexport class HomeController {\n    constructor($timeout,$scope, User, ArtifactoryState, ArtifactoryFeatures, HomePageDao, JFrogEventBus, GoogleAnalytics) {\n        this.$timeout = $timeout;\n        this.$scope = $scope;\n        this.homePageDao = HomePageDao;\n        this.user = User.getCurrent();\n        this.features = ArtifactoryFeatures;\n        this.ArtifactoryState = ArtifactoryState;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.widgetsOptions = {\n            padding: 15,\n            minHeight: 490\n        };\n        let url =\"https://jfrog.com/artifactory/eula/\";\n        if (this.features.isConanCE()) {\n            url = \"https://jfrog.com/aritfactory-community-edition-c-c-eula/\"\n        }\n        this.footerText = `Other than JFrog's trademarks, marks and logos, all other trademarks displayed in this application are owned by their respective holders. JFrog is not sponsored by, endorsed by or affiliated with the holders of these trademarks. More info here - <a target=_blank\" href=\"https://jfrog.com/artifactory/cloud-eula/\" class=\"jf-link\">Terms of Use</a>,<a target=_blank\" class=\"jf-link\" href=\"${url}\">EULA</a>.`;\n\n        this.defineWidgets();\n        this.createLayout();\n\n        JFrogEventBus.register(EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this.getData();\n        });\n\n        this.getData();\n        this.isAol = () => {return this.features.isAol()};\n        this.jfNewsIsOn = false; // Turns jf_news on / off\n    }\n\n    getData() {\n        this.homepageData = {};\n        this.homePageDao.get({widgetName:'artifactCount'}).$promise.then((data)=> {\n            _.extend(this.homepageData, data.widgetData);\n            this.homePageDao.get({widgetName:'info'}).$promise.then((data)=> {\n                _.extend(this.homepageData, data.widgetData);\n            });\n        });\n\n    }\n\n    defineWidgets() {\n        this.widgets = {\n            artifactCount: {\n                name: 'Artifacts Count',\n                id: 'artifacts-count',\n                templateUrl: 'home_widgets/artifacts_count_widget/artifacts_count.html',\n                controller: ArtifactCountController,\n                scroll: false,\n                showSpinner: true,\n            },\n            version: {\n                name: 'Version',\n                id: 'version',\n                templateUrl: 'home_widgets/version_widget/version.html',\n                controller: VersionController,\n                scroll: false,\n                showSpinner: true,\n            },\n            updates: {\n                name: 'Updates',\n                id: 'updates',\n                templateUrl: 'home_widgets/updates_widget/updates.html',\n                controller: UpdatesController,\n                scroll: true,\n                showSpinner: true\n            },\n            quickSearch: {\n                name: 'Quick Search',\n                id: 'quick-search',\n                templateUrl: 'home_widgets/quick_search/quick_search.html',\n                controller: QuickSearchController,\n                scroll: false,\n                showSpinner: false\n            },\n            addons: {\n                name: 'Addons',\n                id: 'addons',\n                templateUrl: 'home_widgets/addons_widget/addons.html',\n                controller: AddonsController,\n                scroll: false,\n                showSpinner: true,\n            },\n            usefulLinks: {\n                name: 'Useful Links',\n                templateUrl: 'home_widgets/links_widget/links.html',\n                controller: LinksController,\n                scroll: false,\n                showSpinner: false\n            },\n            lastDeployed: {\n                name: 'Last Deployed',\n                id: 'last-deployed',\n                templateUrl: 'home_widgets/last_deployed_widget/last_deployed.html',\n                controller: LastDeployedController,\n                scroll: true,\n                showSpinner: true\n            },\n            mostDownloaded: {\n                name: 'Most Downloaded',\n                id: 'most-downloaded',\n                templateUrl: 'home_widgets/most_downloaded_widget/most_downloaded.html',\n                controller: MostDownloadedController,\n                scroll: true,\n                showSpinner: true\n            },\n            setMeUp: {\n                name: 'Set me up',\n                id: 'set-me-up',\n                templateUrl: 'home_widgets/set_me_up_widget/set-me-up.html',\n                controller: SetMeUpWidgetController,\n                scroll: true,\n                showSpinner: true\n            },\n        }\n    }\n\n    createLayout() {\n        this.widgetsLayout = {\n            main: {\n                rows: [\n                    {\n                        size: '73%',\n                        cells: ['100% #top']\n                    },\n                    {\n                        size: '27%',\n                        cells: ['100% #bottom']\n                    }\n                ]\n            },\n            top: {\n                main: {\n                    rows: [\n                        {\n                            size:'100%',\n                            cells: ['33% #topLeft', '34% #topCenter', '33% #topRight']\n                        }\n                    ]\n                },\n                topLeft: {\n                    columns: [\n                        {\n                            size: '100%',\n                            cells: ['40% @quickSearch', '60% @usefulLinks']\n                        }\n                    ]\n                },\n                topCenter: {\n                    main: {\n                        columns: [\n                            {\n                                size: '100%',\n                                cells: ['100% @setMeUp']\n                            }\n                        ]\n                    }\n                },\n                topRight: {\n                    columns: [\n                        {\n                            size: '100%',\n                            cells: ['50% @lastDeployed', '50% @mostDownloaded']\n                        }\n                    ]\n                }\n            },\n            bottom: {\n                columns: [\n                    {\n                        size:'100%',\n                        cells: ['100% @addons']\n                    }\n                ]\n            }\n        }\n\n        if (this.features.isEdgeNode()) this.widgetsLayout.top.topRight.columns[0].cells = ['100% @mostDownloaded'];\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/home/home.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class ArtifactCountController {\n    constructor(HomePageDao) {\n        this.homePageDao = HomePageDao;\n        this.initHomePage();\n        this.updateCount();\n    }\n\n    initHomePage() {\n        this.homePageDao.get({widgetName:'artifactCount'}).$promise.then((data)=> {\n            this.homepageData = data.widgetData;\n            this.$widgetObject.showSpinner = false;\n        });\n    }\n\n    updateCount() {\n        this.$widgetObject.showSpinner = true;\n        this.initHomePage();\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/artifacts_count_widget/artifacts_count.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class VersionController {\n    constructor(HomePageDao) {\n        this.homePageDao = HomePageDao;\n        this.initHomePage();\n    }\n    initHomePage() {\n        this.homePageDao.get({widgetName:'info'}).$promise.then((data)=> {\n            this.homepageData = data.widgetData;\n            this.$widgetObject.showSpinner = false;\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/version_widget/version.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class UpdatesController {\n    constructor(User,$timeout) {\n        this.$timeout = $timeout;\n        this.showNews = false;\n        let offlineMode = User.getCurrent().offlineMode;\n        if (!offlineMode) this.readUpdateHTML();\n    }\n\n    readUpdateHTML() {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', 'https://service.jfrog.org/artifactory/updatesv4', true);\n        xhr.onreadystatechange= ()=>{\n            this.updateHTML=xhr.response;\n            this.$scope.$apply();\n\n            //twitter button javascript !\n            !function(d,s,id){\n                var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';\n                if(!d.getElementById(id)){\n                    js=d.createElement(s);\n                    js.id=id;js.src=p+'://platform.twitter.com/widgets.js';\n                    fjs.parentNode.insertBefore(js,fjs);\n                }\n            }(document, 'script', 'twitter-wjs');\n\n            this.$scope.$on('$destroy', () => {\n                let twitter = document.getElementById('twitter-wjs');\n                if (twitter) twitter.remove();\n            });\n\n            if(xhr.response) {\n                this.$timeout(()=>{\n                    this.showNews = true;\n                    this.$widgetObject.showSpinner = false;\n                },200);\n            }\n        };\n        xhr.send();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/updates_widget/updates.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class QuickSearchController {\n    constructor($state, ArtifactoryFeatures, GoogleAnalytics) {\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.$state = $state;\n        this.features = ArtifactoryFeatures;\n\n        this.links = [\n            {\n                title: 'Package\\nSearch',\n                search: 'package'\n            },\n            {\n                title: 'Archive\\nSearch',\n                search: 'archive'\n            },\n            {\n                title: 'Property\\nSearch',\n                search: 'property'\n            },\n            {\n                title: 'Checksum\\nSearch',\n                search: 'checksum'\n            },\n            {\n                title: 'JCenter\\nSearch',\n                search: 'remote'\n            }\n        ]\n\n        if (this.features.isEdgeNode() || this.features.isConanCE()) {\n            this.links = _.filter(this.links, (link) => {\n                return link.search != 'remote';\n            });\n        }\n    }\n\n    search() {\n        if (!this.query) return;\n\n        let query = {\n            \"search\": \"quick\",\n            \"query\": this.query\n        }\n        this.$state.go('search',{searchType: 'quick', query: btoa(JSON.stringify(query)), fromHome: true});\n    }\n\n    gotoSearch(searchType) {\n        this.GoogleAnalytics.trackEvent('Homepage' , 'Quick Search link' , searchType);\n        this.$state.go('search',{searchType: searchType});\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/quick_search/quick_search.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport FIELD_OPTIONS from '../../constants/field_options.constats';\nimport EVENTS from '../../constants/artifacts_events.constants';\n\nexport class AddonsController {\n    constructor(HomePageDao, $timeout, $interval, JFrogEventBus) {\n        this.homePageDao = HomePageDao;\n\n        this.$timeout = $timeout;\n        this.$interval = $interval;\n\n        this.tabOptions = ['All', 'Package Management', 'Features', 'Ecosystem', 'Available'];\n        this.currentType = this.tabOptions[0];\n\n        this.getData();\n\n        $(window).resize(() => {\n            this.$timeout(() => this.calculateAddonSize(), 100);\n        });\n        JFrogEventBus.register(EVENTS.REFRESH_PAGE_CONTENT,()=>{\n            this.$widgetObject.showSpinner = true   ;\n            this.getData();\n        });\n\n        this.addonsAnimation = undefined;\n        this.logColor = \"color: green;\";\n\n        window.move1 = this._move1.bind(this);\n        window.move3 = this._move3.bind(this);\n        window.moveAll = this._moveAll.bind(this);\n\n        this.lastDeltaX = 1;\n\n    }\n\n    getData() {\n        this.homePageDao.get({widgetName:'addon'}).$promise.then((data)=> {\n            this.addons = data.widgetData.addons;\n\n\n            let remainInOneLine = ['git-lfs','sumo-logic','ivy','xray','jfrog-cli','plugin']; // This items should remain in one line\n            let brake3WordsAfter2ndWord = ['s3fileStore','gcs','distribution']; // This items has 3 words and needs to brake after the second word\n            let brake3WordsAfter1stWord = ['smart-repo','sso']; // This items has 3 words and needs to brake after the first word\n\n            _.forEach(this.addons, (addon) => {\n                if (!_.includes(remainInOneLine,addon.name) && !_.includes(brake3WordsAfter2ndWord,addon.name) && !_.includes(brake3WordsAfter1stWord,addon.name)) {\n                    addon.displayName = addon.displayName.split(\" \").join(\"\\n\")\n                }\n                if (_.includes(brake3WordsAfter2ndWord,addon.name)) {\n                    let splitDisplayName = addon.displayName.split(' ');\n                    let newDisplayName = splitDisplayName[0] + ' ' + splitDisplayName[1] + '\\n' + splitDisplayName[2];\n\n                    addon.displayName = newDisplayName;\n                }\n                if (_.includes(brake3WordsAfter1stWord,addon.name)) {\n                    let splitDisplayName = addon.displayName.split(' ');\n                    let newDisplayName = splitDisplayName[0] + '\\n' + splitDisplayName[1] + ' ' + splitDisplayName[2];\n\n                    addon.displayName = newDisplayName;\n                }\n            });\n\n\n            this.$timeout(() => {\n                this.calculateAddonSize();\n                this.$widgetObject.showSpinner = false;\n            }, 100);\n        });\n    }\n\n    getIcon(addonName) {\n        let packageData = _.find(FIELD_OPTIONS.repoPackageTypes, {value: addonName});\n        return 'iconrepo-' + (packageData ? packageData.icon : addonName);\n    }\n\n    sortByCurrentType() {\n        this.addons = _.filter(this.allAddons, (addon)=> {\n            return addon.categories.indexOf(this._camelize(this.currentType)) !== -1;\n        });\n        $(\".addon-icon\")\n            .removeClass('swelling')\n\n        // Commented out until we get a clearance from Yoav\n        // setTimeout(this.animateAddons.bind(this),100)\n\n        this.$timeout(()=>{\n            this.freezeSwitchMenu();\n        });\n\n    }\n\n    _camelize(str) {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n            return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    freezeSwitchMenu() {\n        let swichMenu = $('.homepage-switch');\n        swichMenu.css({\n            position: 'fixed',\n            width: $('.card.stretch').prop(\"clientWidth\")\n        });\n        $('.addon-list').css('padding-top', 100);\n    }\n\n    calculateAddonSize() {\n        let addonWrapperWidth = $('.addons-wrapper').width();\n        this.numberOfItemsInLine = Math.round(addonWrapperWidth/200);\n        this.tileWidth = addonWrapperWidth/this.numberOfItemsInLine;\n\n        $('.addon-tile').width(this.tileWidth);\n\n        this.ready = true;\n    }\n\n    addonPrevButton() {\n\n\n        if ($('.addon-tile').is(':animated')) return false;\n\n        let addonItem = $('.addon-tile').last();\n        addonItem.insertBefore($('.addon-tile').first()).css('margin-left', -this.tileWidth);\n        addonItem.animate({ 'margin-left': 0 }, 250);\n\n    }\n    addonNextButton() {\n\n        if ($('.addon-tile').is(':animated')) return false;\n        let addonItem = $('.addon-tile').first();\n\n        addonItem.animate({ 'margin-left': -this.tileWidth }, 250);\n        this.$timeout(() => {\n            addonItem.insertAfter($('.addon-tile').last());\n            $('.addon-tile').css('margin-left', '');\n        }, 250);\n    }\n\n    _clearInterval() {\n        if (angular.isDefined(this.addonsAnimation)) {\n            this.$interval.cancel(this.addonsAnimation);\n            this.addonsAnimation = undefined;\n        }\n    }\n    _move1(time = 5000) {\n        this._clearInterval();\n        this.addonsAnimation = this.$interval(() => {\n            if ($('.addon-tile:hover').length > 0) return false;\n            this.addonNextButton();\n\n        }, time);\n        console.log('%cSwitched to move 1 at a time', this.logColor);\n    }\n\n    _move3(time = 5000) {\n        this._clearInterval();\n        this.addonsAnimation = this.$interval( () => {\n            if ($('.addon-tile').is(':animated') || $('.addon-tile:hover').length > 0) return false;\n            let addonItems = $('.addon-tile:nth-child(-n+3)');\n            addonItems.eq(0).animate({ 'margin-left': -this.tileWidth * 3 }, 250 * 3);\n            this.$timeout(() => {\n                addonItems.insertAfter($('.addon-tile').last());\n                $('.addon-tile').css('margin-left', '');\n            }, 250 * 3);\n        }, time);\n        console.log('%cSwitched to move 3 at a time', this.logColor);\n    }\n    _moveAll(time = 5000) {\n        this._clearInterval();\n\n        this.addonsAnimation = this.$interval( () => {\n            if ($('.addon-tile').is(':animated') || $('.addon-tile:hover').length > 0) return false;\n            let addonItems = $('.addon-tile:nth-child(-n+' + this.numberOfItemsInLine +')');\n            addonItems.eq(0).animate({ 'margin-left': -this.tileWidth * this.numberOfItemsInLine }, 250 * this.numberOfItemsInLine);\n            this.$timeout(() => {\n                addonItems.insertAfter($('.addon-tile').last());\n                $('.addon-tile').css('margin-left', '');\n            }, 250 * this.numberOfItemsInLine);\n        }, time);\n\n        console.log('%cSwitched to move all the line at a time', this.logColor);\n    }\n\n    onMouseWheel($event, $delta, $deltaX, $deltaY) {\n        $event.preventDefault();\n\n        if ($deltaX !== 0) {\n            if (this.lastDeltaX !== undefined && Math.abs($deltaX) <= this.lastDeltaX) {\n                this.lastDeltaX = Math.abs($deltaX);\n                return;\n            }\n            else {\n                this.lastDeltaX = Math.abs($deltaX);\n            }\n        }\n\n        if ($deltaX < 0) {\n            this.addonPrevButton();\n        }\n        else if ($deltaX > 0) {\n            this.addonNextButton();\n        }\n        else if ($delta > 0) {\n            this.addonPrevButton();\n        }\n        else if ($delta < 0) {\n            this.addonNextButton();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/addons_widget/addons.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class LinksController {\n    constructor(GoogleAnalytics) {\n        this.GoogleAnalytics = GoogleAnalytics;\n\n        this.links = [\n            {\n                linkText: 'User Guide',\n                class: 'user-guide',\n                url: 'https://service.jfrog.org/artifactory/home/userguide',\n                svg: 'images/userguide.1406.svg'\n            },\n            {\n                linkText: 'Webinar Signup',\n                class: 'webinar',\n                url: 'https://service.jfrog.org/artifactory/home/webinars',\n                svg: 'images/webinar.1406.svg'\n            },\n            {\n                linkText: 'Support Portal',\n                class: 'support',\n                url: 'https://service.jfrog.org/artifactory/home/supportportal',\n                svg: 'images/support.1406.svg'\n            },\n            {\n                linkText: 'Stack Overflow',\n                class: 'stackoverflow',\n                url: 'https://service.jfrog.org/artifactory/home/stackoverflow',\n                svg: 'images/stackoverflow.1406.svg'\n            },\n            {\n                linkText: 'Blog',\n                class: 'blogs',\n                url: 'https://service.jfrog.org/artifactory/home/blog',\n                svg: 'images/blogs.1406.svg'\n            },\n            {\n                linkText: 'Rest API',\n                class: 'rest-api',\n                url: 'https://service.jfrog.org/artifactory/home/restapi',\n                svg: 'images/rest_api.1406.svg'\n            }\n        ];\n\n    }\n\n    linkClick(linkText) {\n        this.GoogleAnalytics.trackEvent('Homepage','Knowledge Resources Link',linkText)\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/links_widget/links.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class MostDownloadedController {\n    constructor(HomePageDao, $timeout, ArtifactoryDeployModal, GoogleAnalytics) {\n\n        this.homePageDao = HomePageDao;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.deployModal = ArtifactoryDeployModal;\n        this.data = {};\n        this.getData(false);\n    }\n    getData(force) {\n        this.mostDownloaded;\n        this.homePageDao.get({widgetName:'mostDownloaded', force: force}).$promise.then((data)=> {\n            data.widgetData.mostDownloaded.forEach((item)=>{\n                item.name = item.path.substr(item.path.lastIndexOf('/')+1);\n            });\n            this.data = data.widgetData;\n            this.mostDownloaded = true;\n            if (this.mostDownloaded) {\n                this.$widgetObject.showSpinner = false;\n            }\n        });\n\n        this.dateTime = (new Date).getTime();\n    }\n    refresh() {\n        this.$widgetObject.showSpinner = true;\n        this.getData(true);\n    }\n    itemClick() {\n        this.GoogleAnalytics.trackEvent('Homepage', 'Most downloaded item click');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/most_downloaded_widget/most_downloaded.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class LastDeployedController {\n    constructor(HomePageDao, $timeout, ArtifactoryDeployModal, GoogleAnalytics) {\n\n        this.homePageDao = HomePageDao;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.deployModal = ArtifactoryDeployModal;\n        this.data = {};\n        this.getData();\n    }\n\n    getData() {\n        this.lastDeployed;\n\n        this.homePageDao.get({widgetName: 'latestBuilds'}).$promise.then((data)=> {\n            this.data = data.widgetData;\n            this.lastDeployed = true;\n            if (this.lastDeployed) {\n                this.$widgetObject.showSpinner = false;\n            }\n        });\n        this.dateTime = (new Date).getTime();\n    }\n\n    refresh() {\n        this.$widgetObject.showSpinner = true;\n        this.getData();\n    }\n\n    itemClick() {\n        this.GoogleAnalytics.trackEvent('Homepage', 'Last deployed item click');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/last_deployed_widget/last_deployed.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport fieldOptions from \"../../constants/field_options.constats\";\n\nexport class SetMeUpWidgetController {\n    constructor(TreeBrowserDao, SetMeUpModal, JFrogEventBus, ArtifactoryState, GoogleAnalytics) {\n\n        this.treeBrowserDao = TreeBrowserDao;\n        this.ArtifactoryState = ArtifactoryState;\n        this.GoogleAnalytics = GoogleAnalytics;\n        this.SetMeUpModal = SetMeUpModal;\n\n        let EVENTS = JFrogEventBus.getEventsDefinition();\n\n        JFrogEventBus.register(EVENTS.REFRESH_SETMEUP_WIZARD,()=>{\n            this.$widgetObject.showSpinner = true;\n            this.getRepos();\n        });\n\n        this.packageTypes = _.cloneDeep(fieldOptions.repoPackageTypes);\n        this.getRepos();\n    }\n\n    getRepos() {\n        this.treeBrowserDao.getRoots(true).then((repos)=>{\n            let repoOrder = this.ArtifactoryState.getState('repoOrder');\n            let repoScore = this._getScoreObjectFromOrderArray(repoOrder || ['DISTRIBUTION', 'LOCAL', 'REMOTE', 'VIRTUAL']);\n\n            this.repos = _.map(_.filter(repos,repo=>repo.repoType !== 'trash' &&\n                                                    repo.repoType !== 'distribution' &&\n                                                    repo.repoKey !== '_intransit'),repo=>{\n                let packageType = _.find(this.packageTypes,{serverEnumName: repo.repoPkgType});\n                if (packageType) repo.icon = packageType.icon;\n                return repo;\n            });\n\n            this.repos = this.filterCacheDoubles(this.repos);\n\n            this.repos = _.sortBy(this.repos, repo=>-repoScore[repo.repoType]);\n\n            this.$widgetObject.showSpinner = false;\n        })\n    }\n\n    filterCacheDoubles(repos) {\n        let DASH_CACHE = '-cache';\n        let cacheRepos = _.filter(repos,repo=>_.contains(repo.repoKey,DASH_CACHE));\n\n        cacheRepos.forEach(repo=>{\n            let remoteRepoKey = repo.repoKey.substr(0,repo.repoKey.length - DASH_CACHE.length);\n            let remote = _.find(repos,{repoKey: remoteRepoKey});\n            if (remote) { //We have a double, just remove the cached one from array\n                repos.splice(repos.indexOf(repo),1);\n            }\n            else { //We have only cache repo, change it's name to not include '-cache'\n                repo.repoKey = remoteRepoKey;\n            }\n        });\n\n        return repos;\n    }\n\n    showSetMeUp(repo) {\n        this.GoogleAnalytics.trackEvent('Homepage' , 'Quick set me up' , repo.repoPkgType, null, repo.repoType);\n        this.SetMeUpModal.launch(repo, true);\n    }\n\n    _getScoreObjectFromOrderArray(order) {\n        let repoScore = {};\n        let score = 100000;\n        order.forEach((repoType) => {\n            repoScore[repoType.toLowerCase()] = score;\n            if (repoType === 'REMOTE') {\n                repoScore['cached'] = score;\n                score = score / 10;\n            }\n            score = score / 10;\n        });\n        return repoScore;\n    }\n\n    filterHasNoMatches() {\n        if (!this.repoFilter) return false;\n\n        let count = _.filter(this.repos, (repo)=>_.contains(repo.repoKey,this.repoFilter)).length;\n        return count === 0;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./home_widgets/set_me_up_widget/set-me-up.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nfunction oauthErrorConfig ($stateProvider) {\n\n    $stateProvider\n            .state('oauth_error', {\n                url: '/oauth_error',\n                parent: 'app-layout',\n            })\n}\n\nexport default angular.module('oauth_error', [])\n        .config(oauthErrorConfig)\n\n\n\n// WEBPACK FOOTER //\n// ./states/oauth_error/oauth_error.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nfunction notFound404 ($stateProvider) {\n\n    $stateProvider\n        .state('not_found_404', {\n            url: '/404',\n            templateUrl: 'states/not_found_404/not_found_404.html',\n            parent: 'app-layout',\n        })\n}\n\nexport default angular.module('not_found_404', [])\n    .config(notFound404)\n\n\n// WEBPACK FOOTER //\n// ./states/not_found_404/not_found_404.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nfunction forbidden403 ($stateProvider) {\n\n    $stateProvider\n        .state('forbidden_403', {\n            url: '/403',\n            templateUrl: 'states/forbidden_403/forbidden_403.html',\n            parent: 'app-layout',\n        })\n}\n\nexport default angular.module('forbidden_403', [])\n    .config(forbidden403)\n\n\n// WEBPACK FOOTER //\n// ./states/forbidden_403/forbidden_403.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {LoginController} from './login.controller';\n\nfunction loginConfig($stateProvider) {\n    $stateProvider\n        .state('login', {\n            url: '/login?redirectTo',\n            templateUrl: 'states/login/login.html',\n            controller: 'LoginController as Login',\n            params: {oauthError: null},\n            parent: 'login-layout'\n        })\n        .state('logout', {\n            url: '/logout',\n            onEnter: (JFrogEventBus) => LoginController.staticLogout(JFrogEventBus, true),\n            parent: 'login-layout'\n        });\n}\n\nexport default angular.module('changePassword', [])\n    .config(loginConfig)\n        .controller('LoginController', LoginController);\n\n\n// WEBPACK FOOTER //\n// ./states/login/login.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../constants/artifacts_events.constants';\n\nexport class LoginController {\n\n    constructor($state, $timeout, FooterDao, $stateParams, User, $location, $window, ArtifactoryState, JFrogEventBus,\n                JFrogNotifications, ArtifactoryFeatures, OnBoardingWizard) {\n        this.user = {};\n        this.rememberMe = false;\n        this.UserService = User;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$window = $window;\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.$location = $location;\n        this.ArtifactoryState = ArtifactoryState;\n        this.ArtifactoryFeatures = ArtifactoryFeatures;\n        this.OnBoardingWizard = OnBoardingWizard;\n        this.FooterDao = FooterDao;\n        this.$timeout = $timeout;\n        this.canResetPassword = false;\n        this.canRememberMe = false;\n        this.loginForm = null;\n        this.pending = false;\n\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n\n        let isNotAnonymous = User.currentUser.name !== 'anonymous';\n        this.canExit = (isNotAnonymous || User.currentUser.anonAccessEnabled);\n\n        this.oauth = {}\n        User.getOAuthLoginData().then((response) => {\n            this.oauth.providers = response;\n        });\n\n        if ($stateParams.oauthError) this.errorMessage = $stateParams.oauthError;\n\n        this.checkResetPassword();\n\n        if (angular.isDefined(this.$stateParams.redirectTo)) {\n            this.UserService.loadUser(true).then(() => {\n                // User might be changed after load user\n                isNotAnonymous = User.currentUser.name !== 'anonymous';\n                if (isNotAnonymous && this.isLoggedIn()) {\n                    this.redirect();\n                }\n            })\n        }\n    }\n\n    login() {\n\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_SUBMITTED);\n\n        if (this.loginForm.$valid && !this.pending) {\n            this.pending = true;\n            this.UserService.login(this.user, this.rememberMe).then(success.bind(this), error.bind(this))\n        }\n\n        function success(result) {\n            if (this.redirect()) {\n                return;\n            }\n\n            this.pending = false;\n            let urlAfterLogin = this.ArtifactoryState.getState('urlAfterLogin');\n            let aolOnboarding = this.ArtifactoryState.getState('aolOnboarding');\n\n            this.ArtifactoryState.setState('clearErrorsOnStateChange', true)\n\n            if (aolOnboarding) {\n                this.ArtifactoryState.setState('onboarding', undefined);\n                this.OnBoardingWizard.isSystemOnboarding().then((onBoarding) => {\n                    if (onBoarding) {\n                        this.$state.go('home').then(() => this.OnBoardingWizard.show());\n                    }\n                    else {\n                        this.changeUrlWhenNotOnboarding(urlAfterLogin);\n                    }\n                });\n            }\n            else {\n                this.OnBoardingWizard.setInitStatus();\n                this.changeUrlWhenNotOnboarding(urlAfterLogin);\n            }\n        }\n\n        function error(response) {\n            this.pending = false;\n            if (response.data) {\n                if (!this.catchExpired(response)) {\n                    this.errorMessage = response.data.feedbackMsg.error;\n                }\n            }\n        }\n\n    }\n\n    redirect() {\n        if (angular.isDefined(this.$stateParams.redirectTo)) {\n            this.UserService.redirect(this.$stateParams.redirectTo)\n                .catch(err => {\n                    this.showErrorMessage(err.message || err)\n                });\n            return true;\n        }\n\n        return false;\n    }\n\n    isRedirecting() {\n        return angular.isDefined(this.$stateParams.redirectTo)\n    }\n\n    isSSOMode() {\n        return !(this.ArtifactoryFeatures.isOss() || this.ArtifactoryFeatures.isConanCE())\n    }\n\n    changeUrlWhenNotOnboarding(urlAfterLogin) {\n        if (urlAfterLogin) {\n            this.$location.path(urlAfterLogin);\n        }\n        else {\n            this.$state.go('home');\n        }\n    }\n\n    /**\n     * Check if already logged in\n     * */\n    isLoggedIn() {\n        return this.UserService.getCurrent().isLoggedIn();\n    }\n\n    shouldShowAlreadyLoginMessage() {\n        return this.isLoggedIn() && !this.isRedirecting();\n    }\n\n\n\n    /**\n     * Logout is dispatching an event.\n     * The handler also checks if the current state is one of the admin states.\n     * This is done in order to make sure that logout happens only after all open admin states (windows) are closed.\n     * Otherwise the user could be stuck with an unresponsive screen.\n     * */\n    logOut() {\n        LoginController.staticLogout(this.JFrogEventBus, \"logoutAndLogin\");\n    }\n\n    static staticLogout(JFrogEventBus, confirmDiscard) {\n        JFrogEventBus.dispatch(EVENTS.USER_LOGOUT, confirmDiscard);\n    }\n\n    /**\n     * Go to home state\n     * */\n    goHome() {\n        this.UserService.$state.go(\"home\");\n    }\n\n    catchExpired(response) {\n        let code = 'CREDENTIALS_EXPIRED';\n        if (response.data && response.data.code && response.data.code === code) {\n            let msg = response.data.feedbackMsg.error;\n            if (response.data.profileUpdatable) {\n                this.$state.go('change-password', {username: this.user.user});\n            }\n            else {\n                this.showErrorMessage(msg);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    showErrorMessage(msg) {\n        msg += '.\\nPlease contact your system administrator.'\n        this.artifactoryNotifications.create({error: msg});\n    }\n\n    userPasswordChanged() {\n        this.errorMessage = null;\n    }\n\n    checkResetPassword() {\n        this.UserService.getLoginData(this.$stateParams.redirectTo).then((response) => {\n            this.canResetPassword = response.forgotPassword;\n            this.canRememberMe = response.canRememberMe;\n            this.ssoProviderLink = response.ssoProviderLink;\n            this.oauthProviderLink = response.oauthProviderLink;\n        });\n    }\n\n    gotoForgotPwd() {\n        this.$state.go('forgot-password');\n    }\n\n    /*\n        oauthLogin() {\n            this.$window.open(this.oauthProviderLink,'_self');\n        }\n    */\n\n    ssoLogin() {\n        this.UserService.loadUser(true).then((user) => {\n           user.name === 'anonymous' ? this.$window.open(this.ssoProviderLink, '_self') : this.redirect();\n        });\n    }\n\n    isOAuthEnabled() {\n        return this.oauth.providers && this.oauth.providers.length > 0;\n    }\n\n    onGotoOAuth() {\n        localStorage.stateBeforeOAuth = this.$state.current.name;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/login/login.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ChangePasswordController} from './change_password.controller';\n\nfunction changePasswordConfig ($stateProvider) {\n    $stateProvider\n            .state('change-password', {\n                url: '/change-password',\n                templateUrl: 'states/change_password/change_password.html',\n                controller: 'ChangePasswordController as ChangePassword',\n                parent: 'login-layout',\n                params: {username: ''},\n            })\n}\n\nexport default angular.module('login', [])\n        .config(changePasswordConfig)\n        .controller('ChangePasswordController', ChangePasswordController);\n\n\n// WEBPACK FOOTER //\n// ./states/change_password/change_password.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class ChangePasswordController {\n\n    constructor(UserDao, $state, $stateParams) {\n        this.$state = $state;\n        this.userDao = UserDao.getInstance();\n        this.fields = {};\n        this.username = $stateParams.username;\n    }\n\n    passwordsMatch() {\n        return this.fields.newPassword === this.fields.retypeNewPassword;\n    }\n\n    change() {\n        this.userDao.changePassword({},{\n            userName: this.username,\n            oldPassword: this.fields.oldPassword,\n            newPassword1: this.fields.newPassword,\n            newPassword2: this.fields.retypeNewPassword\n        }).$promise.then((res)=>{\n            if (res.status === 200) {\n                this.$state.go('login');\n            }\n\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/change_password/change_password.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ForgotPasswordController} from './forgot_password.controller.js';\nimport {ResetPasswordController} from './reset_password.controller.js';\n\nfunction forgotPasswordConfig ($stateProvider) {\n    $stateProvider\n\n            .state('forgot-password', {\n                url: '/forgot-password',\n                templateUrl: 'states/forgot_password/forgot_password.html',\n                controller: 'ForgotPasswordController as ForgotPassword',\n                parent: 'login-layout'\n            })\n\n            .state('reset-password', {\n                url: '/resetpassword?key',\n                templateUrl: 'states/forgot_password/reset_password.html',\n                controller: 'ResetPasswordController as ResetPassword',\n                parent: 'login-layout'\n            })\n}\n\nexport default angular.module('forgotPassword', [])\n        .config(forgotPasswordConfig)\n        .controller('ForgotPasswordController', ForgotPasswordController)\n        .controller('ResetPasswordController', ResetPasswordController);\n\n\n// WEBPACK FOOTER //\n// ./states/forgot_password/forgot_password.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst EMAIL_SENT_MESSAGE = \"Reset password email was sent. \\nDidn't receive it? Contact your system administrator.\";\n\nexport class ForgotPasswordController {\n\n    constructor($state, User, JFrogNotifications, JFrogEventBus) {\n        this.user = {};\n        this.UserService = User;\n        this.$state = $state;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.JFrogEventBus = JFrogEventBus;\n        this.forgotPasswordForm = null;\n        this.message = '';\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n    }\n\n    forgot() {\n        let self = this;\n\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_SUBMITTED);\n        if (this.forgotPasswordForm.$valid) {\n            this.pending = true;\n            this.UserService.forgotPassword(this.user).then(success, error)\n        } else {\n            form.user.$dirty = true;\n        }\n\n        function success(result) {\n            self.pending = false;\n            self.$state.go('login');\n            self.artifactoryNotifications.create({info: EMAIL_SENT_MESSAGE});\n        }\n\n        function error(errors) {\n            self.pending = false;\n            self.$state.go('login');\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/forgot_password/forgot_password.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst PASSWORD_CHANGED_MESSAGE = 'Password changed successfully';\n\nexport class ResetPasswordController {\n\n    constructor($stateParams, User, $state, JFrogNotifications, JFrogEventBus, $timeout) {\n        this.$stateParams = $stateParams;\n        this.userService = User;\n        this.$state = $state;\n        this.key = $stateParams.key;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.JFrogEventBus = JFrogEventBus;\n        this.ResetPasswordForm = null;\n        this.$timeout = $timeout;\n        this.user = {};\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n    }\n\n    resetPassword() {\n        var self = this;\n\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_SUBMITTED);\n\n        if (this.ResetPasswordForm.$valid) {\n            this.userService.validateKey(this.key).then(success, error);\n        }\n\n        function success(response) {\n            if (response.data.user) {\n                self.user.user = response.data.user;\n                self.userService.resetPassword(self.key, self.user).then(function (response) {\n                    self.artifactoryNotifications.create(response.data);\n                    self.$state.go('login');\n                });\n            }\n        }\n\n        function error(errors) {\n            if (errors.data.error) {\n                self.artifactoryNotifications.create({error: errors.data.error});\n            }\n        }\n    }\n\n    checkMatchingPasswords() {\n        this.$timeout(() => {\n            if (this.ResetPasswordForm.password.$valid && this.ResetPasswordForm.repeatPassword.$valid) {\n            this.JFrogEventBus.dispatch(this.EVENTS.FORM_CLEAR_FIELD_VALIDATION);\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/forgot_password/reset_password.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {UserProfileController} from \"./user_profile.controller\";\n\nfunction config ($stateProvider) {\n\n    $stateProvider\n            .state('user_profile', {\n                url: '/profile',\n                parent: 'app-layout',\n                templateUrl: 'states/user_profile/user_profile.html',\n                controller: 'UserProfileController as UserProfile'\n            })\n}\n\nexport default angular.module('user_profile', [])\n        .config(config)\n        .controller('UserProfileController', UserProfileController)\n\n\n// WEBPACK FOOTER //\n// ./states/user_profile/user_profile.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport TOOLTIPS from '../../constants/artifact_tooltip.constant';\n\nexport class UserProfileController {\n\n    constructor($state, $scope, UserProfileDao, ArtifactoryFeatures, BintrayDao, SshClientDao, JFrogNotifications,\n            User, JFrogEventBus, ArtifactoryModelSaver, OAuthDao, JFrogGridFactory, JFrogModal, ArtifactoryState) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.passwordRank = 0;\n        this.userProfileDao = UserProfileDao;\n        this.bintrayDao = BintrayDao.getInstance();\n        this.sshClientDao = SshClientDao;\n        this.artifactoryNotifications = JFrogNotifications;\n        this.User = User;\n        this.currentUser = User.getCurrent();\n        this.JFrogEventBus = JFrogEventBus;\n        this.artifactoryGridFactory = JFrogGridFactory;\n        this.OAuthDao = OAuthDao;\n        this.features = ArtifactoryFeatures;\n        this.ArtifactoryModelSaver = ArtifactoryModelSaver.createInstance(this, ['userInfo'], ['apiKey']);\n        this.modal = JFrogModal;\n        this.EVENTS = JFrogEventBus.getEventsDefinition();\n\n        this.userInfo = {};\n        this.currentPassword = null;\n        this.showUserApiKey = false;\n        this.showBintrayApiKey = false;\n        this.profileLocked = true;\n\n        this.tooltips = TOOLTIPS.userProfile;\n        this.artifactoryState = ArtifactoryState;\n        this.emailChanged=false;\n\n        // Reloading is necessary since the User object is cached,\n        // and once the session is over the data becomes deprecated\n        this.User.loadUser(true).then(()=> {\n            if(this.currentUser.name == 'anonymous'){\n                $state.go('login');\n            }\n            $('body').addClass('load-complete');\n        });\n\n        if (this.User.currentUser.requireProfileUnlock === false && this.User.currentUser.existsInDB) {\n            this.unlock();\n        }\n    }\n\n    unlock() {\n        this.userProfileDao.fetch({password: this.User.currentUser.requireProfileUnlock === true ? this.currentPassword : ''}).$promise\n            .then(response => {\n                this.userInfo = response.data;\n        this.ArtifactoryModelSaver.save();\n                //console.log(this.userInfo);\n                this.profileLocked = false;\n\n                if (!this.features.isNonCommercial()) {\n                    this._initOAuthData();\n                }\n\n                this._getApiKey();\n\n            });\n    }\n\n    _getApiKey() {\n        if (this.User.currentUser.requireProfileUnlock && this.User.currentUser.requireProfilePassword) {\n            this.userProfileDao.getApiKey.authenticate({username: this.currentUser.name, password: this.currentPassword});\n        }\n\n        this.userProfileDao.getApiKey().$promise.then((res)=>{\n            this.userInfo.apiKey = res.apiKey;\n        });\n    }\n\n\n    revokeApiKey() {\n        this.modal.confirm(`Are you sure you want to revoke your API key?`)\n                .then(() => {\n                    this.userProfileDao.revokeApiKey.authenticate({username: this.currentUser.name, password: this.currentPassword})\n                    this.userProfileDao.revokeApiKey().$promise.then((res)=> {\n                        this._getApiKey();\n                        this.artifactoryState.removeState('setMeUpUserData');\n                    });\n                });\n    }\n    regenerateApiKey() {\n        //\n        this.modal.confirm(`Are you sure you want to regenerate your API key?`)\n            .then(() => {\n                this.userProfileDao.regenerateApiKey.authenticate({username: this.currentUser.name, password: this.currentPassword});\n                this.userProfileDao.regenerateApiKey({username: this.currentUser.name}).$promise.then((res)=>{\n                    if (res.apiKey) {\n                        this.artifactoryNotifications.create({info: 'Successfully regenerated API key'});\n                        this.userInfo.apiKey = res.apiKey;\n                        let oldSMUUserData = this.artifactoryState.getState('setMeUpUserData');\n                        if (oldSMUUserData) {\n                            oldSMUUserData.apiKey = this.userInfo.apiKey;\n                        }\n                    }\n                    else {\n                        this.artifactoryNotifications.create({error: 'Failed to regenerate API key'});\n                    }\n                });\n            });\n\n    }\n    generateApiKey() {\n        this.userProfileDao.getAndCreateApiKey.authenticate({username: this.currentUser.name, password: this.currentPassword});\n        this.userProfileDao.getAndCreateApiKey({username: this.currentUser.name}).$promise.then((res)=>{\n            if (res.apiKey) {\n                this.artifactoryNotifications.create({info: 'Successfully generated API key'});\n                this.userInfo.apiKey = res.apiKey;\n            }\n            else {\n                this.artifactoryNotifications.create({error: 'Failed to generate API key'});\n            }\n        });\n    }\n\n    _initOAuthData() {\n\n        this.oauth = {};\n\n        this.User.getOAuthLoginData().then((response) => {\n            this.oauth.providers = response;\n\n            this.OAuthDao.getUserTokens().$promise.then((data)=>{\n                data.forEach((providerName) => {\n                    let provider = _.findWhere(this.oauth.providers, {name: providerName});\n                    if (provider) {\n                        provider.binded = true;\n                    }\n                });\n            });\n        });\n\n    }\n\n    unbindOAuthProvider(providerName) {\n        this.OAuthDao.deleteUserToken({},{username: this.currentUser.name, provider: providerName}).$promise.then((res)=>{\n            this._initOAuthData();\n        });\n    }\n    onEmailChanged() {\n        this.emailChanged = true;\n    }\n    save() {\n        if (this.userInfo.user.newPassword && this.userInfo.user.newPassword !== this.userInfo.user.retypePassword) {\n            this.artifactoryNotifications.create({error: 'Passwords do not match'});\n            return;\n        }\n\n        let params = {\n            user: {\n                email: this.userInfo.user.email,\n                password: this.userInfo.user.newPassword\n            },\n            bintray: this.userInfo.bintray,\n            ssh: this.userInfo.ssh\n        };\n\n        if(this.emailChanged) {\n            this.artifactoryState.removeState('setMeUpUserData');\n        }\n\n        this.userProfileDao.update(params).$promise.then(()=>{\n            this.changePassword = false;\n            this.clearPasswordFields();\n            this.User.reload();\n            this.ArtifactoryModelSaver.save();\n        });\n    }\n\n    clearPasswordFields() {\n        delete this.userInfo.user.newPassword;\n        delete this.userInfo.user.retypePassword;\n    }\n\n    testBintray() {\n        this.JFrogEventBus.dispatch(this.EVENTS.FORM_SUBMITTED, this.bintrayForm.$name);\n        this.bintrayDao.fetch(this.userInfo.bintray);\n    }\n\n    isOAuthEnabled() {\n        return this.oauth && this.oauth.providers && this.oauth.providers.length > 0 && this.userInfo.user.realm === 'internal';\n    }\n\n    onGotoOAuth() {\n        localStorage.stateBeforeOAuth = this.$state.current.name;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/user_profile/user_profile.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by tomere on 16/03/2017.\n */\n\nfunction config ($stateProvider) {\n\n    $stateProvider\n            .state('server_error_5XX', {\n                templateUrl: 'states/server_error_5XX/server_error_5XX.html',\n                parent: 'app-layout',\n            })\n}\n\nexport default angular.module('server_error_5XX', [])\n        .config(config)\n\n\n// WEBPACK FOOTER //\n// ./states/server_error_5XX/server_error_5XX.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nfunction config ($stateProvider) {\n\n    $stateProvider\n            .state('server_down', {\n                templateUrl: 'states/server_down/server_down.html'\n            })\n}\n\nexport default angular.module('server_down', [])\n        .config(config)\n\n\n// WEBPACK FOOTER //\n// ./states/server_down/server_down.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {BaseController} from './base.controller';\n\nfunction baseConfig($stateProvider) {\n\t$stateProvider\n\t\t// Base state for all application states\n        .state('app-layout', {\n            url: '',\n            abstract: true,\n            templateUrl: 'layouts/application.html',\n            controller: 'BaseController as Base'\n        })\n\t\t// Base state for all login related states (login, forgot password, etc.)\n        .state('login-layout', {\n            url: '',\n            abstract: true,\n            templateUrl: 'layouts/login.html'\n        })\n\n}\n\nexport default angular.module('base.module', [])\n\t\t.config(baseConfig)\n        .controller('BaseController', BaseController)\n\n\n\n// WEBPACK FOOTER //\n// ./states/base/base.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class BaseController {\n    constructor(FooterDao,ArtifactorySidebarDriver,$timeout) {\n\n        this.FooterDao = FooterDao;\n        this.$timeout = $timeout;\n\n        this.getFooterData();\n\n        this.sidebarDriver = ArtifactorySidebarDriver;\n    }\n\n    getFooterData(force = false) {\n        // Ensure page is not displayed before we get the footer data\n        this.FooterDao.get(force).then(footerData => this.footerData = footerData);\n\n\n        // Check that we have the footer data, solve RTFACT-13069 (Happens inconsistently when restarting server / starting vanilla)\n        this.$timeout(()=>{\n            if (!this.footerData) {\n                this.getFooterData(true);\n            }\n        },100)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/base/base.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {SearchStateController} from './search.controller';\nimport {searchQueryMaker} from './search_query_maker';\nimport {packageSearch} from './package_search';\n\n\nfunction searchConfig($stateProvider) {\n    $stateProvider\n\n        .state('search', {\n            url: '/search/{searchType}/{query}',\n            parent: 'app-layout',\n            templateUrl: 'states/search/search.html',\n            controller: 'SearchStateController as SearchController',\n            params: {oauthError: null, fromHome: false},\n        })\n}\n\nexport default angular.module('search', [])\n    .config(searchConfig)\n    .directive('searchQueryMaker', searchQueryMaker)\n    .directive('packageSearch', packageSearch)\n    .controller('SearchStateController', SearchStateController);\n\n\n\n\n// WEBPACK FOOTER //\n// ./states/search/search.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from \"../../constants/artifacts_events.constants\";\nimport TOOLTIP from \"../../constants/artifact_tooltip.constant\";\n\nexport class SearchStateController {\n\n\tconstructor($q, $state, $scope, $window, $stateParams, $compile, $timeout, JFrogNotifications, uiGridConstants, commonGridColumns, ArtifactSearchDao, ArtifactPackageSearchDao, JFrogModal,\n\t            JFrogGridFactory, FooterDao, RepositoriesDao, ArtifactActions, RepoDataDao, ArtifactActionsDao, SetMeUpDao, User, UserProfileDao, JFrogEventBus, $injector, StashResultsDao,\n\t            GoogleAnalytics, ArtifactoryFeatures, ArtifactViewSourceDao) {\n\t\tthis.$q = $q;\n\t\tthis.inject                 = $injector.get;\n\t\tthis.modal = JFrogModal;\n\t\tthis.artifactSearchDao      = ArtifactSearchDao;\n\t\tthis.stashResultsDao        = StashResultsDao;\n\t\tthis.repositoriesDao        = RepositoriesDao;\n\t\tthis.notifications          = JFrogNotifications;\n        this.artifactViewSourceDao  = ArtifactViewSourceDao.getInstance();\n        this.$state                 = $state;\n\t\tthis.$scope                 = $scope;\n\t\tthis.$window                = $window;\n\t\tthis.$timeout               = $timeout;\n\t\tthis.$compile               = $compile;\n\t\tthis.$stateParams           = $stateParams;\n\t\tthis.title                  = 'Search Artifacts';\n\t\tthis.uiGridConstants        = uiGridConstants;\n\t\tthis.commonGridColumns      = commonGridColumns;\n\t\tthis.artifactoryGridFactory = JFrogGridFactory;\n\t\tthis.artifactActionsDao     = ArtifactActionsDao;\n\t\tthis.actions                = ArtifactActions;\n\t\tthis.repoDataDao            = RepoDataDao;\n\t\tthis.footerDao              = FooterDao;\n        this.currentUser \t\t\t= User.getCurrent();\n\t\tthis.userProfileDao         = UserProfileDao;\n\t\tthis.JFrogEventBus          = JFrogEventBus;\n\t\tthis.GoogleAnalytics        = GoogleAnalytics;\n\t\tthis.artifactPackageSearchDao = ArtifactPackageSearchDao;\n\t\tthis.setMeUpDao             = SetMeUpDao;\n        this.features\t\t\t\t= ArtifactoryFeatures;\n\t\tthis.options                = ['quick', 'package', 'archive', 'property', 'checksum', 'remote', 'trash'];\n\t\tthis.currentSearch          = this.$stateParams.searchType || localStorage.lastSearchType || 'quick';\n\t\tthis.resultsMsg             = 'Search Results';\n\t\tthis.TOOLTIP = TOOLTIP.artifacts.search;\n\t\tthis.gridOptions            = {};\n\t\tthis.repoList               = [];\n\t\tthis.query                  = this.$stateParams.query ? JSON.parse(atob(this.$stateParams.query)) : {};\n\n\t\tif (this.features.isConanCE() || this.features.isEdgeNode()) {\n            this.options = _.filter(this.options, (i) => {return i != 'remote'});\n\n\t\t}\n\n\t\tthis.JFrogEventBus.registerOnScope(this.$scope, EVENTS.REFRESH_PAGE_CONTENT,()=>{\n\t\t\tthis.refreshRepoList();\n\t\t});\n\n\t\tthis.packageTypesDefer = $q.defer();\n\t\tthis._initSearch();\n\n\t\tif (localStorage.lastSearchType === 'package') {\n\t\t\tthis.packageTypesDefer.promise.then(()=>{\n\t\t\t\tif (localStorage.lastPackageSearch) {\n\t\t\t\t\tlet packageType = _.find(this.availablePackageTypes,{id: localStorage.lastPackageSearch});\n\t\t\t\t\tthis.selectedPackageType = packageType;\n\t\t\t\t}\n\t\t\t\tthis.onPackageTypeChange();\n\t\t\t})\n\t\t}\n\n\t\t//Check if Trash Can search should be available\n\t\tthis.currentUser = User.getCurrent();\n\t\tlet trashDisabled = this.footerDao.get().then((footerData)=>{\n\t\t\tif (footerData.trashDisabled || !this.currentUser.isAdmin()) {\n\t\t\t\tthis.options.pop()\n\t\t\t\tif (this.currentSearch === 'trash') this.currentSearch = 'quick';\n\t\t\t}\n\t\t});\n\n\t\t//Check if jCenter is configured\n\t\tif (!this.features.isConanCE() && !this.features.isEdgeNode()) {\n            this.repositoriesDao.isJcenterRepoConfigured().$promise\n                    .then(() => this.isJcenterExists = true, () => this.isJcenterExists = false);\n        }\n\n\t\t// init the query when the search type change\n\t\t$scope.$watch( () => this.currentSearch, () => {\n\n\t\t\tthis.updateUrl();\n\t\t\tlocalStorage.lastSearchType = this.currentSearch;\n\n\t\t\tif (this.currentSearch === 'package') {\n\t\t\t\tthis._createPackageSearchColumnsObject();\n\n\t\t\t\t//Focus on the package type dropdown\n\t\t\t\tthis.$timeout(()=>{\n\t\t\t\t\tlet e = angular.element($('.package-type-selection').children('.ui-select-container')[0]);\n\t\t\t\t\tlet c = e.controller('uiSelect');\n\t\t\t\t\tc.focusser[0].focus();\n\n\t\t\t\t\tthis.onPackageTypeChange();\n\t\t\t\t})\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.query.selectedPackageType) {\n\t\t\t\t\tdelete this.query.selectedPackageType;\n\t\t\t\t\tthis.updateUrl();\n\t\t\t\t}\n\t\t\t\tthis.refreshGrid();\n\t\t\t}\n\t\t});\n\n\t\tthis._updateStashStatus();\n\n\n\t}\n\n\tupdateUrl() {\n\t\tlet queryClone = _.cloneDeep(this.query);\n\t\tdelete queryClone.search;\n\t\tthis.$state.transitionTo('.', {searchType: this.currentSearch, query: !_.isEmpty(queryClone) ? btoa(JSON.stringify(this.query)) : ''}, { location: this.$stateParams.searchType ? true : 'replace', inherit: true, relative: this.$state.$current, notify: false })\n\t}\n\n\tsearch() {\n\t\tthis.lastQuery = _.cloneDeep(this.query);\n\t\tthis.updateUrl();\n\t\tthis._trackGaEvent(this.currentSearch);\n\t\tif (this.currentSearch === 'package' && this.query.search !== 'gavc') {\n\t\t\tlet repos = _.find(this.query.packagePayload, {id: 'repo'});\n\t\t\tif (repos && repos.values && repos.values.length === 0) {\n\t\t\t\tthis.notifications.create({warn: \"Select at least one repository to search\"});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.artifactPackageSearchDao.runQuery({},this._getQueryWithImplicitWildCard(this.query.packagePayload)).$promise.then((result)=>{\n\t\t\t\t\tresult = result.data;\n\n\t\t\t\t\t_.map(result.results, (result)=>{\n\t\t\t\t\t\tif (result.extraFields) {\n\t\t\t\t\t\t\tfor (let key in result.extraFields) {\n\t\t\t\t\t\t\t\tresult['extraField_'+key] = result.extraFields[key].join(', ');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete result.extraFields;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.resultsMsg = result.message;\n\t\t\t\t\tthis.gridOptions.setGridData(result.results);\n\t\t\t\t\tthis.results = result.results;\n\t\t\t\t\tthis.savedToStash = false;\n\t\t\t\t\tif (result.searchExpression) {\n\t\t\t\t\t\tthis.cleanAql = result.searchExpression;\n\t\t\t\t\t\tthis._updateAQL();\n\t\t\t\t\t\tthis.showAQL = false;\n\t\t\t\t\t\tthis.$timeout(()=>{\n\t\t\t\t\t\t\tlet showAqlButtonElem = $('#show-aql-button-orig');\n\t\t\t\t\t\t\tlet aqlViewerElem = $('#aql-viewer-orig').clone();\n\t\t\t\t\t\t\tlet gridFilterElem = $('jf-grid-filter');\n\t\t\t\t\t\t\tlet gridActionElem = $('.wrapper-grid-actions');\n\t\t\t\t\t\t\tlet clone = showAqlButtonElem.clone();\n\t\t\t\t\t\t\tclone.attr('id', 'show-aql-button');\n\t\t\t\t\t\t\taqlViewerElem.attr('id','aql-viewer');\n\t\t\t\t\t\t\tgridFilterElem.append(clone);\n\t\t\t\t\t\t\tclone.css('display','block');\n\t\t\t\t\t\t\tthis.$compile(clone)(this.$scope);\n\n\t\t\t\t\t\t\tgridActionElem.after(aqlViewerElem);\n\t\t\t\t\t\t\taqlViewerElem.css('display','block');\n\t\t\t\t\t\t\tlet clipCopyElement = aqlViewerElem.find('jf-clip-copy')\n\t\t\t\t\t\t\tclipCopyElement.addClass('code-mirror-copy');\n\t\t\t\t\t\t\tthis.$compile(aqlViewerElem)(this.$scope);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet payloadQuery = _.cloneDeep(this.query);\n\t\t\tif (this.currentSearch === 'property') {\n\t\t\t\tif (payloadQuery.propertySetKeyValues) {\n\t\t\t\t\tif (!payloadQuery.propertyKeyValues) payloadQuery.propertyKeyValues = [];\n\t\t\t\t\tpayloadQuery.propertySetKeyValues.forEach((propSet) => {\n\t\t\t\t\t\tpayloadQuery.propertyKeyValues.push(propSet);\n\t\t\t\t\t});\n\t\t\t\t\tdelete payloadQuery.propertySetKeyValues;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse if (this.currentSearch === 'trash') {\n\t\t\t\tpayloadQuery.isChecksum = payloadQuery.isChecksum || false;\n\t\t\t}\n\n\t\t\tif (payloadQuery.selectedRepositories && payloadQuery.selectedRepositories.length ==0) {\n\t\t\t\tthis.notifications.create({warn: \"Select at least one repository to search\"});\n\t\t\t\tthis.resultsMsg = 'Search Results';\n\t\t\t\tthis.gridOptions.setGridData([]);\n\t\t\t\tthis.results      = [];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.artifactSearchDao.fetch(this._getQueryWithImplicitWildCard(payloadQuery)).$promise.then((result) => {\n\t\t\t\t\tthis.resultsMsg = result.data.message;\n\t\t\t\t\tthis.gridOptions.setGridData(result.data.results);\n\t\t\t\t\tthis.results      = result.data.results;\n\t\t\t\t\tthis.savedToStash = false;\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\treSearch() {\n\t\tthis.query = this.lastQuery;\n\t\tthis.search();\n\t}\n\n\t_getQueryWithImplicitWildCard(query) {\n\n\t\tlet getNewVal = (oldVal) => {\n\n\t\t\tif (!oldVal) return oldVal;\n\n\t\t\toldVal = oldVal.trim();\n\t\t\tlet newVal;\n\t\t\tif (oldVal.startsWith('\"') && oldVal.endsWith('\"')) {\n\t\t\t\tnewVal = oldVal.substr(1, oldVal.length - 2);\n\t\t\t}\n\t\t\telse if (!oldVal.endsWith('*')) {\n\t\t\t\tnewVal = oldVal + '*';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewVal = oldVal;\n\t\t\t}\n\n\t\t\treturn newVal;\n\t\t};\n\n\t\tlet newQuery = _.cloneDeep(query);\n\n\t\tif (this.currentSearch === 'package') {\n\t\t\tif (newQuery.search === 'gavc') {\n\t\t\t\tnewQuery.artifactID = getNewVal(newQuery.artifactID);\n\t\t\t\tnewQuery.classifier = getNewVal(newQuery.classifier);\n\t\t\t\tnewQuery.groupID    = getNewVal(newQuery.groupID);\n\t\t\t\tnewQuery.version    = getNewVal(newQuery.version);\n\t\t\t}\n\t\t\telse { //standard package search, not gavc\n\t\t\t\tnewQuery.forEach((cond) => {\n\t\t\t\t\tif (cond.id !== 'repo') {\n\t\t\t\t\t\tlet newVals = [];\n\t\t\t\t\t\tcond.values.forEach((val) => {\n\t\t\t\t\t\t\tnewVals.push(getNewVal(val));\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcond.values = newVals;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (let key in newQuery) {\n\t\t\t\tlet val = newQuery[key];\n\t\t\t\tif (_.isString(val) && key !== 'search') {\n\t\t\t\t\tif (!(key === 'checksum' ||\n\t\t\t\t\t\t\t(this.currentSearch === 'trash' && key === 'query' && newQuery.isChecksum))) {\n\t\t\t\t\t\tnewQuery[key] = getNewVal(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (key === 'propertyKeyValues' || key === 'propertySetKeyValues') {\n\t\t\t\t\tval.forEach((prop)=>{\n\t\t\t\t\t\tif (prop.key) prop.key = getNewVal(prop.key);\n\t\t\t\t\t\tif (prop.values) {\n\t\t\t\t\t\t\tfor (let i in prop.values) {\n\t\t\t\t\t\t\t\tprop.values[i] = getNewVal(prop.values[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn newQuery;\n\n\t}\n\n\t_updateAQL() {\n\t\tif (this.cleanAql) {\n\t\t\tthis.aql = `curl -H 'Content-Type:text/plain' -H 'X-JFrog-Art-Api: <YOUR_API_KEY> -X POST ${this.baseUrl}/api/search/aql -d '\\n${this.cleanAql}'`\n\t\t}\n\t}\n\n\t_initSearch(params) {\n\n\t\tthis.artifactPackageSearchDao.availablePackages().$promise.then((data)=> {\n\t\t\tdata = _.filter(data, (packageType)=> {\n\t\t\t\treturn !packageType.id.startsWith('docker') && (!this.isOss || packageType.id === \"gavc\");\n\t\t\t});\n\t\t\tlet i = 0;\n\t\t\t_.forEach(data, () => {\n\t\t\t\tif (data[i].displayName === \"GAVC\") {\n\t\t\t\t\tdata[i].displayName = \"Maven GAVC\";\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t});\n\t\t\tif (!this.isOss) {\n\t\t\t\tdata.unshift({\n\t\t\t\t\tid: 'dockerV2',\n\t\t\t\t\ticon: 'docker',\n\t\t\t\t\tdisplayName: 'Docker'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.features.isConanCE()) {\n\t\t\t\tdata = _.filter(data, (pack) => {\n\t\t\t\t\treturn pack.id === 'conan';\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.availablePackageTypes = _.sortBy(data, (pack) => {\n\t\t\t\treturn pack.displayName;\n\t\t\t});\n\t\t\tthis.packageTypesDefer.resolve();\n\t\t})\n\n\t\tif (!this.repoList.length) {\n\t\t\tthis.refreshRepoList();\n\t\t}\n\n\t\tif (!this.propertiesOptions) this.getProperties();\n\n\t\tif (params && params.params) {\n\t\t\tthis.query = JSON.parse(atob(params.params));\n\n\t\t\tif (this.currentSearch === 'package') {\n\t\t\t\tthis.packageSearchColumns = this.query.columns;\n\t\t\t}\n\t\t\tthis._getGridData();\n\t\t}\n\t\telse {\n\t\t\tif (this.currentSearch === 'package') {\n\t\t\t\tthis.packageSearchColumns = ['artifact', 'path', 'repo', 'modified'];\n\t\t\t}\n\t\t}\n\n\t\t//get set me up data (for baseUrl)\n\t\tthis.setMeUpDao.get().$promise.then((result)=> {\n\t\t\tthis.baseUrl = result.baseUrl;\n\t\t\tthis._updateAQL();\n\t\t});\n\t\t//.authenticate({username: this.currentUser.name, password: this.currentPassword})\n\t\t// this.userProfileDao.getApiKey().$promise.then((res)=> {\n\t\t// \tthis.apiKey = res.apiKey;\n\t\t// \tthis._updateAQL();\n\t\t// });\n\t}\n\n\trefreshRepoList(){\n\t\t//            let getFuncName = this.currentSearch === 'package' ? 'getForPackageSearch' : 'getForSearch';\n\t\t['getForSearch','getForPackageSearch'].forEach((getFuncName) => {\n\t\t\tthis.repoDataDao[getFuncName]().$promise.then((result)=> {\n\t\t\t\tresult.repoTypesList = _.map(result.repoTypesList, (repo)=> {\n\t\t\t\t\trepo._iconClass = \"icon \" + (repo.type === 'local' ? \"icon-local-repo\" : (repo.type === 'remote' ? \"icon-remote-repo\" : (repo.type === 'virtual' ? \"icon-virtual-repo\" : (repo.type === 'distribution' ? \"icon-distribution-repo\" : \"icon-notif-error\"))));\n\t\t\t\t\treturn repo;\n\t\t\t\t});\n\n\t\t\t\tlet dists  = _.filter(result.repoTypesList, repo => repo.type === 'distribution');\n\t\t\t\tlet locals = _.filter(result.repoTypesList, repo => repo.type === 'local');\n\t\t\t\tlet caches = _.filter(result.repoTypesList, repo => repo.type === 'remote');\n\n\t\t\t\tif (getFuncName === 'getForSearch') this.allRepoList = _.cloneDeep(_.union(dists, locals, caches));\n\t\t\t\telse if (getFuncName === 'getForPackageSearch') this.allPackageRepoList = _.cloneDeep(_.union(dists, locals, caches));\n\n\t\t\t\tlet lastIncluded = this.query.selectedRepositories || [];\n\n\t\t\t\tif (getFuncName === 'getForSearch') {\n\t\t\t\t\tthis.repoList = _.filter(this.allRepoList, (repo) => {\n\t\t\t\t\t\treturn !_.find(lastIncluded, {repoKey: repo.repoKey});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (getFuncName === 'getForPackageSearch') {\n\t\t\t\t\tthis.packageRepoList = _.filter(this.allPackageRepoList, (repo) => {\n\t\t\t\t\t\treturn !_.find(lastIncluded, {repoKey: repo.repoKey});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_createGrid() {\n\t\tif (this.currentSearch === 'package' && !this.packageSearchColumns) return;\n\n\t\tif (this.currentSearch == \"remote\" || this.currentSearch == \"archive\") {\n\t\t\tthis.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n\t\t\t                       .setColumns(this._getColumns())\n\t\t\t                       .setRowTemplate('default')\n\t\t\t                       .setGridData([]);\n\t\t} else {\n\t\t\tthis.gridOptions = this.artifactoryGridFactory.getGridInstance(this.$scope)\n\t\t\t                       .setColumns(this._getColumns())\n\t\t\t                       .setRowTemplate('default')\n\t\t\t                       .setMultiSelect()\n\t\t\t                       .setBatchActions(this._getBatchActions())\n\t\t\t                       .setGridData([]);\n\t\t}\n\n\t\tthis.gridOptions.isRowSelectable = (row) => {\n\t\t\tvar notRepository = row.entity.relativeDirPath !== '[repo]';\n\t\t\treturn notRepository && _.contains(row.entity.actions, 'Delete');\n\t\t};\n\t}\n\n\trefreshGrid() {\n\n\t\tlet defer = this.$q.defer();\n\n\t\tthis.showGrid = false;\n\t\tthis.$timeout(()=>{\n\t\t\tthis._createGrid();\n\n\t\t\t//This is for recalculating grid columns width\n\t\t\tthis.$timeout(()=>{\n\t\t\t\ttry {\n\t\t\t\t\twindow.dispatchEvent(new Event('resize'));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet resizeEvent = document.createEvent(\"Event\");\n\t\t\t\t\tresizeEvent.initEvent(\"resize\", false, true);\n\t\t\t\t\twindow.dispatchEvent(resizeEvent);\n\t\t\t\t}\n\t\t\t\tthis.$timeout(()=>{\n\t\t\t\t\tthis.showGrid = true;\n\t\t\t\t\tthis.resultsMsg = 'Search Results';\n\t\t\t\t\tdefer.resolve();\n\t\t\t\t});\n\t\t\t})\n\t\t})\n\n\t\treturn defer.promise;\n\t}\n\n\t_getBatchActions() {\n\t\treturn [\n\t\t\t{\n\t\t\t\ticon: 'clear',\n\t\t\t\tname: 'Delete',\n\t\t\t\tcallback: () => this.bulkDelete(this.currentSearch === 'trash')\n\t\t\t}\n\t\t]\n\t}\n\n\tbulkDelete(permanent) {\n\t\tlet selectedRows = this.gridOptions.api.selection.getSelectedRows();\n\t\tpermanent        = permanent || this.footerDao.getInfo().trashDisabled;\n\t\t//console.log(selectedRows);\n\t\t// Ask for confirmation before delete and if confirmed then delete bulk of users\n\t\tthis.modal.confirm(`Are you sure you want to ${permanent ? ' <span class=\"highlight-alert\">permanently</span> ' : ' '} delete ${selectedRows.length} items?`).then(() => {\n\t\t\tthis._deleteSingleSelected(selectedRows)\n\t\t});\n\t}\n\t_deleteSingleSelected(rows){\n\t\t//console.log(rows);\n\t\tif (rows.length === this.results.length) { //To prevent console error (RTFACT-13554)\n\t\t\tthis.gridOptions.api.grouping.clearGrouping()\n\t\t}\n\t\tlet elementsToDelete = _.map(rows, (row) => {\n\t\t\treturn {\n\t\t\t\tname: row.name,\n\t\t\t\tpath: this.currentSearch === 'trash'? ((row.originRepository + '/' + row.relativeDirPath).split('[root]').join('') + '/' + row.name).split('//').join('/') : row.relativePath,\n\t\t\t\trepoKey: row.repoKey\n\t\t\t}\n\n\t\t});\n\t\tthis.artifactSearchDao.delete({artifacts:elementsToDelete}).$promise.then(() => {\n\t\t\t// refresh the gridData in any case\n\t\t}).finally(()=>{\n\t\t\tthis.reSearch();\n\t\t\tthis.artifactoryState.setState('refreshTreeNextTime',true);\n\t\t});\n\t}\n\n\t_deleteSelected(rows, permanent){\n\t\tpermanent = permanent || this.footerDao.getInfo().trashDisabled;\n\t\tthis.modal.confirm(`Are you sure you wish to ${permanent ? ' <span class=\"highlight-alert\">permanently</span> ' : ' '} delete ${rows[0].name}?`)\n\t\t    .then(() => this._deleteSingleSelected(rows));\n\t}\n\n\t_getColumns() {\n\t\tswitch (this.currentSearch) {\n\t\t\tcase 'package': {\n\t\t\t\treturn this._getColumnsForPackageSearch(this.packageSearchColumns)\n\t\t\t}\n\t\t\tcase 'quick': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Artifact\",\n\t\t\t\t\t\tdisplayName: \"Artifact\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcellTemplate: this.commonGridColumns.downloadableColumn('autotest-quick-artifact'),\n\t\t\t\t\t\twidth: '25%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Path\",\n\t\t\t\t\t\tdisplayName: \"Path\",\n\t\t\t\t\t\tfield: \"relativeDirPath\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\tcellTemplate: '<div class=\"autotest-quick-path ui-grid-cell-contents\">{{ row.entity.relativeDirPath}}</div>',\n\t\t\t\t\t\twidth: '40%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Repository\",\n\t\t\t\t\t\tdisplayName: \"Repository\",\n\t\t\t\t\t\tfield: \"repoKey\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\tcellTemplate: '<div class=\"autotest-quick-repository ui-grid-cell-contents\">{{ row.entity.repoKey}}</div>',\n\t\t\t\t\t\twidth: '15%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Modified\",\n\t\t\t\t\t\tdisplayName: \"Modified\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"autotest-quick-modified ui-grid-cell-contents\">{{ row.entity.modifiedString }}</div>',\n\t\t\t\t\t\tfield: \"modifiedDate\",\n\t\t\t\t\t\twidth: '20%',\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdelete: {\n\t\t\t\t\t\t\t\tcallback: row => this._deleteSelected([row]),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tcase 'archive': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Name\",\n\t\t\t\t\t\tdisplayName: \"Name\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: '30%'\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Artifact\",\n\t\t\t\t\t\tdisplayName: \"Artifact\",\n\t\t\t\t\t\tfield: \"archiveName\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '20%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Artifact Path\",\n\t\t\t\t\t\tdisplayName: \"Artifact Path\",\n\t\t\t\t\t\tfield: \"archivePath\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '25%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Repository\",\n\t\t\t\t\t\tdisplayName: \"Repository\",\n\t\t\t\t\t\tfield: \"repoKey\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '10%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Modified\",\n\t\t\t\t\t\tdisplayName: \"Modified\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.modifiedString }}</div>',\n\t\t\t\t\t\tfield: \"modifiedDate\",\n\t\t\t\t\t\twidth: '15%',\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdelete: {\n\t\t\t\t\t\t\t\tcallback: row => this._deleteSelected([row]),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tcase 'gavc': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Artifact',\n\t\t\t\t\t\tdisplayName: 'Artifact',\n\t\t\t\t\t\tfield: 'name',\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: '20%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Group ID',\n\t\t\t\t\t\tdisplayName: 'Group ID',\n\t\t\t\t\t\tfield: 'groupID',\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '15%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Artifact ID',\n\t\t\t\t\t\tdisplayName: 'Artifact ID',\n\t\t\t\t\t\tfield: 'artifactID',\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '17%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version',\n\t\t\t\t\t\tdisplayName: 'Version',\n\t\t\t\t\t\tfield: 'version',\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '13%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Classifier',\n\t\t\t\t\t\tdisplayName: 'Classifier',\n\t\t\t\t\t\tfield: 'classifier',\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '10%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Repository',\n\t\t\t\t\t\tdisplayName: 'Repository',\n\t\t\t\t\t\tfield: 'repoKey',\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '10%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Modified\",\n\t\t\t\t\t\tdisplayName: \"Modified\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.modifiedString }}</div>',\n\t\t\t\t\t\tfield: \"modifiedDate\",\n\t\t\t\t\t\twidth: '15%',\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdelete: {\n\t\t\t\t\t\t\t\tcallback: row => this._deleteSelected([row]),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tcase 'property': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Item\",\n\t\t\t\t\t\tdisplayName: \"Item\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: '25%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Type\",\n\t\t\t\t\t\tdisplayName: \"Type\",\n\t\t\t\t\t\tfield: \"resultType\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">' +\n\t\t\t\t\t\t'<span jf-tooltip=\"{{ row.entity.resultType }}\" class=\"icon\" ng-class=\"{ \\'icon-local-repo\\': row.entity.resultType === \\'Repository\\', \\'icon-folder\\': row.entity.resultType === \\'Directory\\', \\'icon-general\\': row.entity.resultType === \\'File\\'}\"></span></div>',\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '8%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Path\",\n\t\t\t\t\t\tdisplayName: \"Path\",\n\t\t\t\t\t\tfield: \"relativeDirPath\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '37%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Repository\",\n\t\t\t\t\t\tdisplayName: \"Repository\",\n\t\t\t\t\t\tfield: \"repoKey\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '15%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Modified\",\n\t\t\t\t\t\tdisplayName: \"Modified\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.modifiedString }}</div>',\n\t\t\t\t\t\tfield: \"modifiedDate\",\n\t\t\t\t\t\twidth: '15%',\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdelete: {\n\t\t\t\t\t\t\t\tcallback: row => this._deleteSelected([row]),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tcase 'checksum': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Artifact\",\n\t\t\t\t\t\tdisplayName: \"Artifact\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: '25%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Path\",\n\t\t\t\t\t\tdisplayName: \"Path\",\n\t\t\t\t\t\tfield: \"relativeDirPath\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '45%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Repository\",\n\t\t\t\t\t\tdisplayName: \"Repository\",\n\t\t\t\t\t\tfield: \"repoKey\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\twidth: '15%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Modified\",\n\t\t\t\t\t\tdisplayName: \"Modified\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.modifiedString }}</div>',\n\t\t\t\t\t\tfield: \"modifiedDate\",\n\t\t\t\t\t\twidth: '15%',\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdelete: {\n\t\t\t\t\t\t\t\tcallback: row => this._deleteSelected([row]),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tcase 'remote': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Name\",\n\t\t\t\t\t\tdisplayName: \"Name\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: '20%',\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Path\",\n\t\t\t\t\t\tdisplayName: \"Path\",\n\t\t\t\t\t\tfield: \"path\",\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-bintray',\n\t\t\t\t\t\t\ttooltip: 'Show In Bintray',\n\t\t\t\t\t\t\tcallback: row => this.showInBintray(row)\n\t\t\t\t\t\t}],\n\t\t\t\t\t\twidth: '30%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Package\",\n\t\t\t\t\t\tdisplayName: \"Package\",\n\t\t\t\t\t\tfield: \"package\",\n\t\t\t\t\t\twidth: '25%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Released\",\n\t\t\t\t\t\tdisplayName: \"Released\",\n\t\t\t\t\t\tfield: \"release\",\n\t\t\t\t\t\twidth: '15%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Cached\",\n\t\t\t\t\t\tdisplayName: \"Cached\",\n\t\t\t\t\t\tfield: \"cached\",\n\t\t\t\t\t\tcellTemplate: this.commonGridColumns.booleanColumn('MODEL_COL_FIELD'),\n\t\t\t\t\t\twidth: '10%'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tcase 'trash': {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Artifact\",\n\t\t\t\t\t\tdisplayName: \"Artifact\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcellTemplate: this.commonGridColumns.downloadableColumn('autotest-trash-artifact'),\n\t\t\t\t\t\twidth: '25%',\n\t\t\t\t\t\tcustomActions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon: 'icon icon-trashcan-restore',\n\t\t\t\t\t\t\t\ttooltip: 'Restore To Original Path',\n\t\t\t\t\t\t\t\tcallback: row => this.restoreTrashItem(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Restore')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tdownload: {\n\t\t\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Original Path\",\n\t\t\t\t\t\tdisplayName: \"Original Path\",\n\t\t\t\t\t\tfield: \"relativeDirPath\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\tcellTemplate: '<div class=\"autotest-trash-origin-path ui-grid-cell-contents\">{{ row.entity.relativeDirPath}}</div>',\n\t\t\t\t\t\twidth: '40%',\n\t\t\t\t\t\tcustomActions: [{\n\t\t\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Original Repository\",\n\t\t\t\t\t\tdisplayName: \"Original Repository\",\n\t\t\t\t\t\tfield: \"originRepository\",\n\t\t\t\t\t\tallowGrouping: true,\n\t\t\t\t\t\tcellTemplate: '<div class=\"autotest-trash-origin-repository ui-grid-cell-contents\">{{ row.entity.originRepository}}</div>',\n\t\t\t\t\t\twidth: '15%'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Deleted Time\",\n\t\t\t\t\t\tdisplayName: \"Deleted Time\",\n\t\t\t\t\t\tcellTemplate: '<div class=\"autotest-trash-deleted ui-grid-cell-contents\">{{ row.entity.deletedTimeString }}</div>',\n\t\t\t\t\t\tfield: \"deletedTime\",\n\t\t\t\t\t\twidth: '20%',\n\t\t\t\t\t\tcustomActions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon: 'icon icon-clear',\n\t\t\t\t\t\t\t\ttooltip: ' Delete Permanently ', //Spaces are there to prevent text from splitting to two lines (RTFACT-13526)\n\t\t\t\t\t\t\t\tcallback: row => this._deleteSelected([row], true),\n\t\t\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete'),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t}\n\t}\n\n\t_createPackageSearchColumnsObject() {\n\t\tthis.packageSearchColumnsObject = {\n\t\t\tartifact: {\n\t\t\t\tname: \"Artifact\",\n\t\t\t\tdisplayName: \"Artifact\",\n\t\t\t\tfield: \"name\",\n\t\t\t\tsort: {\n\t\t\t\t\tdirection: this.uiGridConstants.ASC\n\t\t\t\t},\n\t\t\t\tcellTemplate: this.commonGridColumns.downloadableColumn(),\n\t\t\t\twidth: '25%',\n\t\t\t\tcustomActions: [{\n\t\t\t\t\ticon: 'icon icon-view',\n\t\t\t\t\ttooltip: 'View',\n\t\t\t\t\tcallback: row => this.viewCodeArtifact(row),\n\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'View')\n\t\t\t\t}],\n\t\t\t\tactions: {\n\t\t\t\t\tdownload: {\n\t\t\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpath: {\n\t\t\t\tname: \"Path\",\n\t\t\t\tdisplayName: \"Path\",\n\t\t\t\tfield: \"relativePath\",\n\t\t\t\tallowGrouping: true,\n\t\t\t\twidth: '40%',\n\t\t\t\tcustomActions: [{\n\t\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t\t}]\n\t\t\t},\n\t\t\trepo: {\n\t\t\t\tname: \"Repository\",\n\t\t\t\tdisplayName: \"Repository\",\n\t\t\t\tfield: \"repoKey\",\n\t\t\t\tallowGrouping: true,\n\t\t\t\twidth: '15%'\n\t\t\t},\n\t\t\tmodified: {\n\t\t\t\tname: \"Modified\",\n\t\t\t\tdisplayName: \"Modified\",\n\t\t\t\tcellTemplate: '<div class=\"ui-grid-cell-contents\">{{ row.entity.modifiedString }}</div>',\n\t\t\t\tfield: \"modifiedDate\",\n\t\t\t\twidth: '20%',\n\t\t\t\tactions: {\n\t\t\t\t\tdelete: {\n\t\t\t\t\t\tcallback: row => this._deleteSelected([row]),\n\t\t\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Delete')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tgroupID: {\n\t\t\t\tname: 'Group ID',\n\t\t\t\tdisplayName: 'Group ID',\n\t\t\t\tfield: 'groupID',\n\t\t\t\tallowGrouping: true,\n\t\t\t\twidth: '18%'\n\t\t\t},\n\t\t\tartifactID: {\n\t\t\t\tname: 'Artifact ID',\n\t\t\t\tdisplayName: 'Artifact ID',\n\t\t\t\tfield: 'artifactID',\n\t\t\t\tallowGrouping: true,\n\t\t\t\twidth: '18%'\n\t\t\t},\n\t\t\tversion: {\n\t\t\t\tname: 'Version',\n\t\t\t\tdisplayName: 'Version',\n\t\t\t\tfield: 'version',\n\t\t\t\tallowGrouping: true,\n\t\t\t\twidth: '18%'\n\t\t\t},\n\t\t\tclassifier: {\n\t\t\t\tname: 'Classifier',\n\t\t\t\tdisplayName: 'Classifier',\n\t\t\t\tfield: 'classifier',\n\t\t\t\tallowGrouping: true,\n\t\t\t\twidth: '18%'\n\t\t\t}\n\t\t}\n\n\t}\n\n\t_getColumnsForPackageSearch(columns) {\n\t\tlet columnsArray = [];\n\t\tcolumns.forEach((column)=> {\n\t\t\tif (!_.contains(column, '*')) {\n\t\t\t\tcolumnsArray.push(_.cloneDeep(this.packageSearchColumnsObject[column]));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet groupable = false;\n\t\t\t\tlet width;\n\t\t\t\tif (_.contains(column, '@')) {\n\t\t\t\t\tcolumn    = column.split('@').join('');\n\t\t\t\t\tgroupable = true;\n\t\t\t\t}\n\t\t\t\tif (_.contains(column, '!')) {\n\t\t\t\t\tlet splitted = column.split('!');\n\t\t\t\t\tcolumn       = splitted[0];\n\t\t\t\t\twidth        = splitted[1];\n\t\t\t\t}\n\n\t\t\t\tlet splitted = column.split('*');\n\t\t\t\tlet field    = splitted[0];\n\t\t\t\tlet name     = splitted[1];\n\t\t\t\tcolumnsArray.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tdisplayName: name,\n\t\t\t\t\tfield: 'extraField_' + field,\n\t\t\t\t\twidth: width || '18%',\n\t\t\t\t\tallowGrouping: groupable\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis._normalizeGridColumnWidths(columnsArray);\n\n\t\tif (!columnsArray[0].actions) columnsArray[0].actions = {};\n\t\tif (!columnsArray[0].actions.download) {\n\t\t\tcolumnsArray[0].actions.download = {\n\t\t\t\tcallback: row => this.downloadSelectedItems(row),\n\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'Download')\n\t\t\t}\n\t\t}\n\n\t\t//If no path field add 'show in tree' action to first column\n\t\tif (_.findIndex(columnsArray, 'name', 'Path') < 0) {\n\t\t\tif (!columnsArray[0].customActions) columnsArray[0].customActions = [];\n\t\t\tcolumnsArray[0].customActions = [{\n\t\t\t\ticon: 'icon icon-show-in-tree',\n\t\t\t\ttooltip: 'Show In Tree',\n\t\t\t\tcallback: row => this.showInTree(row),\n\t\t\t\tvisibleWhen: row => _.contains(row.actions, 'ShowInTree')\n\t\t\t}]\n\t\t}\n\t\treturn columnsArray;\n\t}\n\n\t_normalizeGridColumnWidths(columnsArray) {\n\t\tlet totalWidth = 0;\n\t\tfor (let key in columnsArray) {\n\t\t\tlet obj = columnsArray[key];\n\t\t\ttotalWidth += parseInt(obj.width);\n\t\t}\n\t\tlet scale = 100/totalWidth;\n\t\tfor (let key in columnsArray) {\n\t\t\tlet obj = columnsArray[key];\n\t\t\tlet origWidth = parseInt(obj.width);\n\t\t\tobj.width = (origWidth*scale) + '%';\n\t\t}\n\n\t}\n\n\n\tshowInTree(row) {\n\t\tlet relativePath;\n\t\tlet artifactPath;\n\t\tif (this.currentSearch === 'trash') {\n\t\t\trelativePath = (row.originRepository + \"/\" + row.relativeDirPath).split('[root]').join('');\n\t\t\tartifactPath = (row.repoKey + \"/\" + relativePath + \"/\" + row.name).split('//').join('/');\n\t\t}\n\t\telse {\n\t\t\trelativePath = row.relativePath ? (row.relativePath.startsWith('./') ? row.relativePath.substr(2) : row.relativePath) : '';\n\t\t\tartifactPath = row.repoKey + \"/\" + (relativePath || row.path);\n\t\t}\n\n\n\t\tlet archivePath = '';\n\t\tif (row.archiveName) {\n\t\t\tif(row.archivePath === '[root]') {\n\t\t\t\trow.archivePath = '';\n\t\t\t}\n\t\t\tarchivePath = row.repoKey + \"/\" + row.archivePath + row.archiveName;\n\t\t}\n\t\tlet path = (archivePath || artifactPath );\n\t\tthis.$state.go('artifacts.browsers.path', {\n\t\t\t\"browser\": \"tree\",\n\t\t\t\"tab\": \"General\",\n\t\t\t\"artifact\": path\n\t\t});\n\n\t}\n\n\t_updateStashStatus() {\n\t\tthis.stashResultsDao.get({name:'stash'}).$promise.then((data)=>{\n\t\t\tthis.stashedItemsCount = data.length;\n\t\t\tthis.showStashBox = true;\n\t\t\tif (data.length === 0) {\n\t\t\t\tthis.showStashBox = false;\n\t\t\t\tthis.savedToStash = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t_doStashAction(action) {\n\n\t\tlet payload = this._buildPayloadForStash();\n\t\tthis.stashResultsDao[action]({name: 'stash'},payload).$promise.then((response)=>{\n\t\t\tif (action === 'save' && response.status === 200) {\n\t\t\t\tthis.savedToStash = true;\n\t\t\t\tthis.duringStashAnimation = false;\n\t\t\t}\n\t\t\tthis._updateStashStatus();\n\t\t});\n\t}\n\n\tsaveToStash() {\n\t\tthis.showStashBox = true;\n\n\n\t\t/*let distanceRight = $('.repo-list-dropdown').width() + $('.repo-list-dropdown').offset().left - $('.repo-dnd-title').width() - $('.repo-dnd-title').offset().left;\n\t\t $('#stash-animation').css('right', distanceRight);*/\n\t\tlet distanceRight = $(document).width() - $('#stash-results-button').offset().left - $('#stash-results-button').width();\n\t\t$('#stash-animation').css({\n\t\t\t'right' : distanceRight,\n\t\t\t'animation-duration' : $(document).width() / 960\n\t\t});\n\n\t\tthis.$timeout(()=>{\n\t\t\tthis.duringStashAnimation = true;\n\t\t\t$('#stash-container').addClass('animate');\n\n\t\t\tthis.duringStashAnimation = true;\n\n\t\t\tthis._doStashAction('save');\n\t\t});\n\n\t}\n\n\taddToStash() {\n\t\tthis._doStashAction('add');\n\t}\n\n\tsubtractFromStash() {\n\t\tthis._doStashAction('subtract');\n\t}\n\n\tintersectWithStash() {\n\t\tthis._doStashAction('intersect');\n\t}\n\n\tgotoStash() {\n\t\tthis.JFrogEventBus.dispatch(EVENTS.ACTION_REFRESH_STASH);\n\t\tthis.$state.go('artifacts.browsers.path', {browser: 'stash', artifact: '', tab: 'StashInfo'});\n\t}\n\n\tclearStash() {\n\t\tthis.modal.confirm('Are you sure you want to clear stashed results? All items will be removed from stash.','Clear Stashed Results', {confirm: 'Clear'})\n\t\t    .then(() => {\n\t\t\t    this.stashResultsDao.delete({name: 'stash'}).$promise.then((response)=> {\n\t\t\t\t    this.JFrogEventBus.dispatch(EVENTS.ACTION_DISCARD_STASH);\n\t\t\t\t    if (response.status === 200) {\n\t\t\t\t\t    this.savedToStash = false;\n\t\t\t\t\t    this._updateStashStatus();\n\t\t\t\t\t    $('#stash-container').removeClass('animate');\n\t\t\t\t    }\n\t\t\t    });\n\t\t    });\n\t}\n\t_buildPayloadForStash() {\n\t\tlet searchType = this.currentSearch;\n\t\tif (searchType === 'checksum') searchType='quick';\n\t\tlet selectedRows = this.gridOptions.api.selection.getSelectedRows();\n\t\tlet rawResults = selectedRows.length ? selectedRows : this.results;\n\n\t\trawResults = _.filter(rawResults, (result)=> {\n\t\t\treturn !result.resultType || result.resultType == 'File';\n\t\t});\n\n\t\tlet payload = _.map(rawResults, (result)=>{\n\t\t\tlet retObj = {};\n\t\t\tretObj.type = searchType === 'archive' ? 'class' : searchType;\n\t\t\tretObj.repoKey = result.repoKey;\n\n\t\t\tif (searchType === 'archive') {\n\t\t\t\tif (result.archivePath==='[root]') result.archivePath = '';\n\t\t\t\tretObj.name = result.name;\n\t\t\t\tretObj.archivePath = result.archivePath + result.archiveName;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (result.relativePath==='[root]') result.relativePath = '';\n\t\t\t\tretObj.relativePath = result.relativePath;\n\t\t\t}\n\n\t\t\treturn retObj;\n\t\t});\n\n\t\treturn payload;\n\t}\n\n\tsetShowAQL(show) {\n\t\tthis.showAQL = show;\n\t\tif (show) {\n\t\t\tlet temp = this.aql;\n\t\t\tthis.aql = '';\n\t\t\tthis.$timeout(()=>{\n\t\t\t\tthis.aql = temp;\n\t\t\t})\n\t\t}\n\t}\n\n\tdownloadSelectedItems(row) {\n\t\t//        this.download(row.downloadLink);\n\t}\n\n\tgetProperties() {\n\t\tthis.artifactSearchDao.get({search: \"property\", action: \"keyvalue\"}).$promise.then((_propeties)=> {\n\t\t\tthis.propertiesOptions = _propeties.data;\n\t\t});\n\t}\n\n\tshowInBintray(row) {\n\t\tthis.$window.open('https://bintray.com/bintray/jcenter/' + row.package, '')\n\t}\n\tviewCodeArtifact(row) {\n\t\tlet name = row.name;\n\t\tif(_.startsWith(name, './')) {\n\t\t\tname = name.slice(2);\n\t\t}\n\t\tif (row.archiveName) {\n\t\t\tif(row.archivePath === '[root]') {\n\t\t\t\trow.archivePath = '';\n\t\t\t}\n\t\t\tthis.artifactViewSourceDao.fetch({\n\t\t\t\tarchivePath: row.archivePath + row.archiveName,\n\t\t\t\trepoKey: row.repoKey,\n\t\t\t\tsourcePath: name\n\t\t\t}).$promise\n\t\t\t    .then((result) => {\n\t\t\t\t    this.modal.launchCodeModal(row.name, result.source,\n\t\t\t\t\t    {name: row.type, json: true});\n\t\t\t    })\n\t\t} else {\n\t\t\tlet data = {\n\t\t\t\trepoKey: row.repoKey,\n\t\t\t\tpath: (row.relativePath || row.path)\n\t\t\t};\n\t\t\tthis.artifactActionsDao.perform({action: 'view'}, data).$promise\n\t\t\t    .then((result) => {\n\t\t\t\t    this.modal.launchCodeModal(row.name, result.data.fileContent,\n\t\t\t\t\t    {name: row.type, json: true});\n\t\t\t    });\n\t\t}\n\t}\n\n\trestoreTrashItem(row) {\n\t\tthis.actions.perform({name: 'RestoreToOriginalPath'},\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\tpath: (row.originRepository + '/' + row.relativeDirPath + '/' + row.name).split('[root]').join(''),\n\t\t\t\t\trepoKey: row.repoKey\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t    .then(()=>{\n\t\t\t    this.reSearch();\n\t\t    })\n\t}\n\n\tgetPrettySearchType(type) {\n\t\tif (type === 'trash') return 'Trash Can';\n\t\tif (type === 'remote') return 'JCenter';\n\t\tif (type === 'archive') return 'Archive Entries';\n\t\telse return _.capitalize(type);\n\t}\n\n\tcreateJcenter() {\n\t\tif(!this.currentUser.isAdmin()) {\n\t\t\tthis.notifications.create({warn: 'Only an admin user can create repositories.'});\n\t\t\treturn false;\n\t\t}\n\t\tthis.modal.confirm('A remote repository pointing to JCenter with default configuration values is about to be created.<br/>' +\n\t\t\t'If you wish to change it\\'s configuration you can do so from the Remote Repositories menu in the Admin section',\n\t\t\t'Creating JCenter remote repository')\n\t\t    .then(()=> {\n\t\t\t\t    this.repositoriesDao.createDefaultJcenterRepo().$promise\n\t\t\t\t        .then(() => this.isJcenterExists = true , () => '');\n\t\t\t    }\n\t\t    );\n\t}\n\n\tonPackageTypeChange() {\n\t\tif (this.selectedPackageType) {\n\t\t\tthis.$timeout(() => {\n\t\t\t\tif (this.packageController) this.packageController.onPackageTypeChange(this.selectedPackageType)\n\t\t\t}, 100);\n\t\t\tlocalStorage.lastPackageSearch = this.selectedPackageType.id;\n\t\t}\n\t}\n\n\t_trackGaEvent(searchType) {\n\t\tswitch (searchType) {\n\t\t\tcase 'quick' :\n\t\t\t\tif (this.$stateParams.fromHome) {\n\t\t\t\t\tthis.GoogleAnalytics.trackEvent('Homepage', 'Quick search');\n\t\t\t\t\tthis.$stateParams.fromHome = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Quick');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'package' :\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Package', this.query.selectedPackageType.displayName);\n\t\t\t\tbreak;\n\t\t\tcase 'archive' :\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Archive');\n\t\t\t\tbreak;\n\t\t\tcase 'property' :\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Property');\n\t\t\t\tbreak;\n\t\t\tcase 'checksum' :\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Checksum');\n\t\t\t\tbreak;\n\t\t\tcase 'remote' :\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Remote');\n\t\t\t\tbreak;\n\t\t\tcase 'trash' :\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Trash');\n\t\t\t\tbreak;\n\t\t\tdefault : {\n\t\t\t\tthis.GoogleAnalytics.trackEvent('Search', 'Unknown');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./states/search/search.controller.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport searchDescriptor from './search_descriptor';\n\nclass searchQueryMakerController {\n    constructor($q, $scope,$stateParams,$timeout) {\n\n        this.$q = $q;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.$scope = $scope;\n\n        this.whenGotPropertiesData = $q.defer();\n        this.whenInitiated = $q.defer();\n\n        this.orderIndex = 0;\n        this.initWatchers();\n    }\n\n    initWatchers() {\n        this.$scope.$watch('queryMaker.searchType',(newVal,oldVal) => {\n            if (newVal === 'package') return;\n            this.queryDescriptor = this.compileQueryDescriptor(_.find(searchDescriptor.searchTypes,(type)=>type.searchTypeName.toLowerCase() === newVal.toLowerCase()));\n            this.refreshAvailableCriteria();\n            if (!_.isEqual(this.$stateParams.searchType,this.searchType)) this.initQuery();\n            else if (!_.isEmpty(this.query)) this.initFromURLQuery();\n            else {\n                _.extend(this.query, this.queryDescriptor.staticPayload);\n                if (this.query.search === 'property') {\n                    this.initQuery();\n                }\n                this.whenInitiated.resolve();\n            }\n\n            this.focusField = false;\n            this.$timeout(()=>this.focusField = true);\n        });\n        this.$scope.$watch('queryMaker.repoList',(newVal,oldVal) => {\n            if (!newVal.length) return;\n            this.whenInitiated.promise.then(()=>{\n                this.selectionRepoList = _.map(newVal, (repo)=>{\n                    return {\n                        text: repo.repoKey,\n                        iconClass: repo._iconClass,\n                        isSelected: this.inititiatedByURL && this.query.selectedRepositories ? this.query.selectedRepositories.indexOf(repo.repoKey) !== -1 : false\n                    }\n                })\n                if (this.inititiatedByURL) delete this.inititiatedByURL;\n            })\n        });\n        this.$scope.$watch('queryMaker.propertiesData',(newVal,oldVal) => {\n            if (newVal) {\n                this.transformedPropertiesData = _.cloneDeep(newVal);\n                this.transformedPropertiesData.forEach((prop)=>{\n                    if (prop.propertyType === 'MULTI_SELECT') {\n                        prop.values = _.map(prop.values,(val)=>{\n                            return {\n                                text: val,\n                                isSelected: false\n                            }\n                        })\n                    }\n                })\n                this.propertySetKeys = _.sortBy(_.map(this.transformedPropertiesData,'key'));\n                this.whenGotPropertiesData.resolve();\n            }\n        });\n    }\n\n    initQuery() {\n        for (var key in this.query) delete this.query[key];\n\n        this.queryDescriptor.searchCriteria.forEach((criterion) => {\n            if (criterion.multi && !criterion.copy) {\n                this.query[criterion.field] = [];\n                if (criterion.default || criterion.visible) this.query[criterion.field].push({key: '', values: []});\n            }\n        })\n\n        _.extend(this.query, this.queryDescriptor.staticPayload);\n\n        this.whenInitiated.resolve();\n    }\n\n    initFromURLQuery() {\n//        console.log(this.query);\n        this.whenGotPropertiesData.promise.then(()=>{\n            for (var key in this.query) {\n                if (key === 'search') continue;\n                let criterion = _.find(this.queryDescriptor.searchCriteria,{field: key});\n                if (criterion &&  criterion.multi && this.query.search === 'property') {\n                    criterion.visible = false;\n                    if (this.query[key]) {\n                        for (let i in this.query[key]) {\n                            if (i>0) {\n                                let newCriterion = this._createMultiCriterionCopy(criterion);\n                                this.queryDescriptor.searchCriteria.push(newCriterion)\n                            }\n                            else {\n                                criterion.visible = true;\n                            }\n\n                            if (key === 'propertySetKeyValues') {\n                                let keyVal = this.query[key][i];\n                                let propData = _.find(this.transformedPropertiesData,{key: keyVal.key});\n                                if (propData.propertyType === 'MULTI_SELECT') {\n                                    keyVal.values.forEach((val) => {\n                                        let selectionObj = _.find(propData.values,{text: val});\n                                        if (selectionObj) selectionObj.isSelected = true;\n                                    })\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (criterion && !criterion.default && !criterion.multi) criterion.visible = true;\n                }\n            }\n\n            _.extend(this.query, this.queryDescriptor.staticPayload);\n\n            this.inititiatedByURL = true;\n            this.refreshAvailableCriteria();\n            this.$timeout(()=>{\n                if (this.canSearch()) this.search()\n            });\n\n            this.whenInitiated.resolve();\n        });\n    }\n\n    compileQueryDescriptor(descriptor) {\n        descriptor = _.cloneDeep(descriptor);\n        for (let i in descriptor.searchCriteria) {\n            let criterion = descriptor.searchCriteria[i];\n\n            if (_.isString(criterion)) {\n                let global = _.find(searchDescriptor.globalSearchCriteria, {id: criterion});\n                descriptor.searchCriteria[i] = _.cloneDeep(global);\n            }\n            else if (criterion.multi) {\n                criterion.index = 0;\n                criterion.nextIndex = criterion.default || criterion.visible ? 1 : 0;\n                if (criterion.default) {\n                    criterion.default = false;\n                    criterion.visible = true;\n                }\n            }\n            descriptor.searchCriteria[i].order = this.orderIndex;\n            this.orderIndex++;\n        }\n        return descriptor;\n    }\n\n    refreshAvailableCriteria() {\n        this.availableCriteria = this.queryDescriptor ? _.filter(this.queryDescriptor.searchCriteria,(criterion) => (!criterion.default && !criterion.visible) || (criterion.multi && !criterion.copy)) : [];\n    }\n\n    onRepoSelectionChange(criterion) {\n        let selectedRepos = _.filter(this.selectionRepoList, (repo) => repo.isSelected);\n        this.query[criterion.field] = _.map(selectedRepos,'text');\n    }\n\n    onAddCriteria() {\n\n        if (this.criterionToAdd.id === 'limitRepo') {\n            this.openLimitDropDown = true;\n        }\n        else {\n            this.openLimitDropDown = false;\n        }\n\n        if (this.criterionToAdd.multi) {\n            let newCriterion = this._createMultiCriterionCopy(this.criterionToAdd);\n            this.queryDescriptor.searchCriteria.push(newCriterion)\n            if (!this.query[newCriterion.field]) this.query[newCriterion.field] = [];\n            this.query[newCriterion.field].push({key: '', values: []});\n\n            newCriterion.order = this.orderIndex;\n\n            newCriterion.autofocus = true;\n            this.$timeout(()=>{newCriterion.autofocus = false},500);\n\n            this.orderIndex++;\n\n        }\n        else {\n            this.criterionToAdd.order = this.orderIndex;\n            this.orderIndex++;\n\n            this.criterionToAdd.visible = true;\n\n            let tempCrit = this.criterionToAdd;\n            tempCrit.autofocus = true;\n            this.$timeout(()=>{tempCrit.autofocus = false},500);\n\n            if (this.criterionToAdd.type === 'boolean') {\n                this.query[this.criterionToAdd.field] = true;\n            }\n            else if (this.criterionToAdd.id === 'limitRepo') {\n                this.query['selectedRepositories'] = [];\n            }\n        }\n        this.criterionToAdd = null;\n        this.refreshAvailableCriteria();\n    }\n\n    _createMultiCriterionCopy(orig) {\n        let newCriterion = _.cloneDeep(orig);\n        newCriterion.default = false;\n        newCriterion.visible = true;\n        newCriterion.copy = true;\n        newCriterion.index = orig.nextIndex;\n        orig.nextIndex++;\n        delete newCriterion.nextIndex;\n        return newCriterion;\n    }\n\n    clearMultiValPropSetSelectedValues(criterion) {\n        if (criterion.multi && criterion.type === 'keyValSet' && this.query[criterion.field][criterion.index]) {\n            let propSet = this.getPropertySetByKey(this.query[criterion.field][criterion.index].key);\n            if (propSet && propSet.propertyType === 'MULTI_SELECT') {\n                propSet.values.forEach((val)=>{val.isSelected=false});\n            }\n        }\n    }\n    removeCriterion(criterion) {\n        this.clearMultiValPropSetSelectedValues(criterion);\n        if (criterion.multi) {\n\n            if (criterion.copy) {\n                let criterionIndex = _.indexOf(this.queryDescriptor.searchCriteria,criterion);\n                this.queryDescriptor.searchCriteria.splice(criterionIndex,1);\n            }\n            else criterion.visible = false;\n\n            this.queryDescriptor.searchCriteria.forEach((crit)=>{\n                if (crit.field === criterion.field && crit.multi && crit.copy && crit.index > criterion.index) {\n                    crit.index--;\n                }\n                else if (crit.field === criterion.field && crit.multi && !crit.copy) {\n                    crit.nextIndex--;\n                }\n            })\n            if (this.query[criterion.field]) this.query[criterion.field].splice(criterion.index,1);\n\n        }\n        else {\n            criterion.visible = false;\n            delete this.query[criterion.field];\n            if (criterion.id === 'limitRepo') {\n                _.filter(this.selectionRepoList, (repo) => repo.isSelected).forEach((selRepo)=>{\n                    selRepo.isSelected=false\n                })\n                delete this.query['selectedRepositories'];\n            }\n\n        }\n        this.refreshAvailablePropertySetKeys();\n        this.refreshAvailableCriteria();\n    }\n\n    search() {\n        if (!this.canSearch()) return;\n        this.$timeout(()=>this.parentController.search(), 50);\n    }\n\n    getPropertySetByKey(key) {\n        return _.find(this.transformedPropertiesData, {key: key});\n    }\n    onMultiSelectPropertyChange(criterion) {\n        let keyVal = this.query[criterion.field][criterion.index];\n        let values = this.getPropertySetByKey(keyVal.key).values;\n\n        keyVal.values = _.map(_.filter(values, (val) => val.isSelected),'text');\n\n    }\n\n    onChangePropertySetKey(criterion) {\n        let keyVal = this.query[criterion.field][criterion.index];\n        keyVal.values = [];\n\n        this.refreshAvailablePropertySetKeys();\n\n    }\n\n    refreshAvailablePropertySetKeys() {\n        this.propertySetKeys = _.sortBy(_.map(this.transformedPropertiesData,'key'));\n        if (!this.query.propertySetKeyValues || !this.query.propertySetKeyValues.length) return;\n        else {\n            this.query.propertySetKeyValues.forEach((keyVal)=>{\n                if (keyVal.key) {\n                    let propType = this.getPropertySetByKey(keyVal.key).propertyType;\n                    if (propType === 'MULTI_SELECT') {\n                        let i = this.propertySetKeys.indexOf(keyVal.key);\n                        if (i !== -1) {\n                            this.propertySetKeys.splice(i,1);\n                        }\n                    }\n                }\n            })\n        }\n    }\n\n    canSearch() {\n        return this.form && this.form.$valid && this.isQueryValid();\n    }\n    isQueryValid() {\n        if (this.searchType === 'property') {\n            if ((!this.query.propertyKeyValues || !this.query.propertyKeyValues.length) &&\n                (!this.query.propertySetKeyValues || !this.query.propertySetKeyValues.length)) {\n                return false;\n            }\n            else if (this.query.propertySetKeyValues && this.query.propertySetKeyValues.length) {\n                let nullValFound = false;\n                for (let i in this.query.propertySetKeyValues) {\n                    if (!this.query.propertySetKeyValues[i].key) {\n                        nullValFound=true;\n                        break;\n                    }\n                }\n                if (nullValFound) return false;\n            }\n        }\n        else if (this.searchType === 'archive') {\n            if (!this.query.name && !this.query.path) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    clear() {\n        let refreshProps = false;\n        this.queryDescriptor.searchCriteria.forEach((criterion) => {\n            this.clearMultiValPropSetSelectedValues(criterion);\n\n            if (criterion.default || criterion.visible) {\n                if (criterion.type === 'string') {\n                    this.query[criterion.field] = '';\n                }\n                else if (criterion.type === 'boolean') {\n                    this.query[criterion.field] = false;\n                }\n                else if (criterion.type === 'array') {\n                    this.query[criterion.field] = [];\n                    _.filter(this.selectionRepoList, (repo) => repo.isSelected).forEach((selRepo)=>{\n                        selRepo.isSelected=false\n                    })\n                }\n                else if (criterion.type === 'keyVal' || criterion.type === 'keyValSet') {\n                    this.query[criterion.field][criterion.index] = {key: '', values: []};\n                    refreshProps = true;\n                }\n            }\n        });\n        if (refreshProps) this.refreshAvailablePropertySetKeys();\n    }\n}\n\nexport function searchQueryMaker() {\n    return {\n        restrict: 'E',\n        scope: {\n            searchType: '=',\n            query: '=',\n            repoList: '=',\n            propertiesData: '=',\n            parentController: '='\n        },\n        controller: searchQueryMakerController,\n        controllerAs: 'queryMaker',\n        bindToController: true,\n        templateUrl: 'states/search/search_query_maker.html'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./states/search/search_query_maker.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport default {\n    globalSearchCriteria: [\n        {\n            id: 'limitRepo',\n            label: 'Limit to Specific Repositories',\n            field: 'selectedRepositories',\n            type: 'array',\n            mandatory: false,\n            default: false\n        }\n    ],\n    searchTypes: [\n        {\n            searchTypeName: 'Quick',\n            endPoint: 'quick',\n            staticPayload: {\n                search: 'quick'\n            },\n            searchCriteria: [\n                {\n                    label: 'Value',\n                    field: 'query',\n                    type: 'string',\n                    mandatory: true,\n                    default: true\n                },\n                'limitRepo'\n            ]\n        },\n        {\n            searchTypeName: 'Archive',\n            endPoint: 'class',\n            staticPayload: {\n                search: 'class'\n            },\n            searchCriteria: [\n                {\n                    label: 'Name',\n                    field: 'name',\n                    type: 'string',\n                    mandatory: false,\n                    default: true\n                },\n                {\n                    label: 'Path',\n                    field: 'path',\n                    type: 'string',\n                    mandatory: false,\n                    default: false\n                },\n                {\n                    label: 'Search Class Resources Only',\n                    field: 'searchClassOnly',\n                    type: 'boolean',\n                    mandatory: false,\n                    default: false\n                },\n                {\n                    label: 'Exclude Inner Classes',\n                    field: 'excludeInnerClasses',\n                    type: 'boolean',\n                    mandatory: false,\n                    default: false\n                },\n                'limitRepo'\n            ]\n        },\n        {\n            searchTypeName: 'Property',\n            endPoint: 'property',\n            staticPayload: {\n                search: 'property'\n            },\n            searchCriteria: [\n                {\n                    label: 'Property',\n                    field: 'propertyKeyValues',\n                    type: 'keyVal',\n                    multi: true,\n                    mandatory: true,\n                    default: true\n                },\n                {\n                    label: 'Property Set',\n                    field: 'propertySetKeyValues',\n                    type: 'keyValSet',\n                    multi: true,\n                    mandatory: true,\n                    default: false\n                },\n                'limitRepo'\n            ]\n        },\n        {\n            searchTypeName: 'Checksum',\n            endPoint: 'checksum',\n            staticPayload: {\n                search: 'checksum'\n            },\n            searchCriteria: [\n                {\n                    label: 'Checksum',\n                    field: 'checksum',\n                    type: 'string',\n                    mandatory: true,\n                    default: true\n                },\n                'limitRepo'\n            ]\n        },\n        {\n            searchTypeName: 'Remote',\n            endPoint: 'remote',\n            staticPayload: {\n                search: 'remote'\n            },\n            searchCriteria: [\n                {\n                    label: 'Search for',\n                    field: 'searchKey',\n                    type: 'string',\n                    mandatory: true,\n                    default: true\n                }\n            ]\n        },\n        {\n            searchTypeName: 'Trash',\n            endPoint: 'trash',\n            staticPayload: {\n                search: 'trash'\n            },\n            searchCriteria: [\n                {\n                    label: 'Query',\n                    field: 'query',\n                    type: 'string',\n                    mandatory: true,\n                    default: true\n                },\n                {\n                    label: 'Checksum Search',\n                    field: 'isChecksum',\n                    type: 'boolean',\n                    mandatory: false,\n                    default: false\n                }\n            ]\n        }\n    ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/search/search_descriptor.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass packageSearchController {\n    constructor($scope, $state, $stateParams, ArtifactPackageSearchDao, $timeout, $q, ArtifactoryFeatures) {\n        this.queryFields = [];\n\n        this.$q = $q;\n        this.$state = $state;\n        this.$scope = $scope;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.artifactPackageSearchDao = ArtifactPackageSearchDao;\n\n\n        this.isOss = ArtifactoryFeatures.isOss();\n\n    }\n\n    $onInit() {\n        this.parentController.packageController = this;\n        this.$scope.$watch('packageSearch.repoList',(newVal,oldVal) => {\n            if (!newVal || !newVal.length) return;\n            this.rawRepos = newVal;\n            this.refreshRepoList();\n        });\n        this.init();\n    }\n\n    refreshRepoList() {\n        this.selectionRepoList = _.map(this.getFilteredRepoList(this.rawRepos, this.selectedPackageType ? this.selectedPackageType.id : undefined), (repo)=>{\n            return {\n                text: repo.repoKey,\n                iconClass: repo._iconClass,\n                isSelected: false\n            }\n        })\n    }\n\n    init() {\n        if (this.query.selectedPackageType) {\n            this.selectedPackageType = this.query.selectedPackageType;\n\n            this.onPackageTypeChange().then(()=>{\n                if (this.query.packagePayload) {\n                    let runSearch = false;\n                    this.query.packagePayload.forEach((queryItem)=>{\n                        if (this.rawQuery[queryItem.id]) {\n                            this.rawQuery[queryItem.id].values = queryItem.values.join(',');\n                            let queryField = _.find(this.queryFields,{id: queryItem.id});\n                            if (queryField.id !== 'repo') runSearch = true;\n                            if (queryField && !queryField.default) {\n                                if (queryField.id !== 'repo') {\n                                    queryField.visible = true;\n                                }\n                                else {\n                                    let queryRepos = _.find(this.query.packagePayload,{id: 'repo'}).values;\n                                    if (queryRepos.length) queryField.visible = true;\n                                    else {\n                                        let i = _.findIndex(this.query.packagePayload,{id: 'repo'})\n                                        this.query.packagePayload.splice(i,1);\n                                    }\n\n                                    this.selectionRepoList.forEach((repo)=>{\n                                        if (queryRepos.indexOf(repo.text) !== -1) {\n                                            repo.isSelected = true;\n                                        }\n                                    })\n                                }\n                            }\n                        }\n                    })\n                    if (this.query.selectedPackageType.id === 'dockerV1') {\n                        this.queryFields.push({\n                            id: 'dockerV1',\n                            displayName: 'V1 Images',\n                            visible: true\n                        })\n                    }\n                    this.refreshAvailableCriteria();\n                    this.onRepoSelectionChange();\n                    if (runSearch) this.$timeout(()=>{\n                        if (this.canSearch()) this.search();\n                    })\n\n                }\n                else if (this.query.selectedPackageType.id === 'gavc'){\n                    for (let key in this.rawQuery) {\n                        this.rawQuery[key].values = this.query[key];\n                        let queryField = _.find(this.queryFields,{id: key});\n                        if (queryField && this.query[key] && !queryField.default) {\n                            queryField.visible = true;\n                        }\n                    }\n                    this.$timeout(()=>{\n                        if (this.canSearch()) this.search();\n                        else this.parentController.refreshGrid();\n                    });\n                }\n                else this.parentController.refreshGrid();\n            });\n        }\n        else {\n            this.parentController.refreshGrid();\n        }\n\n        this.artifactPackageSearchDao.availablePackages().$promise.then((data)=> {\n            data = _.filter(data, (packageType)=> {\n                return !packageType.id.startsWith('docker') && (!this.isOss || packageType.id === \"gavc\");\n            });\n            let i = 0;\n            _.forEach(data, () => {\n                if (data[i].displayName === \"GAVC\") {\n                    data[i].displayName = \"Maven GAVC\";\n                }\n                i++;\n            });\n            if (!this.isOss) {\n                data.unshift({\n                    id: 'dockerV2',\n                    icon: 'docker',\n                    displayName: 'Docker'\n                });\n            }\n\n            this.availablePackageTypes = _.sortBy(data, (pack) => {\n                return pack.displayName;\n            });\n\n            if (this.isOss) {\n                this.parentController.availablePackageTypes = this.availablePackageTypes;\n            }\n        })\n    }\n\n    onPackageTypeChange(selectedPackageType) {\n        var defer = this.$q.defer();\n\n        if (selectedPackageType && selectedPackageType === this.selectedPackageType) {\n            defer.resolve();\n            return defer.promise;\n        }\n\n        this.rawQuery = {};\n        this.$timeout(()=>{\n            if (selectedPackageType) {\n                this.selectedPackageType = selectedPackageType\n            } else {\n                this.parentController.selectedPackageType = this.selectedPackageType;\n            }\n\n            this.refreshRepoList();\n\n            this.query.selectedPackageType = this.selectedPackageType;\n            this.parentController.updateUrl();\n            if (this.selectedPackageType.id === 'gavc') {\n                let gavcFields = [\n                    {id: 'groupID', displayName: 'Group ID', allowedComparators: '', default: true},\n                    {id: 'artifactID', displayName: 'Artifact ID', allowedComparators: '', default: true},\n                    {id: 'version', displayName: 'Version', allowedComparators: '', default: true},\n                    {id: 'classifier', displayName: 'Classifier', allowedComparators: '', default: false},\n                    {id: 'repo', displayName: '', allowedComparators: ''},\n                ];\n                this.queryFields = gavcFields;\n\n                this.refreshAvailableCriteria();\n\n                this.queryFields.forEach((field)=>{\n                    this.rawQuery[field.id] = {comparator: field.allowedComparators[0]};\n                });\n                defer.resolve();\n            }\n            else {\n                this.artifactPackageSearchDao.queryFields({},{packageType:this.selectedPackageType.id}).$promise.then((data)=>{\n                    if (this.selectedPackageType.id === 'nuget') {\n                        data = _.filter(data,(field)=>{\n                            return field.id !== 'nugetTags' && field.id !== 'nugetDigest';\n                        })\n                    }\n                    else if (this.selectedPackageType.id === 'dockerV2') {\n                        data = _.filter(data,(field)=>{\n                            return field.id !== 'dockerV2TagPath';\n                        })\n                    }\n                    this.queryFields = data;\n                    this.queryFields.forEach((field)=>{\n                        field.default = field.visibleByDefault;\n                        this.rawQuery[field.id] = {comparator: field.allowedComparators[0]};\n                    });\n\n                    this.refreshAvailableCriteria();\n\n                    defer.resolve();\n                });\n            }\n        });\n\n        this.focusField = false;\n        this.$timeout(()=>this.focusField = true);\n\n        return defer.promise;\n    }\n\n    _transformQuery(rawQuery) {\n        let transformed;\n        if (this.selectedPackageType.id === 'gavc') {\n            transformed = {};\n            transformed.search = 'gavc';\n            for (let key in rawQuery) {\n                if (rawQuery[key].values) {\n                    transformed[key] = rawQuery[key].values || '';\n                }\n            }\n            if (this.selectedRepos) transformed.selectedRepositories = this.selectedRepos;\n        }\n        else {\n            transformed = [];\n            for (let key in rawQuery) {\n                if (rawQuery[key].values) {\n                    if (key !== 'repo') transformed.push({\n                        id: key,\n                        /*\n                         comparator: rawQuery[key].comparator,\n                         */\n                        values: rawQuery[key].values.split(',')\n                    })\n                }\n            }\n            let repoField = _.find(this.queryFields,{id: 'repo'});\n\n            if (repoField && repoField.visible) transformed.push({\n                id: 'repo',\n                values: this.selectedRepos || []\n            })\n        }\n\n\n\n        return transformed;\n    }\n\n    canSearch() {\n        let ret = false;\n        if (this.rawQuery) {\n            for (let key in this.rawQuery) {\n                if (key !== 'repo' && this.rawQuery[key].values) {\n                    ret = true;\n                    break;\n                }\n            }\n        }\n        return ret;\n    }\n\n    search() {\n        if (!this.canSearch()) return;\n\n        let transformedQuery = this._transformQuery(this.rawQuery);\n        for (var key in this.query) delete this.query[key];\n        if (_.isArray(transformedQuery)) {\n            this.query.packagePayload = transformedQuery;\n        }\n        else { //gavc\n            _.extend(this.query,transformedQuery);\n        }\n        this.query.selectedPackageType = this.selectedPackageType;\n        this.parentController.packageSearchColumns = this.getColumnsByPackage();\n        this.parentController.refreshGrid().then(()=>{\n            this.$timeout(()=>this.parentController.search());\n        })\n\n    }\n    clear() {\n        for (let key in this.rawQuery) {\n            let field = this.rawQuery[key];\n            if (field.values) delete field.values;\n        }\n\n        _.filter(this.selectionRepoList, (repo) => repo.isSelected).forEach((repoSel)=>{\n            repoSel.isSelected = false;\n        })\n        delete this.selectedRepos;\n    }\n\n    getColumnsByPackage() {\n\n        switch(this.selectedPackageType.id) {\n            case 'gavc':\n                return ['artifact','groupID','artifactID','version','classifier','repo','path','modified'];\n                break;\n            case 'dockerV1':\n                return ['dockerV1Image*Image@','dockerV1Tag*Tag@','repo','modified'];\n                break;\n            case 'dockerV2':\n                return ['dockerV2Image*Image@','dockerV2Tag*Tag@','repo','modified'];\n                break;\n            case 'nuget':\n                return ['nugetPackageId*Package ID','nugetVersion*Version@','repo','path','modified'];\n                break;\n            case 'npm':\n                return ['npmName*Package Name','npmVersion*Version@','npmScope*Scope@','repo','path','modified'];\n                break;\n            case 'puppet':\n                return ['puppetName*Name','puppetVersion*Version@','repo','path','modified'];\n                break;\n            case 'bower':\n                return ['bowerName*Package Name','bowerVersion*Version@','repo','path','modified'];\n                break;\n            case 'debian':\n                return ['artifact','repo','path','debianDistribution*Distribution@','debianComponent*Component@','debianArchitecture*Architecture@','modified'];\n                break;\n            case 'pypi':\n                return ['pypiName*Name','pypiVersion*Version@','repo','path','modified'];\n                break;\n            case 'gems':\n                return ['gemName*Name','gemVersion*Version@','repo','path','modified'];\n                break;\n            case 'rpm':\n                return ['rpmName*Name','rpmVersion*Version@','rpmArchitecture*Architecture@','repo','path','modified'];\n                break;\n            case 'vagrant':\n                return ['vagrantName*Box Name','vagrantVersion*Box Version@','vagrantProvider*Box Provider@','repo','path','modified'];\n                break;\n            case 'conan':\n                return ['conanName*Name@','conanVersion*Version@','conanUser*User@','conanChannel*Channel@','repo','modified'];\n                break;\n            default:\n                return ['artifact','repo','path','modified'];\n        }\n\n    }\n\n    refreshAvailableCriteria() {\n        if (this.queryFields) {\n            let criteria = _.filter(this.queryFields,(criterion) => !criterion.default && !criterion.visible);\n\n            this.availableCriteria = _.map(criteria,(criterion) => {\n                if (criterion.id === 'repo') {\n                    criterion.displayName = 'Limit to Specific Repositories';\n                }\n                return criterion;\n            })\n\n            if (this.selectedPackageType.id === 'dockerV2') {\n                this.availableCriteria.push({\n                    id: 'dockerV1',\n                    displayName: 'V1 Images'\n                })\n            }\n        }\n        else {\n            this.availableCriteria = [];\n        }\n    }\n\n    onAddCriteria() {\n        if (this.criterionToAdd.id === 'dockerV1') {\n            //            this.selectedPackageType = _.find(this.availablePackageTypes,{id: 'dockerV1'});\n            this.selectedPackageType.id = this.criterionToAdd.id;\n            this.onPackageTypeChange().then(()=>{\n                this.queryFields.push({\n                    id: 'dockerV1',\n                    displayName: 'V1 Images',\n                    visible: true\n                })\n            })\n        }\n        else if (this.criterionToAdd.id === 'repo') {\n            this.openLimitDropDown=true;\n            this.selectedRepos = [];\n        }\n        else {\n            let tempCrit = this.criterionToAdd;\n            tempCrit.autofocus = true\n            this.$timeout(()=>{tempCrit.autofocus = false},500)\n        }\n        this.criterionToAdd.visible = true;\n        this.criterionToAdd = null;\n        this.refreshAvailableCriteria();\n    }\n    removeCriterion(criterion) {\n        criterion.visible = false;\n        delete this.rawQuery[criterion.id];\n        if (criterion.id === 'repo') {\n            _.filter(this.selectionRepoList, (repo) => repo.isSelected).forEach((selRepo)=>{\n                selRepo.isSelected=false\n            })\n            delete this.selectedRepos;\n        }\n        else if (criterion.id === 'dockerV1') {\n            this.selectedPackageType.id = 'dockerV2';\n            this.onPackageTypeChange();\n        }\n\n        this.refreshAvailableCriteria();\n    }\n\n    onRepoSelectionChange(criterion) {\n        let selectedRepos = _.filter(this.selectionRepoList, (repo) => repo.isSelected);\n        this.selectedRepos = _.map(selectedRepos,'text');\n    }\n\n    getFilteredRepoList(unfiltered, packageType) {\n\n        //        let lastIncluded = this.query.selectedRepositories || [];// (this.$stateParams.searchParams && this.$stateParams.searchParams.selectedRepos) ? this.$stateParams.searchParams.selectedRepos : [];\n\n        if (!packageType) return unfiltered;\n\n        let filterFunc = (repo)=>{\n            let ret;\n            if (packageType.startsWith('docker')) {\n                if (packageType.endsWith('V1')) ret = repo.repoType.toLowerCase() === 'docker' && repo.dockerApiVersion === 'V1';\n                else if (packageType.endsWith('V2')) ret = repo.repoType.toLowerCase() === 'docker' && repo.dockerApiVersion === 'V2';\n            }\n            else if (packageType === 'rpm') {\n                ret = repo.repoType.toLowerCase() === 'yum';\n            }\n            else if (packageType === 'gavc') {\n                ret = repo.repoType.toLowerCase() === 'maven' || repo.repoType.toLowerCase() === 'ivy' || repo.repoType.toLowerCase() === 'sbt' || repo.repoType.toLowerCase() === 'gradle';\n            }\n            else ret = repo.repoType.toLowerCase() === packageType.toLowerCase();\n\n            return ret;\n        };\n\n        return _.filter(unfiltered,filterFunc);\n    }\n\n}\n\nexport function packageSearch() {\n    return {\n        restrict: 'E',\n        scope: {\n            query: '=',\n            parentController: '=',\n            repoList: '='\n        },\n        controller: packageSearchController,\n        controllerAs: 'packageSearch',\n        bindToController: true,\n        templateUrl: 'states/search/package_search.html'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/search/package_search.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport PackagesNativeController from \"./native.controller\";\n\nexport const MODULE_PACKAGE_NATIVE = 'packages';\n\nfunction NativeConfig($stateProvider) {\n    $stateProvider\n            .state({\n                name: 'packagesNative',\n                url: '/packages/{subRouterPath:JFrogSubRouterPath}',\n                controller: 'PackagesNativeController',\n                controllerAs: '$ctrl',\n                template: require('./native.view.html'),\n                parent: 'app-layout',\n            });\n}\n\nangular.module(MODULE_PACKAGE_NATIVE, [])\n        .config(NativeConfig)\n        .controller('PackagesNativeController', PackagesNativeController);\n\n\n\n// WEBPACK FOOTER //\n// ./states/package_native/native.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport field_options from '../../constants/field_options.constats';\n\nexport default class PackagesNativeController {\n\tconstructor($state, $scope, PackagesDAO, $q, FooterDao, ArtifactoryFeatures, User, ArtifactoryStorage) {\n\t\tthis.$state = $state;\n\t\tthis.$scope = $scope;\n\t\tthis.$q = $q;\n\t\tthis.packagesDAO = PackagesDAO;\n\t\tthis.footerDao = FooterDao;\n\t\tthis.artifactoryStorage = ArtifactoryStorage;\n\n\t\tif (User.currentUser.name === 'anonymous' && !User.currentUser.anonAccessEnabled) {\n\t\t\t$state.go('login');\n\t\t\treturn;\n\t\t}\n\t\tif (ArtifactoryFeatures.isOss()) {\n\t\t\t$state.go('home');\n\t\t\treturn;\n\t\t}\n\n        // this.disabledPackageTypes = [];\n\t\t// if (!localStorage._enableNativeNpm) this.disabledPackageTypes.push('npm');\n\n\t\tthis.hostData = {\n            getPackageTypes: () => this.getPackageTypes(),\n            isXrayEnabled: () => this.isXrayEnabled(),\n            showExtraInfo: () => this.showExtraInfo(),\n\n            getRepos: (params) => this.getRepos(params),\n            getPackages: (params) => this.getPackages(params),\n            getPackagesCount: (params) => this.getPackagesCount(params),\n            getPackage: (params) => this.getPackage(params),\n            getVersion: (params) => this.getVersion(params),\n            getVersionData: (params) => this.getVersionData(params),\n            getPackageExtraInfo: (params) => this.getPackageExtraInfo(params),\n            getVersionExtraInfo: (params) => this.getVersionExtraInfo(params),\n            getPackageSummary: (params) => this.getPackageSummary(params),\n            getVersionSummary: (params) => this.getVersionSummary(params),\n            getPackageSummaryExtraInfo: (params) => this.getPackageSummaryExtraInfo(params),\n            getVersionSummaryExtraInfo: (params) => this.getVersionSummaryExtraInfo(params),\n            getPackageDownloadsCount: (params) => this.getPackageDownloadsCount(params),\n            getVersionDownloadsCount: (params) => this.getVersionDownloadsCount(params),\n            getManifest: (params) => this.getManifest(params),\n\n            cancelPackageExtraInfo: () => this.cancelPackageExtraInfo(),\n            cancelVersionExtraInfo: () => this.cancelVersionExtraInfo(),\n\n            showInTree: (params) => this.showInTree(params),\n        }\n\t}\n\n\tgetPackageTypes() {\n\t\tlet defferd = this.$q.defer();\n\t\tlet pkgTypes = field_options.repoPackageTypes.map((t) => {\n\t\t\treturn {\n\t\t\t\tvalue: t.value,\n\t\t\t\tdisplayText: t.text,\n\t\t\t\ticonClass: `icon-${t.icon}`\n\t\t\t};\n\t\t});\n\t\tdefferd.resolve(pkgTypes);\n\t\treturn defferd.promise;\n\t}\n\n\tgetPackages(params) {\n        return this.packagesDAO.getPackages(params.pathAndQuery, params.payload).$promise;\n\t}\n\n\tgetPackagesCount(params) {\n        return this.packagesDAO.getPackagesCount(_.extend(params.pathAndQuery,{$no_spinner: true}), params.payload).$promise;\n\t}\n\n\tgetRepos(params) {\n\t\treturn this.packagesDAO.getRepos(params.pathAndQuery).$promise;\n\t}\n\n\tgetPackage(params) {\n        return this.packagesDAO.getPackage(params.pathAndQuery, params.payload).$promise;\n\t}\n\n\tgetPackageSummary(params) {\n        return this.packagesDAO.getPackageSummary(params.pathAndQuery, params.payload).$promise;\n\t}\n\tgetPackageSummaryExtraInfo(params) {\n        return this.packagesDAO.getPackageSummaryExtraInfo(_.extend(params.pathAndQuery,{$no_spinner: true}), params.payload).$promise;\n\t}\n\n\tgetPackageExtraInfo(params) {\n\t    if (params.pathAndQuery.packageType === 'docker') {\n            return this.packagesDAO.getDockerPackageExtraInfo(_.extend(params.pathAndQuery,{$no_spinner: true})).$promise;\n        }\n        else {\n            return this.packagesDAO.getPackageExtraInfo(_.extend(params.pathAndQuery,{$no_spinner: true}), params.payload).$promise;\n        }\n\t}\n\n\tgetVersionExtraInfo(params) {\n\t\treturn this.packagesDAO.getVersionExtraInfo(_.extend(params.pathAndQuery,{$no_spinner: true}), params.payload).$promise;\n\t}\n\n    cancelPackageExtraInfo() {\n\t    this.packagesDAO.$cancelAll('getPackageExtraInfo');\n    }\n\n    cancelVersionExtraInfo() {\n\t    this.packagesDAO.$cancelAll('getVersionExtraInfo');\n    }\n\n\tgetPackageDownloadsCount(params) {\n\t\treturn this.packagesDAO.getPackageDownloadsCount(_.extend(params.pathAndQuery,{$no_spinner: true})).$promise;\n\t}\n\n\tgetVersionDownloadsCount(params) {\n\t\treturn this.packagesDAO.getVersionDownloadsCount(_.extend(params.pathAndQuery,{$no_spinner: true})).$promise;\n\t}\n\n\tgetManifest(params) {\n\t\treturn this.packagesDAO.getManifest(params.pathAndQuery).$promise;\n\t}\n\n\tgetVersion(params) {\n\t\treturn this.packagesDAO.getVersion(params.pathAndQuery).$promise;\n\t}\n\n\tgetVersionData(params) {\n\t\treturn this.packagesDAO.getVersionData(_.extend(params.pathAndQuery,{$no_spinner: true})).$promise;\n\t}\n\n    getVersionSummary(params) {\n        return this.packagesDAO.getVersionSummary(params.pathAndQuery, params.payload).$promise;\n    }\n\n    getVersionSummaryExtraInfo(params) {\n        return this.packagesDAO.getVersionSummaryExtraInfo(_.extend(params.pathAndQuery,{$no_spinner: true}), params.payload).$promise;\n    }\n\n\n\t// TODO: When the product team will decide on phase 2 (adding xray) , replace the 'false' value\n\tisXrayEnabled() {\n\t\treturn this.footerDao.get(true).then((footerData) => {\n\t\t\treturn footerData.xrayEnabled && footerData.xrayConfigured && footerData.xrayLicense;\n\t\t});\n\t}\n\n    showExtraInfo() {\n//\t\treturn this.$q.when({showExtraInfo:true})\n        return this.packagesDAO.showExtraInfo().$promise;\n    }\n\n\tshowInTree(pathParams) {\n\t\tlet browser = this.artifactoryStorage.getItem('BROWSER') || 'tree';\n\t\tif (browser === 'stash') {\n\t\t\tbrowser = 'tree';\n\t\t}\n\n        let path = pathParams.fullpath || `${pathParams.repo}/${pathParams.package}/${pathParams.version}`;\n\n\t\tthis.$state.go('artifacts.browsers.path', {\n\t\t\ttab: 'General',\n\t\t\tartifact: path,\n\t\t\tbrowser: browser\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./states/package_native/native.controller.js","module.exports = \"<!--\\n  ~ Artifactory is a binaries repository manager.\\n  ~ Copyright (C) 2018 JFrog Ltd.\\n  ~\\n  ~ Artifactory is free software: you can redistribute it and/or modify\\n  ~ it under the terms of the GNU Affero General Public License as published by\\n  ~ the Free Software Foundation, either version 3 of the License, or\\n  ~ (at your option) any later version.\\n  ~\\n  ~ Artifactory is distributed in the hope that it will be useful,\\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n  ~ GNU Affero General Public License for more details.\\n  ~\\n  ~ You should have received a copy of the GNU Affero General Public License\\n  ~ along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\\n  -->\\n<packages-native-component\\n        host-data=\\\"$ctrl.hostData\\\"\\n        disabled-package-types=\\\"$ctrl.disabledPackageTypes\\\"\\n        id=\\\"package-native-component\\\">\\n</packages-native-component>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./states/package_native/native.view.html\n// module id = 376\n// module chunks = 5"],"sourceRoot":""}